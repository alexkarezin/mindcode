    33 instructions before optimizations.
     2 instructions eliminated by DeadCodeEliminator (1 iterations).
     1 instructions eliminated by SingleStepJumpEliminator (1 iterations).
     4 instructions eliminated by OutputTempEliminator.
     2 instructions eliminated by ImproveNegativeConditionalJumps.
     1 instructions eliminated by JumpOverJumpEliminator.
     3 loops improved by LoopOptimizer.
     2 instructions eliminated by LoopOptimizer.
    21 instructions after optimizations.

Modifications by DeadCodeEliminator, iteration 1:
 
    13 op lessThanEq __tmp4 a item
    14 jump __label6 equal __tmp4 false
    15 jump __label5 always
-    * set __tmp5 null
    16 jump __label7 always
    17 label __label6
-    * set __tmp5 null
    18 label __label7
    19 op add __tmp6 j 1
    20 write a ARRAY __tmp6

Modifications by SingleStepJumpEliminator, iteration 1:
 
    13 op lessThanEq __tmp4 a item
    14 jump __label6 equal __tmp4 false
    15 jump __label5 always
-    * jump __label7 always
    16 label __label6
    17 label __label7
    18 op add __tmp6 j 1

Modifications by OutputTempEliminator, iteration 1:
 
     1 set i 1
     2 label __label0
     3 jump __label2 greaterThanEq i 128
-    * read __tmp0 ARRAY i
-    * set item __tmp0
-    * op sub __tmp1 i 1
-    * set j __tmp1
+    4 read item ARRAY i
+    5 op sub j i 1
     6 label __label3
     7 op greaterThanEq __tmp2 j 0
     8 jump __label5 equal __tmp2 false
-    * read __tmp3 ARRAY j
-    * set a __tmp3
+    9 read a ARRAY j
    10 op lessThanEq __tmp4 a item
    11 jump __label6 equal __tmp4 false
    12 jump __label5 always
 
    14 label __label7
    15 op add __tmp6 j 1
    16 write a ARRAY __tmp6
-    * op sub __tmp7 j 1
-    * set j __tmp7
+   17 op sub j j 1
    18 label __label4
    19 jump __label3 always
    20 label __label5

Modifications by ImproveNegativeConditionalJumps, iteration 1:
 
     4 read item ARRAY i
     5 op sub j i 1
     6 label __label3
-    * op greaterThanEq __tmp2 j 0
-    * jump __label5 equal __tmp2 false
+    7 jump __label5 lessThan j 0
     8 read a ARRAY j
-    * op lessThanEq __tmp4 a item
-    * jump __label6 equal __tmp4 false
+    9 jump __label6 greaterThan a item
    10 jump __label5 always
    11 label __label6
    12 label __label7

Modifications by JumpOverJumpEliminator, iteration 1:
 
     6 label __label3
     7 jump __label5 lessThan j 0
     8 read a ARRAY j
-    * jump __label6 greaterThan a item
-    * jump __label5 always
+    9 jump __label5 lessThanEq a item
    10 label __label6
    11 label __label7
    12 op add __tmp6 j 1

Modifications by LoopOptimizer, iteration 1:
     0 set ARRAY bank2
     1 set i 1
     2 label __label0
-    * jump __label2 greaterThanEq i 128
+    3 label __label11
     4 read item ARRAY i
     5 op sub j i 1
     6 label __label3
     7 jump __label5 lessThan j 0
+    8 label __label12
     9 read a ARRAY j
    10 jump __label5 lessThanEq a item
    11 label __label6
 
    14 write a ARRAY __tmp6
    15 op sub j j 1
    16 label __label4
-    * jump __label3 always
+   17 jump __label12 greaterThanEq j 0
    18 label __label5
    19 op add __tmp8 j 1
    20 write item ARRAY __tmp8
    21 label __label1
    22 op add i i 1
-    * jump __label0 always
+   23 jump __label11 lessThan i 128
    24 label __label2
    25 set i 0
    26 label __label8
-    * jump __label10 greaterThanEq i 128
+   27 label __label13
    28 read __tmp9 ARRAY i
    29 print __tmp9
    30 label __label9
    31 op add i i 1
-    * jump __label8 always
+   32 jump __label13 lessThan i 128
    33 label __label10
    34 end

Final code before resolving virtual instructions:

set ARRAY bank2
set i 1
label __label0
label __label11
read item ARRAY i
op sub j i 1
label __label3
jump __label5 lessThan j 0
label __label12
read a ARRAY j
jump __label5 lessThanEq a item
label __label6
label __label7
op add __tmp6 j 1
write a ARRAY __tmp6
op sub j j 1
label __label4
jump __label12 greaterThanEq j 0
label __label5
op add __tmp8 j 1
write item ARRAY __tmp8
label __label1
op add i i 1
jump __label11 lessThan i 128
label __label2
set i 0
label __label8
label __label13
read __tmp9 ARRAY i
print __tmp9
label __label9
op add i i 1
jump __label13 lessThan i 128
label __label10
end

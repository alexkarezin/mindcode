    82 instructions before optimizations.
    10 instructions eliminated by DeadCodeEliminator (2 iterations).
     2 instructions eliminated by SingleStepJumpEliminator (1 iterations).
     9 instructions eliminated by OutputTempEliminator.
     7 instructions eliminated by ImproveNegativeConditionalJumps.
     5 loops improved by LoopOptimizer.
     3 instructions eliminated by DataFlowOptimizer (4 iterations).
     2 instructions updated by PropagateJumpTargets.
     2 instructions eliminated by UnreachableCodeEliminator (1 iterations).
     2 instructions eliminated by SingleStepJumpEliminator (1 iterations).
    47 instructions after optimizations.

Modifications by DeadCodeEliminator, iteration 1:
 
    18 write __fn0_pv ARRAY __fn0_index
    19 write __fn0_iv ARRAY __fn0_parent
    20 set __fn0_index __fn0_parent
-    * set __tmp7 __fn0_parent
    21 jump __label9 always
    22 label __label8
    23 jump __label7 always
-    * set __tmp7 null
    24 label __label9
    25 label __label6
    26 jump __label5 always
    27 label __label7
-    * set __retval0 null
    28 label __label4
    29 label __label1
    30 op add i i 1
 
    67 label __label20
    68 set __tmp22 null
    69 label __label21
-    * set __tmp18 __tmp22
    70 jump __label19 always
    71 label __label18
-    * set __tmp18 null
    72 label __label19
    73 read __tmp25 ARRAY __fn1_parent
    74 set __fn1_pv __tmp25
 
    77 write __fn1_cv ARRAY __fn1_parent
    78 write __fn1_pv ARRAY __fn1_child
    79 set __fn1_parent __fn1_child
-    * set __tmp27 __fn1_child
    80 jump __label23 always
    81 label __label22
    82 jump __label17 always
-    * set __tmp27 null
    83 label __label23
    84 label __label16
    85 jump __label15 always
    86 label __label17
-    * set __retval12 null
    87 label __label14
    88 label __label11
    89 jump __label10 always

Modifications by DeadCodeEliminator, iteration 2:
 
    62 set __fn1_child __tmp23
    63 read __tmp24 ARRAY __fn1_child
    64 set __fn1_cv __tmp24
-    * set __tmp22 __tmp24
    65 jump __label21 always
    66 label __label20
-    * set __tmp22 null
    67 label __label21
    68 jump __label19 always
    69 label __label18

Modifications by SingleStepJumpEliminator, iteration 1:
 
    62 set __fn1_child __tmp23
    63 read __tmp24 ARRAY __fn1_child
    64 set __fn1_cv __tmp24
-    * jump __label21 always
    65 label __label20
    66 label __label21
-    * jump __label19 always
    67 label __label18
    68 label __label19
    69 read __tmp25 ARRAY __fn1_parent

Modifications by OutputTempEliminator, iteration 1:
 
     7 op greaterThan __tmp1 __fn0_index 0
     8 jump __label7 equal __tmp1 false
     9 op sub __tmp2 __fn0_index 1
-    * op idiv __tmp3 __tmp2 2
-    * set __fn0_parent __tmp3
-    * read __tmp4 ARRAY __fn0_index
-    * set __fn0_iv __tmp4
-    * read __tmp5 ARRAY __fn0_parent
-    * set __fn0_pv __tmp5
+   10 op idiv __fn0_parent __tmp2 2
+   11 read __fn0_iv ARRAY __fn0_index
+   12 read __fn0_pv ARRAY __fn0_parent
    13 op lessThan __tmp6 __fn0_pv __fn0_iv
    14 jump __label8 equal __tmp6 false
    15 write __fn0_pv ARRAY __fn0_index
 
    31 label __label10
    32 op greaterThan __tmp8 index 0
    33 jump __label12 equal __tmp8 false
-    * read __tmp9 ARRAY 0
-    * set x __tmp9
+   34 read x ARRAY 0
    35 read __tmp10 ARRAY index
    36 write __tmp10 ARRAY 0
    37 write x ARRAY index
-    * op sub __tmp11 index 1
-    * set index __tmp11
+   38 op sub index index 1
    39 label __label13
    40 set __fn1_index index
    41 set __fn1_parent 0
 
    45 set __fn1_child __tmp14
    46 op lessThanEq __tmp15 __tmp14 __fn1_index
    47 jump __label17 equal __tmp15 false
-    * read __tmp16 ARRAY __fn1_child
-    * set __fn1_cv __tmp16
+   48 read __fn1_cv ARRAY __fn1_child
    49 op lessThan __tmp17 __fn1_child __fn1_index
    50 jump __label18 equal __tmp17 false
    51 op add __tmp20 __fn1_child 1
    52 read __tmp19 ARRAY __tmp20
    53 op lessThan __tmp21 __fn1_cv __tmp19
    54 jump __label20 equal __tmp21 false
-    * op add __tmp23 __fn1_child 1
-    * set __fn1_child __tmp23
-    * read __tmp24 ARRAY __fn1_child
-    * set __fn1_cv __tmp24
+   55 op add __fn1_child __fn1_child 1
+   56 read __fn1_cv ARRAY __fn1_child
    57 label __label20
    58 label __label21
    59 label __label18
    60 label __label19
-    * read __tmp25 ARRAY __fn1_parent
-    * set __fn1_pv __tmp25
+   61 read __fn1_pv ARRAY __fn1_parent
    62 op lessThan __tmp26 __fn1_pv __fn1_cv
    63 jump __label22 equal __tmp26 false
    64 write __fn1_cv ARRAY __fn1_parent

Modifications by ImproveNegativeConditionalJumps, iteration 1:
 
     4 label __label3
     5 set __fn0_index i
     6 label __label5
-    * op greaterThan __tmp1 __fn0_index 0
-    * jump __label7 equal __tmp1 false
+    7 jump __label7 lessThanEq __fn0_index 0
     8 op sub __tmp2 __fn0_index 1
     9 op idiv __fn0_parent __tmp2 2
    10 read __fn0_iv ARRAY __fn0_index
    11 read __fn0_pv ARRAY __fn0_parent
-    * op lessThan __tmp6 __fn0_pv __fn0_iv
-    * jump __label8 equal __tmp6 false
+   12 jump __label8 greaterThanEq __fn0_pv __fn0_iv
    13 write __fn0_pv ARRAY __fn0_index
    14 write __fn0_iv ARRAY __fn0_parent
    15 set __fn0_index __fn0_parent
 
    27 label __label2
    28 set index 511
    29 label __label10
-    * op greaterThan __tmp8 index 0
-    * jump __label12 equal __tmp8 false
+   30 jump __label12 lessThanEq index 0
    31 read x ARRAY 0
    32 read __tmp10 ARRAY index
    33 write __tmp10 ARRAY 0
 
    40 op mul __tmp13 __fn1_parent 2
    41 op add __tmp14 __tmp13 1
    42 set __fn1_child __tmp14
-    * op lessThanEq __tmp15 __tmp14 __fn1_index
-    * jump __label17 equal __tmp15 false
+   43 jump __label17 greaterThan __tmp14 __fn1_index
    44 read __fn1_cv ARRAY __fn1_child
-    * op lessThan __tmp17 __fn1_child __fn1_index
-    * jump __label18 equal __tmp17 false
+   45 jump __label18 greaterThanEq __fn1_child __fn1_index
    46 op add __tmp20 __fn1_child 1
    47 read __tmp19 ARRAY __tmp20
-    * op lessThan __tmp21 __fn1_cv __tmp19
-    * jump __label20 equal __tmp21 false
+   48 jump __label20 greaterThanEq __fn1_cv __tmp19
    49 op add __fn1_child __fn1_child 1
    50 read __fn1_cv ARRAY __fn1_child
    51 label __label20
 
    53 label __label18
    54 label __label19
    55 read __fn1_pv ARRAY __fn1_parent
-    * op lessThan __tmp26 __fn1_pv __fn1_cv
-    * jump __label22 equal __tmp26 false
+   56 jump __label22 greaterThanEq __fn1_pv __fn1_cv
    57 write __fn1_cv ARRAY __fn1_parent
    58 write __fn1_pv ARRAY __fn1_child
    59 set __fn1_parent __fn1_child

Modifications by LoopOptimizer, iteration 1:
     0 set ARRAY bank2
     1 set i 1
     2 label __label0
-    * jump __label2 greaterThanEq i 512
+    3 label __label27
     4 label __label3
     5 set __fn0_index i
     6 label __label5
     7 jump __label7 lessThanEq __fn0_index 0
+    8 label __label28
     9 op sub __tmp2 __fn0_index 1
    10 op idiv __fn0_parent __tmp2 2
    11 read __fn0_iv ARRAY __fn0_index
 
    19 jump __label7 always
    20 label __label9
    21 label __label6
-    * jump __label5 always
+   22 jump __label28 greaterThan __fn0_index 0
    23 label __label7
    24 label __label4
    25 label __label1
    26 op add i i 1
-    * jump __label0 always
+   27 jump __label27 lessThan i 512
    28 label __label2
    29 set index 511
    30 label __label10
-    * jump __label12 lessThanEq index 0
+   31 label __label29
    32 read x ARRAY 0
    33 read __tmp10 ARRAY index
    34 write __tmp10 ARRAY 0
 
    42 op add __tmp14 __tmp13 1
    43 set __fn1_child __tmp14
    44 jump __label17 greaterThan __tmp14 __fn1_index
+   45 label __label30
    46 read __fn1_cv ARRAY __fn1_child
    47 jump __label18 greaterThanEq __fn1_child __fn1_index
    48 op add __tmp20 __fn1_child 1
 
    64 jump __label17 always
    65 label __label23
    66 label __label16
-    * jump __label15 always
+   67 op mul __tmp13 __fn1_parent 2
+   68 op add __tmp14 __tmp13 1
+   69 set __fn1_child __tmp14
+   70 jump __label30 lessThanEq __tmp14 __fn1_index
    71 label __label17
    72 label __label14
    73 label __label11
-    * jump __label10 always
+   74 jump __label29 greaterThan index 0
    75 label __label12
    76 set i 0
    77 label __label24
-    * jump __label26 greaterThanEq i 512
+   78 label __label31
    79 read __tmp28 ARRAY i
    80 print __tmp28
    81 label __label25
    82 op add i i 1
-    * jump __label24 always
+   83 jump __label31 lessThan i 512
    84 label __label26
    85 end

Modifications by DataFlowOptimizer, iteration 1:
 
     4 label __label3
     5 set __fn0_index i
     6 label __label5
-    * jump __label7 lessThanEq __fn0_index 0
+    7 jump __label7 lessThanEq i 0
     8 label __label28
     9 op sub __tmp2 __fn0_index 1
    10 op idiv __fn0_parent __tmp2 2
 
    38 set __fn1_index index
    39 set __fn1_parent 0
    40 label __label15
-    * op mul __tmp13 __fn1_parent 2
+   41 op mul __tmp13 0 2
    42 op add __tmp14 __tmp13 1
    43 set __fn1_child __tmp14
-    * jump __label17 greaterThan __tmp14 __fn1_index
+   44 jump __label17 greaterThan __tmp14 index
    45 label __label30
    46 read __fn1_cv ARRAY __fn1_child
-    * jump __label18 greaterThanEq __fn1_child __fn1_index
+   47 jump __label18 greaterThanEq __fn1_child index
    48 op add __tmp20 __fn1_child 1
    49 read __tmp19 ARRAY __tmp20
    50 jump __label20 greaterThanEq __fn1_cv __tmp19
 
    67 op mul __tmp13 __fn1_parent 2
    68 op add __tmp14 __tmp13 1
    69 set __fn1_child __tmp14
-    * jump __label30 lessThanEq __tmp14 __fn1_index
+   70 jump __label30 lessThanEq __tmp14 index
    71 label __label17
    72 label __label14
    73 label __label11

Modifications by DataFlowOptimizer, iteration 2:
 
    35 write x ARRAY index
    36 op sub index index 1
    37 label __label13
-    * set __fn1_index index
    38 set __fn1_parent 0
    39 label __label15
    40 op mul __tmp13 0 2
-    * op add __tmp14 __tmp13 1
+   41 op add __tmp14 0 1
    42 set __fn1_child __tmp14
    43 jump __label17 greaterThan __tmp14 index
    44 label __label30

Modifications by DataFlowOptimizer, iteration 3:
 
    37 label __label13
    38 set __fn1_parent 0
    39 label __label15
-    * op mul __tmp13 0 2
    40 op add __tmp14 0 1
-    * set __fn1_child __tmp14
-    * jump __label17 greaterThan __tmp14 index
+   41 set __fn1_child 1
+   42 jump __label17 greaterThan 1 index
    43 label __label30
    44 read __fn1_cv ARRAY __fn1_child
    45 jump __label18 greaterThanEq __fn1_child index

Modifications by DataFlowOptimizer, iteration 4:
 
    37 label __label13
    38 set __fn1_parent 0
    39 label __label15
-    * op add __tmp14 0 1
    40 set __fn1_child 1
    41 jump __label17 greaterThan 1 index
    42 label __label30

Modifications by PropagateJumpTargets, iteration 1:
 
    10 op idiv __fn0_parent __tmp2 2
    11 read __fn0_iv ARRAY __fn0_index
    12 read __fn0_pv ARRAY __fn0_parent
-    * jump __label8 greaterThanEq __fn0_pv __fn0_iv
+   13 jump __label7 greaterThanEq __fn0_pv __fn0_iv
    14 write __fn0_pv ARRAY __fn0_index
    15 write __fn0_iv ARRAY __fn0_parent
    16 set __fn0_index __fn0_parent
 
    52 label __label18
    53 label __label19
    54 read __fn1_pv ARRAY __fn1_parent
-    * jump __label22 greaterThanEq __fn1_pv __fn1_cv
+   55 jump __label17 greaterThanEq __fn1_pv __fn1_cv
    56 write __fn1_cv ARRAY __fn1_parent
    57 write __fn1_pv ARRAY __fn1_child
    58 set __fn1_parent __fn1_child

Modifications by UnreachableCodeEliminator, iteration 1:
 
    16 set __fn0_index __fn0_parent
    17 jump __label9 always
    18 label __label8
-    * jump __label7 always
    19 label __label9
    20 label __label6
    21 jump __label28 greaterThan __fn0_index 0
 
    57 set __fn1_parent __fn1_child
    58 jump __label23 always
    59 label __label22
-    * jump __label17 always
    60 label __label23
    61 label __label16
    62 op mul __tmp13 __fn1_parent 2

Modifications by SingleStepJumpEliminator, iteration 1:
 
    14 write __fn0_pv ARRAY __fn0_index
    15 write __fn0_iv ARRAY __fn0_parent
    16 set __fn0_index __fn0_parent
-    * jump __label9 always
    17 label __label8
    18 label __label9
    19 label __label6
 
    54 write __fn1_cv ARRAY __fn1_parent
    55 write __fn1_pv ARRAY __fn1_child
    56 set __fn1_parent __fn1_child
-    * jump __label23 always
    57 label __label22
    58 label __label23
    59 label __label16

Final code before resolving virtual instructions:

set ARRAY bank2
set i 1
label __label0
label __label27
label __label3
set __fn0_index i
label __label5
jump __label7 lessThanEq i 0
label __label28
op sub __tmp2 __fn0_index 1
op idiv __fn0_parent __tmp2 2
read __fn0_iv ARRAY __fn0_index
read __fn0_pv ARRAY __fn0_parent
jump __label7 greaterThanEq __fn0_pv __fn0_iv
write __fn0_pv ARRAY __fn0_index
write __fn0_iv ARRAY __fn0_parent
set __fn0_index __fn0_parent
label __label8
label __label9
label __label6
jump __label28 greaterThan __fn0_index 0
label __label7
label __label4
label __label1
op add i i 1
jump __label27 lessThan i 512
label __label2
set index 511
label __label10
label __label29
read x ARRAY 0
read __tmp10 ARRAY index
write __tmp10 ARRAY 0
write x ARRAY index
op sub index index 1
label __label13
set __fn1_parent 0
label __label15
set __fn1_child 1
jump __label17 greaterThan 1 index
label __label30
read __fn1_cv ARRAY __fn1_child
jump __label18 greaterThanEq __fn1_child index
op add __tmp20 __fn1_child 1
read __tmp19 ARRAY __tmp20
jump __label20 greaterThanEq __fn1_cv __tmp19
op add __fn1_child __fn1_child 1
read __fn1_cv ARRAY __fn1_child
label __label20
label __label21
label __label18
label __label19
read __fn1_pv ARRAY __fn1_parent
jump __label17 greaterThanEq __fn1_pv __fn1_cv
write __fn1_cv ARRAY __fn1_parent
write __fn1_pv ARRAY __fn1_child
set __fn1_parent __fn1_child
label __label22
label __label23
label __label16
op mul __tmp13 __fn1_parent 2
op add __tmp14 __tmp13 1
set __fn1_child __tmp14
jump __label30 lessThanEq __tmp14 index
label __label17
label __label14
label __label11
jump __label29 greaterThan index 0
label __label12
set i 0
label __label24
label __label31
read __tmp28 ARRAY i
print __tmp28
label __label25
op add i i 1
jump __label31 lessThan i 512
label __label26
end

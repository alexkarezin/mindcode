   240 instructions before optimizations.
    22 instructions eliminated by Tmp Variables Elimination (4 iterations).
    27 instructions eliminated by Dead Code Elimination (6 iterations).
    10 instructions eliminated by Conditional Jump Optimization (4 iterations).
     9 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     4 instructions added by Loop Optimization (3 iterations).
     3 loops improved by LoopOptimizer.
     6 instructions eliminated by If Expression Optimization (3 iterations).
     3 instructions eliminated by Data Flow Optimization (5 iterations).
     7 instructions eliminated by Jump Straightening.
     2 instructions updated by PropagateJumpTargets.
     7 instructions eliminated by Print Merging.
   153 instructions after optimizations.

Modifications by Tmp Variables Elimination, pass 1, iteration 1:
 
     4 label __label0
     5 print "Configuring regulator..."
     6 print "\n"
-    * set __tmp0 @links
-    * set n __tmp0
+    7 set n @links
     8 label __label3
     9 op greaterThan __tmp1 n 0
    10 jump __label5 equal __tmp1 false
-    * op sub __tmp2 n 1
-    * set n __tmp2
-    * getlink __tmp3 n
-    * set block __tmp3
+   11 op sub n n 1
+   12 getlink block n
    13 print "Found: "
    14 print block
    15 print "\n"
-    * sensor __tmp4 block @type
-    * set __ast0 __tmp4
+   16 sensor __ast0 block @type
    17 jump __label8 equal __ast0 @message
    18 jump __label7 always
    19 label __label8
 
    47 set CONTAINER block
    48 set SENSOR @totalItems
    49 set MAXIMUM @itemCapacity
-    * op add __tmp6 n 1
-    * set START __tmp6
+   50 op add START n 1
    51 set __tmp5 START
    52 jump __label6 always
    53 label __label13
 
    59 set CONTAINER block
    60 set SENSOR @totalLiquids
    61 set MAXIMUM @liquidCapacity
-    * op add __tmp7 n 1
-    * set START __tmp7
+   62 op add START n 1
    63 set __tmp5 START
    64 jump __label6 always
    65 label __label15
 
    70 set CONTAINER block
    71 set SENSOR @totalPower
    72 set MAXIMUM @powerCapacity
-    * op add __tmp8 n 1
-    * set START __tmp8
+   73 op add START n 1
    74 set __tmp5 START
    75 jump __label6 always
    76 label __label17
 
    82 set CONTAINER block
    83 set SENSOR @powerNetStored
    84 set MAXIMUM @powerNetCapacity
-    * op add __tmp9 n 1
-    * set START __tmp9
+   85 op add START n 1
    86 set __tmp5 START
    87 jump __label6 always
    88 label __label19
 
   118 jump __label0 notEqual __tmp12 false
   119 label __label2
   120 sensor __tmp13 SORTER @type
-    * op strictEqual __tmp14 __tmp13 @inverted-sorter
-    * set INVERTED __tmp14
+  121 op strictEqual INVERTED __tmp13 @inverted-sorter
   122 label __label23
   123 set __fn0_newState true
   124 op notEqual __tmp16 STATE __fn0_newState
   125 jump __label25 equal __tmp16 false
   126 set STATE __fn0_newState
-    * op add __tmp18 CYCLES 1
-    * set CYCLES __tmp18
-    * op xor __tmp19 INVERTED STATE
-    * set ON __tmp19
+  127 op add CYCLES CYCLES 1
+  128 op xor ON INVERTED STATE
   129 jump __label27 equal ON false
   130 set __tmp20 "\nCurrently active:[green]"
   131 jump __label28 always
 
   146 sensor __tmp21 SWITCH @enabled
   147 op equal __tmp22 __tmp21 0
   148 jump __label31 equal __tmp22 false
-    * set __tmp23 @time
-    * set start __tmp23
-    * sensor __tmp24 SORTER @config
-    * set item __tmp24
+  149 set start @time
+  150 sensor item SORTER @config
   151 op equal __tmp25 item null
   152 op notEqual __tmp26 SENSOR @totalItems
   153 op or __tmp27 __tmp25 __tmp26
 
   164 print CONTAINER
   165 set __tmp28 null
   166 label __label33
-    * sensor __tmp29 CONTAINER MAXIMUM
-    * set max __tmp29
-    * sensor __tmp30 CONTAINER item
-    * set amount __tmp30
+  167 sensor max CONTAINER MAXIMUM
+  168 sensor amount CONTAINER item
   169 op mul __tmp31 100 amount
-    * op idiv __tmp32 __tmp31 max
-    * set pct __tmp32
+  170 op idiv pct __tmp31 max
   171 op lessThanEq __tmp33 pct PCT_LOW
   172 jump __label34 equal __tmp33 false
   173 label __label36
 
   175 op notEqual __tmp36 STATE __fn1_newState
   176 jump __label38 equal __tmp36 false
   177 set STATE __fn1_newState
-    * op add __tmp38 CYCLES 1
-    * set CYCLES __tmp38
-    * op xor __tmp39 INVERTED STATE
-    * set ON __tmp39
+  178 op add CYCLES CYCLES 1
+  179 op xor ON INVERTED STATE
   180 jump __label40 equal ON false
   181 set __tmp40 "\nCurrently active:[green]"
   182 jump __label41 always
 
   201 op notEqual __tmp44 STATE __fn2_newState
   202 jump __label46 equal __tmp44 false
   203 set STATE __fn2_newState
-    * op add __tmp46 CYCLES 1
-    * set CYCLES __tmp46
-    * op xor __tmp47 INVERTED STATE
-    * set ON __tmp47
+  204 op add CYCLES CYCLES 1
+  205 op xor ON INVERTED STATE
   206 jump __label48 equal ON false
   207 set __tmp48 "\nCurrently active:[green]"
   208 jump __label49 always
 
   250 label __label52
   251 op lessThan __tmp50 n @links
   252 jump __label54 equal __tmp50 false
-    * getlink __tmp51 n
-    * set block __tmp51
+  253 getlink block n
   254 control enabled block ON
   255 print "\n    "
   256 print block
-    * op add __tmp52 n 1
-    * set n __tmp52
+  257 op add n n 1
   258 label __label53
   259 jump __label52 always
   260 label __label54

Modifications by Dead Code Elimination, pass 1, iteration 1:
 
    18 jump __label7 always
    19 label __label8
    20 set MESSAGE block
-    * set __tmp5 MESSAGE
    21 jump __label6 always
    22 label __label7
    23 jump __label10 equal __ast0 @switch
    24 jump __label9 always
    25 label __label10
    26 set SWITCH block
-    * set __tmp5 SWITCH
    27 jump __label6 always
    28 label __label9
    29 jump __label12 equal __ast0 @sorter
 
    32 jump __label11 always
    33 label __label12
    34 set SORTER block
-    * set __tmp5 SORTER
    35 jump __label6 always
    36 label __label11
    37 jump __label14 equal __ast0 @vault
 
    45 set SENSOR @totalItems
    46 set MAXIMUM @itemCapacity
    47 op add START n 1
-    * set __tmp5 START
    48 jump __label6 always
    49 label __label13
    50 jump __label16 equal __ast0 @liquid-tank
 
    56 set SENSOR @totalLiquids
    57 set MAXIMUM @liquidCapacity
    58 op add START n 1
-    * set __tmp5 START
    59 jump __label6 always
    60 label __label15
    61 jump __label18 equal __ast0 @battery
 
    66 set SENSOR @totalPower
    67 set MAXIMUM @powerCapacity
    68 op add START n 1
-    * set __tmp5 START
    69 jump __label6 always
    70 label __label17
    71 jump __label20 equal __ast0 @power-node
 
    77 set SENSOR @powerNetStored
    78 set MAXIMUM @powerNetCapacity
    79 op add START n 1
-    * set __tmp5 START
    80 jump __label6 always
    81 label __label19
-    * set __tmp5 null
    82 label __label6
    83 label __label4
    84 jump __label3 always
 
    99 jump __label21 equal __tmp10 false
   100 print "No container."
   101 print "\n"
-    * set __tmp11 "No container."
   102 jump __label22 always
   103 label __label21
-    * set __tmp11 null
   104 label __label22
   105 printflush MESSAGE
   106 label __label1
 
   128 label __label25
   129 set __tmp17 null
   130 label __label26
-    * set __retval15 __tmp17
   131 label __label24
   132 set CYCLES 0
   133 control enabled SWITCH 0
 
   144 set item SENSOR
   145 print "Measuring [gold]total[] in "
   146 print CONTAINER
-    * set __tmp28 null
   147 jump __label33 always
   148 label __label32
   149 print "Measuring [gold]"
   150 print item
   151 print "[] in "
   152 print CONTAINER
-    * set __tmp28 null
   153 label __label33
   154 sensor max CONTAINER MAXIMUM
   155 sensor amount CONTAINER item
 
   178 label __label39
   179 set __retval35 __tmp37
   180 label __label37
-    * set __tmp34 __retval35
   181 jump __label35 always
   182 label __label34
   183 op greaterThanEq __tmp41 pct PCT_HIGH
 
   208 label __label42
   209 set __tmp42 null
   210 label __label43
-    * set __tmp34 __tmp42
   211 label __label35
   212 print "\nLevel: [gold]"
   213 print pct
 
   219 print "\nDeactivate below [salmon]"
   220 print PCT_LOW
   221 print "%[]"
-    * set __tmp49 null
   222 jump __label51 always
   223 label __label50
   224 print "\nActivate below [green]"
 
   227 print "\nDeactivate above [salmon]"
   228 print PCT_HIGH
   229 print "%[]"
-    * set __tmp49 null
   230 label __label51
   231 print ACTIVE_TEXT
   232 set n START

Modifications by Dead Code Elimination, pass 1, iteration 2:
 
   123 set __tmp20 "\nCurrently inactive:[salmon]"
   124 label __label28
   125 set ACTIVE_TEXT __tmp20
-    * set __tmp17 ACTIVE_TEXT
   126 jump __label26 always
   127 label __label25
-    * set __tmp17 null
   128 label __label26
   129 label __label24
   130 set CYCLES 0
 
   174 label __label38
   175 set __tmp37 null
   176 label __label39
-    * set __retval35 __tmp37
   177 label __label37
   178 jump __label35 always
   179 label __label34
 
   200 label __label47
   201 set __retval43 __tmp45
   202 label __label45
-    * set __tmp42 __retval43
   203 jump __label43 always
   204 label __label42
-    * set __tmp42 null
   205 label __label43
   206 label __label35
   207 print "\nLevel: [gold]"

Modifications by Dead Code Elimination, pass 1, iteration 3:
 
   169 set __tmp40 "\nCurrently inactive:[salmon]"
   170 label __label41
   171 set ACTIVE_TEXT __tmp40
-    * set __tmp37 ACTIVE_TEXT
   172 jump __label39 always
   173 label __label38
-    * set __tmp37 null
   174 label __label39
   175 label __label37
   176 jump __label35 always
 
   196 label __label46
   197 set __tmp45 null
   198 label __label47
-    * set __retval43 __tmp45
   199 label __label45
   200 jump __label43 always
   201 label __label42

Modifications by Dead Code Elimination, pass 1, iteration 4:
 
   191 set __tmp48 "\nCurrently inactive:[salmon]"
   192 label __label49
   193 set ACTIVE_TEXT __tmp48
-    * set __tmp45 ACTIVE_TEXT
   194 jump __label47 always
   195 label __label46
-    * set __tmp45 null
   196 label __label47
   197 label __label45
   198 jump __label43 always

Modifications by Conditional Jump Optimization, pass 2, iteration 1:
 
     6 print "\n"
     7 set n @links
     8 label __label3
-    * op greaterThan __tmp1 n 0
-    * jump __label5 equal __tmp1 false
+    9 jump __label5 lessThanEq n 0
    10 op sub n n 1
    11 getlink block n
    12 print "Found: "
 
    94 print "Container: "
    95 print CONTAINER
    96 print "\n"
-    * op equal __tmp10 CONTAINER null
-    * jump __label21 equal __tmp10 false
+   97 jump __label21 notEqual CONTAINER null
    98 print "No container."
    99 print "\n"
   100 jump __label22 always
 
   102 label __label22
   103 printflush MESSAGE
   104 label __label1
-    * op equal __tmp12 CONTAINER null
-    * jump __label0 notEqual __tmp12 false
+  105 jump __label0 equal CONTAINER null
   106 label __label2
   107 sensor __tmp13 SORTER @type
   108 op strictEqual INVERTED __tmp13 @inverted-sorter
   109 label __label23
   110 set __fn0_newState true
-    * op notEqual __tmp16 STATE __fn0_newState
-    * jump __label25 equal __tmp16 false
+  111 jump __label25 equal STATE __fn0_newState
   112 set STATE __fn0_newState
   113 op add CYCLES CYCLES 1
   114 op xor ON INVERTED STATE
 
   127 control enabled SWITCH 0
   128 label __label29
   129 sensor __tmp21 SWITCH @enabled
-    * op equal __tmp22 __tmp21 0
-    * jump __label31 equal __tmp22 false
+  130 jump __label31 notEqual __tmp21 0
   131 set start @time
   132 sensor item SORTER @config
   133 op equal __tmp25 item null
 
   148 sensor amount CONTAINER item
   149 op mul __tmp31 100 amount
   150 op idiv pct __tmp31 max
-    * op lessThanEq __tmp33 pct PCT_LOW
-    * jump __label34 equal __tmp33 false
+  151 jump __label34 greaterThan pct PCT_LOW
   152 label __label36
   153 set __fn1_newState true
-    * op notEqual __tmp36 STATE __fn1_newState
-    * jump __label38 equal __tmp36 false
+  154 jump __label38 equal STATE __fn1_newState
   155 set STATE __fn1_newState
   156 op add CYCLES CYCLES 1
   157 op xor ON INVERTED STATE
 
   168 label __label37
   169 jump __label35 always
   170 label __label34
-    * op greaterThanEq __tmp41 pct PCT_HIGH
-    * jump __label42 equal __tmp41 false
+  171 jump __label42 lessThan pct PCT_HIGH
   172 label __label44
   173 set __fn2_newState false
-    * op notEqual __tmp44 STATE __fn2_newState
-    * jump __label46 equal __tmp44 false
+  174 jump __label46 equal STATE __fn2_newState
   175 set STATE __fn2_newState
   176 op add CYCLES CYCLES 1
   177 op xor ON INVERTED STATE
 
   212 print ACTIVE_TEXT
   213 set n START
   214 label __label52
-    * op lessThan __tmp50 n @links
-    * jump __label54 equal __tmp50 false
+  215 jump __label54 greaterThanEq n @links
   216 getlink block n
   217 control enabled block ON
   218 print "\n    "

Modifications by Single Step Elimination, pass 2, iteration 1:
 
    76 set SENSOR @powerNetStored
    77 set MAXIMUM @powerNetCapacity
    78 op add START n 1
-    * jump __label6 always
    79 label __label19
    80 label __label6
    81 label __label4
 
    96 jump __label21 notEqual CONTAINER null
    97 print "No container."
    98 print "\n"
-    * jump __label22 always
    99 label __label21
   100 label __label22
   101 printflush MESSAGE
 
   117 set __tmp20 "\nCurrently inactive:[salmon]"
   118 label __label28
   119 set ACTIVE_TEXT __tmp20
-    * jump __label26 always
   120 label __label25
   121 label __label26
   122 label __label24
 
   159 set __tmp40 "\nCurrently inactive:[salmon]"
   160 label __label41
   161 set ACTIVE_TEXT __tmp40
-    * jump __label39 always
   162 label __label38
   163 label __label39
   164 label __label37
 
   178 set __tmp48 "\nCurrently inactive:[salmon]"
   179 label __label49
   180 set ACTIVE_TEXT __tmp48
-    * jump __label47 always
   181 label __label46
   182 label __label47
   183 label __label45
-    * jump __label43 always
   184 label __label42
   185 label __label43
   186 label __label35

Modifications by Loop Optimization, pass 2, iteration 1:
 
     7 set n @links
     8 label __label3
     9 jump __label5 lessThanEq n 0
+   10 label __label55
    11 op sub n n 1
    12 getlink block n
    13 print "Found: "
 
    80 label __label19
    81 label __label6
    82 label __label4
-    * jump __label3 always
+   83 jump __label55 greaterThan n 0
    84 label __label5
    85 print "Message: "
    86 print MESSAGE
 
   126 label __label29
   127 sensor __tmp21 SWITCH @enabled
   128 jump __label31 notEqual __tmp21 0
+  129 label __label56
   130 set start @time
   131 sensor item SORTER @config
   132 op equal __tmp25 item null
 
   209 set n START
   210 label __label52
   211 jump __label54 greaterThanEq n @links
+  212 label __label57
   213 getlink block n
   214 control enabled block ON
   215 print "\n    "
   216 print block
   217 op add n n 1
   218 label __label53
-    * jump __label52 always
+  219 jump __label57 lessThan n @links
   220 label __label54
   221 print "[]\n# of cycles: "
   222 print CYCLES
 
   227 print " ms"
   228 printflush MESSAGE
   229 label __label30
-    * jump __label29 always
+  230 sensor __tmp21 SWITCH @enabled
+  231 jump __label56 equal __tmp21 0
   232 label __label31
   233 end

Modifications by If Expression Optimization, pass 2, iteration 1:
 
   111 set STATE __fn0_newState
   112 op add CYCLES CYCLES 1
   113 op xor ON INVERTED STATE
-    * jump __label27 equal ON false
-    * set __tmp20 "\nCurrently active:[green]"
+  114 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
+  115 jump __label28 equal ON false
+  116 set ACTIVE_TEXT "\nCurrently active:[green]"
   117 jump __label28 always
-    * label __label27
-    * set __tmp20 "\nCurrently inactive:[salmon]"
   118 label __label28
-    * set ACTIVE_TEXT __tmp20
   119 label __label25
   120 label __label26
   121 label __label24
 
   152 set STATE __fn1_newState
   153 op add CYCLES CYCLES 1
   154 op xor ON INVERTED STATE
-    * jump __label40 equal ON false
-    * set __tmp40 "\nCurrently active:[green]"
+  155 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
+  156 jump __label41 equal ON false
+  157 set ACTIVE_TEXT "\nCurrently active:[green]"
   158 jump __label41 always
-    * label __label40
-    * set __tmp40 "\nCurrently inactive:[salmon]"
   159 label __label41
-    * set ACTIVE_TEXT __tmp40
   160 label __label38
   161 label __label39
   162 label __label37
 
   169 set STATE __fn2_newState
   170 op add CYCLES CYCLES 1
   171 op xor ON INVERTED STATE
-    * jump __label48 equal ON false
-    * set __tmp48 "\nCurrently active:[green]"
+  172 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
+  173 jump __label49 equal ON false
+  174 set ACTIVE_TEXT "\nCurrently active:[green]"
   175 jump __label49 always
-    * label __label48
-    * set __tmp48 "\nCurrently inactive:[salmon]"
   176 label __label49
-    * set ACTIVE_TEXT __tmp48
   177 label __label46
   178 label __label47
   179 label __label45

Modifications by Data Flow Optimization, pass 2, iteration 1:
 
   107 op strictEqual INVERTED __tmp13 @inverted-sorter
   108 label __label23
   109 set __fn0_newState true
-    * jump __label25 equal STATE __fn0_newState
-    * set STATE __fn0_newState
+  110 jump __label25 equal STATE true
+  111 set STATE true
   112 op add CYCLES CYCLES 1
   113 op xor ON INVERTED STATE
   114 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
 
   148 jump __label34 greaterThan pct PCT_LOW
   149 label __label36
   150 set __fn1_newState true
-    * jump __label38 equal STATE __fn1_newState
-    * set STATE __fn1_newState
+  151 jump __label38 equal STATE true
+  152 set STATE true
   153 op add CYCLES CYCLES 1
   154 op xor ON INVERTED STATE
   155 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
 
   165 jump __label42 lessThan pct PCT_HIGH
   166 label __label44
   167 set __fn2_newState false
-    * jump __label46 equal STATE __fn2_newState
-    * set STATE __fn2_newState
+  168 jump __label46 equal STATE false
+  169 set STATE false
   170 op add CYCLES CYCLES 1
   171 op xor ON INVERTED STATE
   172 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
 
   202 print ACTIVE_TEXT
   203 set n START
   204 label __label52
-    * jump __label54 greaterThanEq n @links
+  205 jump __label54 greaterThanEq START @links
   206 label __label57
   207 getlink block n
   208 control enabled block ON

Modifications by Data Flow Optimization, pass 2, iteration 2:
 
   106 sensor __tmp13 SORTER @type
   107 op strictEqual INVERTED __tmp13 @inverted-sorter
   108 label __label23
-    * set __fn0_newState true
   109 jump __label25 equal STATE true
   110 set STATE true
   111 op add CYCLES CYCLES 1
 
   146 op idiv pct __tmp31 max
   147 jump __label34 greaterThan pct PCT_LOW
   148 label __label36
-    * set __fn1_newState true
   149 jump __label38 equal STATE true
   150 set STATE true
   151 op add CYCLES CYCLES 1
 
   162 label __label34
   163 jump __label42 lessThan pct PCT_HIGH
   164 label __label44
-    * set __fn2_newState false
   165 jump __label46 equal STATE false
   166 set STATE false
   167 op add CYCLES CYCLES 1

Modifications by Single Step Elimination, pass 3, iteration 1:
 
   113 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
   114 jump __label28 equal ON false
   115 set ACTIVE_TEXT "\nCurrently active:[green]"
-    * jump __label28 always
   116 label __label28
   117 label __label25
   118 label __label26
 
   152 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
   153 jump __label41 equal ON false
   154 set ACTIVE_TEXT "\nCurrently active:[green]"
-    * jump __label41 always
   155 label __label41
   156 label __label38
   157 label __label39
 
   167 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
   168 jump __label49 equal ON false
   169 set ACTIVE_TEXT "\nCurrently active:[green]"
-    * jump __label49 always
   170 label __label49
   171 label __label46
   172 label __label47

Modifications by Jump Straightening, pass 4, iteration 1:
 
    14 print block
    15 print "\n"
    16 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   17 jump __label7 notEqual __ast0 @message
    18 label __label8
    19 set MESSAGE block
    20 jump __label6 always
    21 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   22 jump __label9 notEqual __ast0 @switch
    23 label __label10
    24 set SWITCH block
    25 jump __label6 always
    26 label __label9
    27 jump __label12 equal __ast0 @sorter
    28 jump __label12 equal __ast0 @inverted-sorter
-    * jump __label12 equal __ast0 @unloader
-    * jump __label11 always
+   29 jump __label11 notEqual __ast0 @unloader
    30 label __label12
    31 set SORTER block
    32 jump __label6 always
 
    35 jump __label14 equal __ast0 @container
    36 jump __label14 equal __ast0 @core-shard
    37 jump __label14 equal __ast0 @core-foundation
-    * jump __label14 equal __ast0 @core-nucleus
-    * jump __label13 always
+   38 jump __label13 notEqual __ast0 @core-nucleus
    39 label __label14
    40 set CONTAINER block
    41 set SENSOR @totalItems
 
    45 label __label13
    46 jump __label16 equal __ast0 @liquid-tank
    47 jump __label16 equal __ast0 @liquid-container
-    * jump __label16 equal __ast0 @liquid-router
-    * jump __label15 always
+   48 jump __label15 notEqual __ast0 @liquid-router
    49 label __label16
    50 set CONTAINER block
    51 set SENSOR @totalLiquids
 
    54 jump __label6 always
    55 label __label15
    56 jump __label18 equal __ast0 @battery
-    * jump __label18 equal __ast0 @battery-large
-    * jump __label17 always
+   57 jump __label17 notEqual __ast0 @battery-large
    58 label __label18
    59 set CONTAINER block
    60 set SENSOR @totalPower
 
    64 label __label17
    65 jump __label20 equal __ast0 @power-node
    66 jump __label20 equal __ast0 @power-node-large
-    * jump __label20 equal __ast0 @surge-tower
-    * jump __label19 always
+   67 jump __label19 notEqual __ast0 @surge-tower
    68 label __label20
    69 set CONTAINER block
    70 set SENSOR @powerNetStored

Modifications by Jump Threading, pass 4, iteration 1:
 
   138 op idiv pct __tmp31 max
   139 jump __label34 greaterThan pct PCT_LOW
   140 label __label36
-    * jump __label38 equal STATE true
+  141 jump __label35 equal STATE true
   142 set STATE true
   143 op add CYCLES CYCLES 1
   144 op xor ON INVERTED STATE
   145 set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
-    * jump __label41 equal ON false
+  146 jump __label35 equal ON false
   147 set ACTIVE_TEXT "\nCurrently active:[green]"
   148 label __label41
   149 label __label38

Modifications by Print Merging, pass 4, iteration 1:
 
     2 set CONTAINER null
     3 set SORTER null
     4 label __label0
-    * print "Configuring regulator..."
-    * print "\n"
+    5 print "Configuring regulator...\n"
     6 set n @links
     7 label __label3
     8 jump __label5 lessThanEq n 0
 
    76 label __label5
    77 print "Message: "
    78 print MESSAGE
-    * print "\n"
-    * print "Switch: "
+   79 print "\nSwitch: "
    80 print SWITCH
-    * print "\n"
-    * print "Sorter: "
+   81 print "\nSorter: "
    82 print SORTER
-    * print "\n"
-    * print "Container: "
+   83 print "\nContainer: "
    84 print CONTAINER
    85 print "\n"
    86 jump __label21 notEqual CONTAINER null
-    * print "No container."
-    * print "\n"
+   87 print "No container.\n"
    88 label __label21
    89 label __label22
    90 printflush MESSAGE
 
   168 jump __label50 equal INVERTED false
   169 print "\nActivate above [green]"
   170 print PCT_HIGH
-    * print "%[]"
-    * print "\nDeactivate below [salmon]"
+  171 print "%[]\nDeactivate below [salmon]"
   172 print PCT_LOW
   173 print "%[]"
   174 jump __label51 always
   175 label __label50
   176 print "\nActivate below [green]"
   177 print PCT_LOW
-    * print "%[]"
-    * print "\nDeactivate above [salmon]"
+  178 print "%[]\nDeactivate above [salmon]"
   179 print PCT_HIGH
   180 print "%[]"
   181 label __label51

Final code before resolving virtual instructions:

set PCT_LOW 60
set PCT_HIGH 80
set CONTAINER null
set SORTER null
label __label0
print "Configuring regulator...\n"
set n @links
label __label3
jump __label5 lessThanEq n 0
label __label55
op sub n n 1
getlink block n
print "Found: "
print block
print "\n"
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
label __label8
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
label __label10
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @sorter
jump __label12 equal __ast0 @inverted-sorter
jump __label11 notEqual __ast0 @unloader
label __label12
set SORTER block
jump __label6 always 0 0
label __label11
jump __label14 equal __ast0 @vault
jump __label14 equal __ast0 @container
jump __label14 equal __ast0 @core-shard
jump __label14 equal __ast0 @core-foundation
jump __label13 notEqual __ast0 @core-nucleus
label __label14
set CONTAINER block
set SENSOR @totalItems
set MAXIMUM @itemCapacity
op add START n 1
jump __label6 always 0 0
label __label13
jump __label16 equal __ast0 @liquid-tank
jump __label16 equal __ast0 @liquid-container
jump __label15 notEqual __ast0 @liquid-router
label __label16
set CONTAINER block
set SENSOR @totalLiquids
set MAXIMUM @liquidCapacity
op add START n 1
jump __label6 always 0 0
label __label15
jump __label18 equal __ast0 @battery
jump __label17 notEqual __ast0 @battery-large
label __label18
set CONTAINER block
set SENSOR @totalPower
set MAXIMUM @powerCapacity
op add START n 1
jump __label6 always 0 0
label __label17
jump __label20 equal __ast0 @power-node
jump __label20 equal __ast0 @power-node-large
jump __label19 notEqual __ast0 @surge-tower
label __label20
set CONTAINER block
set SENSOR @powerNetStored
set MAXIMUM @powerNetCapacity
op add START n 1
label __label19
label __label6
label __label4
jump __label55 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nSorter: "
print SORTER
print "\nContainer: "
print CONTAINER
print "\n"
jump __label21 notEqual CONTAINER null
print "No container.\n"
label __label21
label __label22
printflush MESSAGE
label __label1
jump __label0 equal CONTAINER null
label __label2
sensor __tmp13 SORTER @type
op strictEqual INVERTED __tmp13 @inverted-sorter
label __label23
jump __label25 equal STATE true
set STATE true
op add CYCLES CYCLES 1
op xor ON INVERTED STATE
set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
jump __label28 equal ON false
set ACTIVE_TEXT "\nCurrently active:[green]"
label __label28
label __label25
label __label26
label __label24
set CYCLES 0
control enabled SWITCH 0 0 0 0
label __label29
sensor __tmp21 SWITCH @enabled
jump __label31 notEqual __tmp21 0
label __label56
set start @time
sensor item SORTER @config
op equal __tmp25 item null
op notEqual __tmp26 SENSOR @totalItems
op or __tmp27 __tmp25 __tmp26
jump __label32 equal __tmp27 false
set item SENSOR
print "Measuring [gold]total[] in "
print CONTAINER
jump __label33 always 0 0
label __label32
print "Measuring [gold]"
print item
print "[] in "
print CONTAINER
label __label33
sensor max CONTAINER MAXIMUM
sensor amount CONTAINER item
op mul __tmp31 100 amount
op idiv pct __tmp31 max
jump __label34 greaterThan pct PCT_LOW
label __label36
jump __label35 equal STATE true
set STATE true
op add CYCLES CYCLES 1
op xor ON INVERTED STATE
set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
jump __label35 equal ON false
set ACTIVE_TEXT "\nCurrently active:[green]"
label __label41
label __label38
label __label39
label __label37
jump __label35 always 0 0
label __label34
jump __label42 lessThan pct PCT_HIGH
label __label44
jump __label46 equal STATE false
set STATE false
op add CYCLES CYCLES 1
op xor ON INVERTED STATE
set ACTIVE_TEXT "\nCurrently inactive:[salmon]"
jump __label49 equal ON false
set ACTIVE_TEXT "\nCurrently active:[green]"
label __label49
label __label46
label __label47
label __label45
label __label42
label __label43
label __label35
print "\nLevel: [gold]"
print pct
print "%[]"
jump __label50 equal INVERTED false
print "\nActivate above [green]"
print PCT_HIGH
print "%[]\nDeactivate below [salmon]"
print PCT_LOW
print "%[]"
jump __label51 always 0 0
label __label50
print "\nActivate below [green]"
print PCT_LOW
print "%[]\nDeactivate above [salmon]"
print PCT_HIGH
print "%[]"
label __label51
print ACTIVE_TEXT
set n START
label __label52
jump __label54 greaterThanEq START @links
label __label57
getlink block n
control enabled block ON 0 0 0
print "\n    "
print block
op add n n 1
label __label53
jump __label57 lessThan n @links
label __label54
print "[]\n# of cycles: "
print CYCLES
op sub __tmp53 @time start
op floor __tmp54 __tmp53 0
print "\n[lightgray]Loop: "
print __tmp54
print " ms"
printflush MESSAGE
label __label30
sensor __tmp21 SWITCH @enabled
jump __label56 equal __tmp21 0
label __label31
end

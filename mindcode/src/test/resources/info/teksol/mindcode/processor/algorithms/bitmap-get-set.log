    33 instructions before optimizations.
     1 instructions eliminated by Tmp Variables Elimination (4 iterations).
     1 instructions eliminated by Dead Code Elimination (3 iterations).
     1 instructions eliminated by Single Step Elimination (5 iterations).
     2 instructions modified by Loop Optimization (3 iterations).
     2 loops improved by LoopOptimizer.
     1 instructions eliminated by If Expression Optimization (3 iterations).
     3 instructions eliminated by Data Flow Optimization (5 iterations).
    25 instructions after optimizations.

Modifications by Tmp Variables Elimination, pass 1, iteration 1:
 
    27 read __tmp9 BITMAP __tmp10
    28 op mod __tmp11 __fn1_bitIndex BITS
    29 op shl __tmp12 1 __tmp11
-    * op and __tmp13 __tmp9 __tmp12
-    * set __retval8 __tmp13
+   30 op and __retval8 __tmp9 __tmp12
    31 label __label9
    32 jump __label10 equal __retval8 false
    33 set __tmp14 1

Modifications by Dead Code Elimination, pass 1, iteration 1:
 
    12 op or __tmp6 __tmp2 __tmp5
    13 op idiv __tmp7 __fn0_bitIndex BITS
    14 write __tmp6 BITMAP __tmp7
-    * set __retval1 __tmp6
    15 label __label4
    16 label __label1
    17 op add i i 1

Modifications by Loop Optimization, pass 2, iteration 1:
 
     1 set BITMAP bank1
     2 set i 0
     3 label __label0
-    * jump __label2 greaterThanEq i 8
+    4 label __label12
     5 op mul __tmp0 2 i
     6 label __label3
     7 set __fn0_bitIndex __tmp0
 
    15 label __label4
    16 label __label1
    17 op add i i 1
-    * jump __label0 always
+   18 jump __label12 lessThan i 8
    19 label __label2
    20 set i 0
    21 label __label5
-    * jump __label7 greaterThanEq i 16
+   22 label __label13
    23 label __label8
    24 set __fn1_bitIndex i
    25 op idiv __tmp10 __fn1_bitIndex BITS
 
    37 print __tmp14
    38 label __label6
    39 op add i i 1
-    * jump __label5 always
+   40 jump __label13 lessThan i 16
    41 label __label7
    42 end

Modifications by If Expression Optimization, pass 2, iteration 1:
 
    20 set i 0
    21 label __label5
    22 label __label13
+   23 set __tmp14 0
    24 label __label8
    25 set __fn1_bitIndex i
    26 op idiv __tmp10 __fn1_bitIndex BITS
 
    29 op shl __tmp12 1 __tmp11
    30 op and __retval8 __tmp9 __tmp12
    31 label __label9
-    * jump __label10 equal __retval8 false
+   32 jump __label11 equal __retval8 false
    33 set __tmp14 1
    34 jump __label11 always
-    * label __label10
-    * set __tmp14 0
    35 label __label11
    36 print __tmp14
    37 label __label6

Modifications by Data Flow Optimization, pass 2, iteration 1:
 
     5 op mul __tmp0 2 i
     6 label __label3
     7 set __fn0_bitIndex __tmp0
-    * op idiv __tmp3 __fn0_bitIndex BITS
+    8 op idiv __tmp3 __tmp0 BITS
     9 read __tmp2 BITMAP __tmp3
-    * op mod __tmp4 __fn0_bitIndex BITS
+   10 op mod __tmp4 __tmp0 BITS
    11 op shl __tmp5 1 __tmp4
    12 op or __tmp6 __tmp2 __tmp5
-    * op idiv __tmp7 __fn0_bitIndex BITS
-    * write __tmp6 BITMAP __tmp7
+   13 op idiv __tmp7 __tmp0 BITS
+   14 write __tmp6 BITMAP __tmp3
    15 label __label4
    16 label __label1
    17 op add i i 1
 
    23 set __tmp14 0
    24 label __label8
    25 set __fn1_bitIndex i
-    * op idiv __tmp10 __fn1_bitIndex BITS
+   26 op idiv __tmp10 i BITS
    27 read __tmp9 BITMAP __tmp10
-    * op mod __tmp11 __fn1_bitIndex BITS
+   28 op mod __tmp11 i BITS
    29 op shl __tmp12 1 __tmp11
    30 op and __retval8 __tmp9 __tmp12
    31 label __label9

Modifications by Data Flow Optimization, pass 2, iteration 2:
 
     4 label __label12
     5 op mul __tmp0 2 i
     6 label __label3
-    * set __fn0_bitIndex __tmp0
     7 op idiv __tmp3 __tmp0 BITS
     8 read __tmp2 BITMAP __tmp3
     9 op mod __tmp4 __tmp0 BITS
    10 op shl __tmp5 1 __tmp4
    11 op or __tmp6 __tmp2 __tmp5
-    * op idiv __tmp7 __tmp0 BITS
    12 write __tmp6 BITMAP __tmp3
    13 label __label4
    14 label __label1
 
    20 label __label13
    21 set __tmp14 0
    22 label __label8
-    * set __fn1_bitIndex i
    23 op idiv __tmp10 i BITS
    24 read __tmp9 BITMAP __tmp10
    25 op mod __tmp11 i BITS

Modifications by Single Step Elimination, pass 3, iteration 1:
 
    28 label __label9
    29 jump __label11 equal __retval8 false
    30 set __tmp14 1
-    * jump __label11 always
    31 label __label11
    32 print __tmp14
    33 label __label6

Final code before resolving virtual instructions:

set BITS 32
set BITMAP bank1
set i 0
label __label0
label __label12
op mul __tmp0 2 i
label __label3
op idiv __tmp3 __tmp0 BITS
read __tmp2 BITMAP __tmp3
op mod __tmp4 __tmp0 BITS
op shl __tmp5 1 __tmp4
op or __tmp6 __tmp2 __tmp5
write __tmp6 BITMAP __tmp3
label __label4
label __label1
op add i i 1
jump __label12 lessThan i 8
label __label2
set i 0
label __label5
label __label13
set __tmp14 0
label __label8
op idiv __tmp10 i BITS
read __tmp9 BITMAP __tmp10
op mod __tmp11 i BITS
op shl __tmp12 1 __tmp11
op and __retval8 __tmp9 __tmp12
label __label9
jump __label11 equal __retval8 false
set __tmp14 1
label __label11
print __tmp14
label __label6
op add i i 1
jump __label13 lessThan i 16
label __label7
end

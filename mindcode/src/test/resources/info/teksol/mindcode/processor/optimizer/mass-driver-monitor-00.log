   313 instructions before optimizations.
    37 instructions eliminated by Temp Variables Elimination (4 iterations).
    25 instructions eliminated by Dead Code Elimination (5 iterations).
    22 instructions eliminated by Conditional Jump Optimization (4 iterations).
    11 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
     6 instructions added by Loop Optimization (3 iterations).
     5 loops improved by LoopOptimizer.
    10 instructions eliminated by If Expression Optimization (3 iterations).
     6 instructions eliminated by Data Flow Optimization (6 iterations).
     4 instructions eliminated by Jump Straightening.
     6 instructions eliminated by Print Merging.
   197 instructions after optimizations.

Modifications by Temp Variables Elimination, pass 1, iteration 1:
 
     8 jump __label2 equal __tmp0 false
     9 print "Mass Driver Monitor"
    10 print "\n"
-    * set __tmp1 @links
-    * set n __tmp1
+   11 set n @links
    12 label __label3
    13 op greaterThan __tmp2 n 0
    14 jump __label5 equal __tmp2 false
-    * op sub __tmp3 n 1
-    * set n __tmp3
-    * getlink __tmp4 n
-    * set block __tmp4
+   15 op sub n n 1
+   16 getlink block n
    17 print "Found: "
    18 print block
    19 print "\n"
-    * sensor __tmp5 block @type
-    * set __ast0 __tmp5
+   20 sensor __ast0 block @type
    21 jump __label8 equal __ast0 @message
    22 jump __label7 always
    23 label __label8
 
    90 set clx 0
    91 set crx clx
    92 op add __tmp12 OFFSET_X BAR_SPACE
-    * op sub __tmp13 __tmp12 2
-    * set clw __tmp13
+   93 op sub clw __tmp12 2
    94 set crw clw
    95 op equal __tmp14 FROM_INDEX 0
    96 jump __label19 equal __tmp14 false
 
    98 jump __label20 always
    99 label __label19
   100 op mul __tmp16 FROM_INDEX BAR_GAP
-    * op add __tmp17 OFFSET_Y __tmp16
-    * set __tmp15 __tmp17
+  101 op add __tmp15 OFFSET_Y __tmp16
   102 label __label20
   103 set cly __tmp15
   104 set cry cly
   105 op lessThan __tmp18 TO_INDEX 8
   106 jump __label21 equal __tmp18 false
   107 op mul __tmp20 TO_INDEX BAR_GAP
-    * op add __tmp21 OFFSET_Y __tmp20
-    * set __tmp19 __tmp21
+  108 op add __tmp19 OFFSET_Y __tmp20
   109 jump __label22 always
   110 label __label21
   111 set __tmp19 176
   112 label __label22
-    * op sub __tmp22 __tmp19 cly
-    * set clh __tmp22
+  113 op sub clh __tmp19 cly
   114 set crh clh
   115 set __tmp11 crh
   116 jump __label18 always
 
   124 op greaterThanEq __tmp23 FROM_INDEX 8
   125 jump __label23 equal __tmp23 false
   126 op add __tmp25 OFFSET_X BAR_SPACE
-    * op sub __tmp26 __tmp25 2
-    * set clx __tmp26
+  127 op sub clx __tmp25 2
   128 set crx clx
   129 op add __tmp27 OFFSET_X BAR_SPACE
   130 op sub __tmp28 176 __tmp27
-    * op add __tmp29 __tmp28 1
-    * set clw __tmp29
+  131 op add clw __tmp28 1
   132 set crw clw
   133 op mod __tmp30 FROM_INDEX 8
   134 op equal __tmp31 __tmp30 0
 
   138 label __label25
   139 op mod __tmp33 FROM_INDEX 8
   140 op mul __tmp34 __tmp33 BAR_GAP
-    * op add __tmp35 OFFSET_Y __tmp34
-    * set __tmp32 __tmp35
+  141 op add __tmp32 OFFSET_Y __tmp34
   142 label __label26
   143 set cly __tmp32
   144 set cry cly
 
   146 jump __label27 equal __tmp36 false
   147 op mod __tmp38 TO_INDEX 8
   148 op mul __tmp39 __tmp38 BAR_GAP
-    * op add __tmp40 OFFSET_Y __tmp39
-    * set __tmp37 __tmp40
+  149 op add __tmp37 OFFSET_Y __tmp39
   150 jump __label28 always
   151 label __label27
   152 set __tmp37 176
   153 label __label28
-    * op sub __tmp41 __tmp37 cry
-    * set clh __tmp41
+  154 op sub clh __tmp37 cry
   155 set crh clh
   156 set __tmp24 crh
   157 jump __label24 always
 
   159 set clx 0
   160 set crx clx
   161 op add __tmp42 OFFSET_X BAR_SPACE
-    * op sub __tmp43 __tmp42 2
-    * set clw __tmp43
+  162 op sub clw __tmp42 2
   163 set crw clw
   164 op equal __tmp44 FROM_INDEX 0
   165 jump __label29 equal __tmp44 false
 
   167 jump __label30 always
   168 label __label29
   169 op mul __tmp46 FROM_INDEX BAR_GAP
-    * op add __tmp47 OFFSET_Y __tmp46
-    * set __tmp45 __tmp47
+  170 op add __tmp45 OFFSET_Y __tmp46
   171 label __label30
   172 set cly __tmp45
   173 set cry cly
   174 op lessThan __tmp48 TO_INDEX 8
   175 jump __label31 equal __tmp48 false
   176 op mul __tmp50 TO_INDEX BAR_GAP
-    * op add __tmp51 OFFSET_Y __tmp50
-    * set __tmp49 __tmp51
+  177 op add __tmp49 OFFSET_Y __tmp50
   178 jump __label32 always
   179 label __label31
   180 set __tmp49 176
   181 label __label32
-    * op sub __tmp52 __tmp49 cly
-    * set clh __tmp52
+  182 op sub clh __tmp49 cly
   183 set crh clh
   184 op greaterThanEq __tmp53 TO_INDEX 8
   185 jump __label33 equal __tmp53 false
   186 op add __tmp55 OFFSET_X BAR_SPACE
-    * op sub __tmp56 __tmp55 2
-    * set crx __tmp56
+  187 op sub crx __tmp55 2
   188 op add __tmp57 OFFSET_X BAR_SPACE
   189 op sub __tmp58 176 __tmp57
-    * op add __tmp59 __tmp58 1
-    * set crw __tmp59
+  190 op add crw __tmp58 1
   191 set cry 0
   192 op lessThan __tmp60 TO_INDEX 16
   193 jump __label35 equal __tmp60 false
   194 op mod __tmp62 TO_INDEX 8
   195 op mul __tmp63 __tmp62 BAR_GAP
-    * op add __tmp64 OFFSET_Y __tmp63
-    * set __tmp61 __tmp64
+  196 op add __tmp61 OFFSET_Y __tmp63
   197 jump __label36 always
   198 label __label35
   199 set __tmp61 176
   200 label __label36
-    * op sub __tmp65 __tmp61 cry
-    * set crh __tmp65
+  201 op sub crh __tmp61 cry
   202 set __tmp54 crh
   203 jump __label34 always
   204 label __label33
 
   208 label __label24
   209 set __tmp11 __tmp24
   210 label __label18
-    * op idiv __tmp66 BAR_LENGTH 2
-    * set HALF_BAR __tmp66
+  211 op idiv HALF_BAR BAR_LENGTH 2
   212 set MAX CAPACITY
-    * op div __tmp67 BAR_LENGTH MAX
-    * set MUL __tmp67
+  213 op div MUL BAR_LENGTH MAX
   214 op notEqual __tmp68 MEMORY null
   215 jump __label37 equal __tmp68 false
   216 set n 0
 
   219 jump __label41 equal __tmp70 false
   220 write 0 MEMORY n
   221 label __label40
-    * op add __tmp71 n 1
-    * set n __tmp71
+  222 op add n n 1
   223 jump __label39 always
   224 label __label41
   225 set __tmp69 null
 
   232 sensor __tmp72 SWITCH @enabled
   233 op equal __tmp73 __tmp72 0
   234 jump __label44 equal __tmp73 false
-    * set __tmp74 @time
-    * set start __tmp74
+  235 set start @time
   236 draw color 0 0 80 255
   237 draw rect clx cly clw clh
   238 draw rect crx cry crw crh
 
   242 label __label45
   243 op lessThan __tmp75 n @links
   244 jump __label47 equal __tmp75 false
-    * getlink __tmp76 n
-    * set driver __tmp76
+  245 getlink driver n
   246 sensor __tmp77 driver @type
   247 op equal __tmp78 __tmp77 @mass-driver
   248 jump __label48 equal __tmp78 false
-    * op idiv __tmp80 index COLUMN_SIZE
-    * set column __tmp80
-    * op mod __tmp81 index COLUMN_SIZE
-    * set row __tmp81
+  249 op idiv column index COLUMN_SIZE
+  250 op mod row index COLUMN_SIZE
   251 op mul __tmp82 column BAR_SPACE
-    * op add __tmp83 OFFSET_X __tmp82
-    * set x __tmp83
+  252 op add x OFFSET_X __tmp82
   253 op mul __tmp84 row BAR_GAP
-    * op add __tmp85 OFFSET_Y __tmp84
-    * set y __tmp85
+  254 op add y OFFSET_Y __tmp84
   255 draw color 0 0 80 255
   256 op sub __tmp86 x 1
   257 op sub __tmp87 y 1
 
   260 op add __tmp88 x 7
   261 op add __tmp89 y 7
   262 draw image __tmp88 __tmp89 @mass-driver 16 0
-    * op add __tmp90 x 16
-    * set x __tmp90
-    * sensor __tmp91 driver @totalItems
-    * set items __tmp91
+  263 op add x x 16
+  264 sensor items driver @totalItems
   265 read __tmp92 MEMORY n
-    * op max __tmp93 __tmp92 items
-    * set maxx __tmp93
+  266 op max maxx __tmp92 items
   267 write maxx MEMORY n
   268 op greaterThan __tmp94 maxx MAX
   269 jump __label50 equal __tmp94 false
-    * op mul __tmp96 2 CAPACITY
-    * set MAX __tmp96
-    * op div __tmp97 BAR_LENGTH MAX
-    * set MUL __tmp97
+  270 op mul MAX 2 CAPACITY
+  271 op div MUL BAR_LENGTH MAX
   272 set __tmp95 MUL
   273 jump __label51 always
   274 label __label50
 
   308 draw lineRect __tmp106 y HALF_BAR BAR_WIDTH
   309 set __tmp105 null
   310 label __label57
-    * op add __tmp107 index 1
-    * set index __tmp107
+  311 op add index index 1
   312 set __tmp79 index
   313 jump __label49 always
   314 label __label48
   315 set __tmp79 null
   316 label __label49
   317 label __label46
-    * op add __tmp108 n 1
-    * set n __tmp108
+  318 op add n n 1
   319 jump __label45 always
   320 label __label47
   321 drawflush DISPLAY

Modifications by Dead Code Elimination, pass 1, iteration 1:
 
    22 jump __label7 always
    23 label __label8
    24 set MESSAGE block
-    * set __tmp6 MESSAGE
    25 jump __label6 always
    26 label __label7
    27 jump __label10 equal __ast0 @switch
    28 jump __label9 always
    29 label __label10
    30 set SWITCH block
-    * set __tmp6 SWITCH
    31 jump __label6 always
    32 label __label9
    33 jump __label12 equal __ast0 @logic-display
 
    35 jump __label11 always
    36 label __label12
    37 set DISPLAY block
-    * set __tmp6 DISPLAY
    38 jump __label6 always
    39 label __label11
    40 jump __label14 equal __ast0 @memory-bank
 
    42 jump __label13 always
    43 label __label14
    44 set MEMORY block
-    * set __tmp6 MEMORY
    45 jump __label6 always
    46 label __label13
-    * set __tmp6 null
    47 label __label6
    48 label __label4
    49 jump __label3 always
 
    64 jump __label15 equal __tmp7 false
    65 print "No display."
    66 print "\n"
-    * set __tmp8 "No display."
    67 jump __label16 always
    68 label __label15
-    * set __tmp8 null
    69 label __label16
    70 printflush MESSAGE
    71 label __label1
 
   105 label __label22
   106 op sub clh __tmp19 cly
   107 set crh clh
-    * set __tmp11 crh
   108 jump __label18 always
   109 label __label17
   110 set OFFSET_X 5
 
   198 label __label34
   199 set __tmp24 __tmp54
   200 label __label24
-    * set __tmp11 __tmp24
   201 label __label18
   202 op idiv HALF_BAR BAR_LENGTH 2
   203 set MAX CAPACITY
 
   213 op add n n 1
   214 jump __label39 always
   215 label __label41
-    * set __tmp69 null
   216 jump __label38 always
   217 label __label37
-    * set __tmp69 null
   218 label __label38
   219 control enabled SWITCH 0
   220 label __label42
 
   258 jump __label50 equal __tmp94 false
   259 op mul MAX 2 CAPACITY
   260 op div MUL BAR_LENGTH MAX
-    * set __tmp95 MUL
   261 jump __label51 always
   262 label __label50
-    * set __tmp95 null
   263 label __label51
   264 op lessThanEq __tmp98 MAX CAPACITY
   265 jump __label52 equal __tmp98 false
   266 draw color 0 128 0 255
-    * set __tmp99 null
   267 jump __label53 always
   268 label __label52
   269 draw color 128 128 0 255
-    * set __tmp99 null
   270 label __label53
   271 op mul __tmp100 items MUL
   272 draw rect x y __tmp100 BAR_WIDTH
 
   275 draw color 220 220 220 255
   276 op mul __tmp103 maxx MUL
   277 draw lineRect x y __tmp103 BAR_WIDTH
-    * set __tmp102 null
   278 jump __label55 always
   279 label __label54
-    * set __tmp102 null
   280 label __label55
   281 op lessThanEq __tmp104 MAX CAPACITY
   282 jump __label56 equal __tmp104 false
   283 draw color 0 255 0 255
   284 draw lineRect x y BAR_LENGTH BAR_WIDTH
-    * set __tmp105 null
   285 jump __label57 always
   286 label __label56
   287 draw color 255 255 0 255
   288 draw lineRect x y HALF_BAR BAR_WIDTH
   289 op add __tmp106 x HALF_BAR
   290 draw lineRect __tmp106 y HALF_BAR BAR_WIDTH
-    * set __tmp105 null
   291 label __label57
   292 op add index index 1
-    * set __tmp79 index
   293 jump __label49 always
   294 label __label48
-    * set __tmp79 null
   295 label __label49
   296 label __label46
   297 op add n n 1

Modifications by Dead Code Elimination, pass 1, iteration 2:
 
   145 label __label28
   146 op sub clh __tmp37 cry
   147 set crh clh
-    * set __tmp24 crh
   148 jump __label24 always
   149 label __label23
   150 set clx 0
 
   195 label __label33
   196 set __tmp54 null
   197 label __label34
-    * set __tmp24 __tmp54
   198 label __label24
   199 label __label18
   200 op idiv HALF_BAR BAR_LENGTH 2

Modifications by Dead Code Elimination, pass 1, iteration 3:
 
   190 set __tmp61 176
   191 label __label36
   192 op sub crh __tmp61 cry
-    * set __tmp54 crh
   193 jump __label34 always
   194 label __label33
-    * set __tmp54 null
   195 label __label34
   196 label __label24
   197 label __label18

Modifications by Conditional Jump Optimization, pass 2, iteration 1:
 
     4 set DISPLAY null
     5 set MEMORY null
     6 label __label0
-    * op equal __tmp0 DISPLAY null
-    * jump __label2 equal __tmp0 false
+    7 jump __label2 notEqual DISPLAY null
     8 print "Mass Driver Monitor"
     9 print "\n"
    10 set n @links
    11 label __label3
-    * op greaterThan __tmp2 n 0
-    * jump __label5 equal __tmp2 false
+   12 jump __label5 lessThanEq n 0
    13 op sub n n 1
    14 getlink block n
    15 print "Found: "
 
    58 print "Display: "
    59 print DISPLAY
    60 print "\n"
-    * op equal __tmp7 DISPLAY null
-    * jump __label15 equal __tmp7 false
+   61 jump __label15 notEqual DISPLAY null
    62 print "No display."
    63 print "\n"
    64 jump __label16 always
 
    69 jump __label0 always
    70 label __label2
    71 sensor __tmp9 DISPLAY @type
-    * op equal __tmp10 __tmp9 @logic-display
-    * jump __label17 equal __tmp10 false
+   72 jump __label17 notEqual __tmp9 @logic-display
    73 set OFFSET_X 2
    74 set OFFSET_Y 2
    75 set BAR_WIDTH 14
 
    81 op add __tmp12 OFFSET_X BAR_SPACE
    82 op sub clw __tmp12 2
    83 set crw clw
-    * op equal __tmp14 FROM_INDEX 0
-    * jump __label19 equal __tmp14 false
+   84 jump __label19 notEqual FROM_INDEX 0
    85 set __tmp15 0
    86 jump __label20 always
    87 label __label19
 
    90 label __label20
    91 set cly __tmp15
    92 set cry cly
-    * op lessThan __tmp18 TO_INDEX 8
-    * jump __label21 equal __tmp18 false
+   93 jump __label21 greaterThanEq TO_INDEX 8
    94 op mul __tmp20 TO_INDEX BAR_GAP
    95 op add __tmp19 OFFSET_Y __tmp20
    96 jump __label22 always
 
   107 set BAR_LENGTH 60
   108 set BAR_SPACE 88
   109 set BAR_GAP 22
-    * op greaterThanEq __tmp23 FROM_INDEX 8
-    * jump __label23 equal __tmp23 false
+  110 jump __label23 lessThan FROM_INDEX 8
   111 op add __tmp25 OFFSET_X BAR_SPACE
   112 op sub clx __tmp25 2
   113 set crx clx
 
   116 op add clw __tmp28 1
   117 set crw clw
   118 op mod __tmp30 FROM_INDEX 8
-    * op equal __tmp31 __tmp30 0
-    * jump __label25 equal __tmp31 false
+  119 jump __label25 notEqual __tmp30 0
   120 set __tmp32 0
   121 jump __label26 always
   122 label __label25
 
   126 label __label26
   127 set cly __tmp32
   128 set cry cly
-    * op lessThan __tmp36 TO_INDEX 16
-    * jump __label27 equal __tmp36 false
+  129 jump __label27 greaterThanEq TO_INDEX 16
   130 op mod __tmp38 TO_INDEX 8
   131 op mul __tmp39 __tmp38 BAR_GAP
   132 op add __tmp37 OFFSET_Y __tmp39
 
   143 op add __tmp42 OFFSET_X BAR_SPACE
   144 op sub clw __tmp42 2
   145 set crw clw
-    * op equal __tmp44 FROM_INDEX 0
-    * jump __label29 equal __tmp44 false
+  146 jump __label29 notEqual FROM_INDEX 0
   147 set __tmp45 0
   148 jump __label30 always
   149 label __label29
 
   152 label __label30
   153 set cly __tmp45
   154 set cry cly
-    * op lessThan __tmp48 TO_INDEX 8
-    * jump __label31 equal __tmp48 false
+  155 jump __label31 greaterThanEq TO_INDEX 8
   156 op mul __tmp50 TO_INDEX BAR_GAP
   157 op add __tmp49 OFFSET_Y __tmp50
   158 jump __label32 always
 
   161 label __label32
   162 op sub clh __tmp49 cly
   163 set crh clh
-    * op greaterThanEq __tmp53 TO_INDEX 8
-    * jump __label33 equal __tmp53 false
+  164 jump __label33 lessThan TO_INDEX 8
   165 op add __tmp55 OFFSET_X BAR_SPACE
   166 op sub crx __tmp55 2
   167 op add __tmp57 OFFSET_X BAR_SPACE
   168 op sub __tmp58 176 __tmp57
   169 op add crw __tmp58 1
   170 set cry 0
-    * op lessThan __tmp60 TO_INDEX 16
-    * jump __label35 equal __tmp60 false
+  171 jump __label35 greaterThanEq TO_INDEX 16
   172 op mod __tmp62 TO_INDEX 8
   173 op mul __tmp63 __tmp62 BAR_GAP
   174 op add __tmp61 OFFSET_Y __tmp63
 
   185 op idiv HALF_BAR BAR_LENGTH 2
   186 set MAX CAPACITY
   187 op div MUL BAR_LENGTH MAX
-    * op notEqual __tmp68 MEMORY null
-    * jump __label37 equal __tmp68 false
+  188 jump __label37 equal MEMORY null
   189 set n 0
   190 label __label39
-    * op lessThan __tmp70 n @links
-    * jump __label41 equal __tmp70 false
+  191 jump __label41 greaterThanEq n @links
   192 write 0 MEMORY n
   193 label __label40
   194 op add n n 1
 
   200 control enabled SWITCH 0
   201 label __label42
   202 sensor __tmp72 SWITCH @enabled
-    * op equal __tmp73 __tmp72 0
-    * jump __label44 equal __tmp73 false
+  203 jump __label44 notEqual __tmp72 0
   204 set start @time
   205 draw color 0 0 80 255
   206 draw rect clx cly clw clh
 
   209 set index FROM_INDEX
   210 set n 0
   211 label __label45
-    * op lessThan __tmp75 n @links
-    * jump __label47 equal __tmp75 false
+  212 jump __label47 greaterThanEq n @links
   213 getlink driver n
   214 sensor __tmp77 driver @type
-    * op equal __tmp78 __tmp77 @mass-driver
-    * jump __label48 equal __tmp78 false
+  215 jump __label48 notEqual __tmp77 @mass-driver
   216 op idiv column index COLUMN_SIZE
   217 op mod row index COLUMN_SIZE
   218 op mul __tmp82 column BAR_SPACE
 
   232 read __tmp92 MEMORY n
   233 op max maxx __tmp92 items
   234 write maxx MEMORY n
-    * op greaterThan __tmp94 maxx MAX
-    * jump __label50 equal __tmp94 false
+  235 jump __label50 lessThanEq maxx MAX
   236 op mul MAX 2 CAPACITY
   237 op div MUL BAR_LENGTH MAX
   238 jump __label51 always
   239 label __label50
   240 label __label51
-    * op lessThanEq __tmp98 MAX CAPACITY
-    * jump __label52 equal __tmp98 false
+  241 jump __label52 greaterThan MAX CAPACITY
   242 draw color 0 128 0 255
   243 jump __label53 always
   244 label __label52
 
   246 label __label53
   247 op mul __tmp100 items MUL
   248 draw rect x y __tmp100 BAR_WIDTH
-    * op notEqual __tmp101 MEMORY null
-    * jump __label54 equal __tmp101 false
+  249 jump __label54 equal MEMORY null
   250 draw color 220 220 220 255
   251 op mul __tmp103 maxx MUL
   252 draw lineRect x y __tmp103 BAR_WIDTH
   253 jump __label55 always
   254 label __label54
   255 label __label55
-    * op lessThanEq __tmp104 MAX CAPACITY
-    * jump __label56 equal __tmp104 false
+  256 jump __label56 greaterThan MAX CAPACITY
   257 draw color 0 255 0 255
   258 draw lineRect x y BAR_LENGTH BAR_WIDTH
   259 jump __label57 always

Modifications by Single Step Elimination, pass 2, iteration 1:
 
    40 jump __label13 always
    41 label __label14
    42 set MEMORY block
-    * jump __label6 always
    43 label __label13
    44 label __label6
    45 label __label4
 
    60 jump __label15 notEqual DISPLAY null
    61 print "No display."
    62 print "\n"
-    * jump __label16 always
    63 label __label15
    64 label __label16
    65 printflush MESSAGE
 
   175 set __tmp61 176
   176 label __label36
   177 op sub crh __tmp61 cry
-    * jump __label34 always
   178 label __label33
   179 label __label34
   180 label __label24
 
   191 op add n n 1
   192 jump __label39 always
   193 label __label41
-    * jump __label38 always
   194 label __label37
   195 label __label38
   196 control enabled SWITCH 0
 
   231 jump __label50 lessThanEq maxx MAX
   232 op mul MAX 2 CAPACITY
   233 op div MUL BAR_LENGTH MAX
-    * jump __label51 always
   234 label __label50
   235 label __label51
   236 jump __label52 greaterThan MAX CAPACITY
 
   245 draw color 220 220 220 255
   246 op mul __tmp103 maxx MUL
   247 draw lineRect x y __tmp103 BAR_WIDTH
-    * jump __label55 always
   248 label __label54
   249 label __label55
   250 jump __label56 greaterThan MAX CAPACITY
 
   258 draw lineRect __tmp106 y HALF_BAR BAR_WIDTH
   259 label __label57
   260 op add index index 1
-    * jump __label49 always
   261 label __label48
   262 label __label49
   263 label __label46

Modifications by Loop Optimization, pass 2, iteration 1:
 
     5 set MEMORY null
     6 label __label0
     7 jump __label2 notEqual DISPLAY null
+    8 label __label58
     9 print "Mass Driver Monitor"
    10 print "\n"
    11 set n @links
    12 label __label3
    13 jump __label5 lessThanEq n 0
+   14 label __label59
    15 op sub n n 1
    16 getlink block n
    17 print "Found: "
 
    45 label __label13
    46 label __label6
    47 label __label4
-    * jump __label3 always
+   48 jump __label59 greaterThan n 0
    49 label __label5
    50 print "Message: "
    51 print MESSAGE
 
    66 label __label16
    67 printflush MESSAGE
    68 label __label1
-    * jump __label0 always
+   69 jump __label58 equal DISPLAY null
    70 label __label2
    71 sensor __tmp9 DISPLAY @type
    72 jump __label17 notEqual __tmp9 @logic-display
 
   188 set n 0
   189 label __label39
   190 jump __label41 greaterThanEq n @links
+  191 label __label60
   192 write 0 MEMORY n
   193 label __label40
   194 op add n n 1
-    * jump __label39 always
+  195 jump __label60 lessThan n @links
   196 label __label41
   197 label __label37
   198 label __label38
 
   200 label __label42
   201 sensor __tmp72 SWITCH @enabled
   202 jump __label44 notEqual __tmp72 0
+  203 label __label61
   204 set start @time
   205 draw color 0 0 80 255
   206 draw rect clx cly clw clh
 
   210 set n 0
   211 label __label45
   212 jump __label47 greaterThanEq n @links
+  213 label __label62
   214 getlink driver n
   215 sensor __tmp77 driver @type
   216 jump __label48 notEqual __tmp77 @mass-driver
 
   267 label __label49
   268 label __label46
   269 op add n n 1
-    * jump __label45 always
+  270 jump __label62 lessThan n @links
   271 label __label47
   272 drawflush DISPLAY
   273 print "Mass Driver Monitor"
 
   279 print " ms"
   280 printflush MESSAGE
   281 label __label43
-    * jump __label42 always
+  282 sensor __tmp72 SWITCH @enabled
+  283 jump __label61 equal __tmp72 0
   284 label __label44
   285 end

Modifications by If Expression Optimization, pass 2, iteration 1:
 
    81 op add __tmp12 OFFSET_X BAR_SPACE
    82 op sub clw __tmp12 2
    83 set crw clw
-    * jump __label19 notEqual FROM_INDEX 0
-    * set __tmp15 0
-    * jump __label20 always
+   84 set cly 0
+   85 jump __label20 equal FROM_INDEX 0
    86 label __label19
    87 op mul __tmp16 FROM_INDEX BAR_GAP
-    * op add __tmp15 OFFSET_Y __tmp16
+   88 op add cly OFFSET_Y __tmp16
    89 label __label20
-    * set cly __tmp15
    90 set cry cly
-    * jump __label21 greaterThanEq TO_INDEX 8
+   91 set __tmp19 176
+   92 jump __label22 greaterThanEq TO_INDEX 8
    93 op mul __tmp20 TO_INDEX BAR_GAP
    94 op add __tmp19 OFFSET_Y __tmp20
    95 jump __label22 always
-    * label __label21
-    * set __tmp19 176
    96 label __label22
    97 op sub clh __tmp19 cly
    98 set crh clh
 
   112 op sub __tmp28 176 __tmp27
   113 op add clw __tmp28 1
   114 set crw clw
+  115 set cly 0
   116 op mod __tmp30 FROM_INDEX 8
-    * jump __label25 notEqual __tmp30 0
-    * set __tmp32 0
-    * jump __label26 always
+  117 jump __label26 equal __tmp30 0
   118 label __label25
   119 op mod __tmp33 FROM_INDEX 8
   120 op mul __tmp34 __tmp33 BAR_GAP
-    * op add __tmp32 OFFSET_Y __tmp34
+  121 op add cly OFFSET_Y __tmp34
   122 label __label26
-    * set cly __tmp32
   123 set cry cly
-    * jump __label27 greaterThanEq TO_INDEX 16
+  124 set __tmp37 176
+  125 jump __label28 greaterThanEq TO_INDEX 16
   126 op mod __tmp38 TO_INDEX 8
   127 op mul __tmp39 __tmp38 BAR_GAP
   128 op add __tmp37 OFFSET_Y __tmp39
   129 jump __label28 always
-    * label __label27
-    * set __tmp37 176
   130 label __label28
   131 op sub clh __tmp37 cry
   132 set crh clh
 
   137 op add __tmp42 OFFSET_X BAR_SPACE
   138 op sub clw __tmp42 2
   139 set crw clw
-    * jump __label29 notEqual FROM_INDEX 0
-    * set __tmp45 0
-    * jump __label30 always
+  140 set cly 0
+  141 jump __label30 equal FROM_INDEX 0
   142 label __label29
   143 op mul __tmp46 FROM_INDEX BAR_GAP
-    * op add __tmp45 OFFSET_Y __tmp46
+  144 op add cly OFFSET_Y __tmp46
   145 label __label30
-    * set cly __tmp45
   146 set cry cly
-    * jump __label31 greaterThanEq TO_INDEX 8
+  147 set __tmp49 176
+  148 jump __label32 greaterThanEq TO_INDEX 8
   149 op mul __tmp50 TO_INDEX BAR_GAP
   150 op add __tmp49 OFFSET_Y __tmp50
   151 jump __label32 always
-    * label __label31
-    * set __tmp49 176
   152 label __label32
   153 op sub clh __tmp49 cly
   154 set crh clh
 
   159 op sub __tmp58 176 __tmp57
   160 op add crw __tmp58 1
   161 set cry 0
-    * jump __label35 greaterThanEq TO_INDEX 16
+  162 set __tmp61 176
+  163 jump __label36 greaterThanEq TO_INDEX 16
   164 op mod __tmp62 TO_INDEX 8
   165 op mul __tmp63 __tmp62 BAR_GAP
   166 op add __tmp61 OFFSET_Y __tmp63
   167 jump __label36 always
-    * label __label35
-    * set __tmp61 176
   168 label __label36
   169 op sub crh __tmp61 cry
   170 label __label33

Modifications by Data Flow Optimization, pass 2, iteration 1:
 
    77 set BAR_SPACE 80
    78 set BAR_GAP 20
    79 set clx 0
-    * set crx clx
+   80 set crx 0
    81 op add __tmp12 OFFSET_X BAR_SPACE
    82 op sub clw __tmp12 2
    83 set crw clw
 
   109 op sub clx __tmp25 2
   110 set crx clx
   111 op add __tmp27 OFFSET_X BAR_SPACE
-    * op sub __tmp28 176 __tmp27
-    * op add clw __tmp28 1
+  112 op sub __tmp28 176 __tmp25
+  113 op sub clw 177 __tmp27
   114 set crw clw
   115 set cly 0
   116 op mod __tmp30 FROM_INDEX 8
   117 jump __label26 equal __tmp30 0
   118 label __label25
   119 op mod __tmp33 FROM_INDEX 8
-    * op mul __tmp34 __tmp33 BAR_GAP
+  120 op mul __tmp34 __tmp30 BAR_GAP
   121 op add cly OFFSET_Y __tmp34
   122 label __label26
   123 set cry cly
 
   128 op add __tmp37 OFFSET_Y __tmp39
   129 jump __label28 always
   130 label __label28
-    * op sub clh __tmp37 cry
+  131 op sub clh __tmp37 cly
   132 set crh clh
   133 jump __label24 always
   134 label __label23
   135 set clx 0
-    * set crx clx
+  136 set crx 0
   137 op add __tmp42 OFFSET_X BAR_SPACE
   138 op sub clw __tmp42 2
   139 set crw clw
 
   154 set crh clh
   155 jump __label33 lessThan TO_INDEX 8
   156 op add __tmp55 OFFSET_X BAR_SPACE
-    * op sub crx __tmp55 2
+  157 op sub crx __tmp42 2
   158 op add __tmp57 OFFSET_X BAR_SPACE
-    * op sub __tmp58 176 __tmp57
-    * op add crw __tmp58 1
+  159 op sub __tmp58 176 __tmp42
+  160 op sub crw 177 __tmp57
   161 set cry 0
   162 set __tmp61 176
   163 jump __label36 greaterThanEq TO_INDEX 16
 
   166 op add __tmp61 OFFSET_Y __tmp63
   167 jump __label36 always
   168 label __label36
-    * op sub crh __tmp61 cry
+  169 op sub crh __tmp61 0
   170 label __label33
   171 label __label34
   172 label __label24
 
   177 jump __label37 equal MEMORY null
   178 set n 0
   179 label __label39
-    * jump __label41 greaterThanEq n @links
+  180 jump __label41 greaterThanEq 0 @links
   181 label __label60
   182 write 0 MEMORY n
   183 label __label40
 
   199 set index FROM_INDEX
   200 set n 0
   201 label __label45
-    * jump __label47 greaterThanEq n @links
+  202 jump __label47 greaterThanEq 0 @links
   203 label __label62
   204 getlink driver n
   205 sensor __tmp77 driver @type

Modifications by Data Flow Optimization, pass 2, iteration 2:
 
   109 op sub clx __tmp25 2
   110 set crx clx
   111 op add __tmp27 OFFSET_X BAR_SPACE
-    * op sub __tmp28 176 __tmp25
-    * op sub clw 177 __tmp27
+  112 op sub clw 177 __tmp25
   113 set crw clw
   114 set cly 0
   115 op mod __tmp30 FROM_INDEX 8
   116 jump __label26 equal __tmp30 0
   117 label __label25
-    * op mod __tmp33 FROM_INDEX 8
   118 op mul __tmp34 __tmp30 BAR_GAP
   119 op add cly OFFSET_Y __tmp34
   120 label __label26
 
   151 op sub clh __tmp49 cly
   152 set crh clh
   153 jump __label33 lessThan TO_INDEX 8
-    * op add __tmp55 OFFSET_X BAR_SPACE
   154 op sub crx __tmp42 2
   155 op add __tmp57 OFFSET_X BAR_SPACE
-    * op sub __tmp58 176 __tmp42
-    * op sub crw 177 __tmp57
+  156 op sub crw 177 __tmp42
   157 set cry 0
   158 set __tmp61 176
   159 jump __label36 greaterThanEq TO_INDEX 16

Modifications by Data Flow Optimization, pass 2, iteration 3:
 
   108 op add __tmp25 OFFSET_X BAR_SPACE
   109 op sub clx __tmp25 2
   110 set crx clx
-    * op add __tmp27 OFFSET_X BAR_SPACE
   111 op sub clw 177 __tmp25
   112 set crw clw
   113 set cly 0
 
   151 set crh clh
   152 jump __label33 lessThan TO_INDEX 8
   153 op sub crx __tmp42 2
-    * op add __tmp57 OFFSET_X BAR_SPACE
   154 op sub crw 177 __tmp42
   155 set cry 0
   156 set __tmp61 176

Modifications by Single Step Elimination, pass 3, iteration 1:
 
    92 jump __label22 greaterThanEq TO_INDEX 8
    93 op mul __tmp20 TO_INDEX BAR_GAP
    94 op add __tmp19 OFFSET_Y __tmp20
-    * jump __label22 always
    95 label __label22
    96 op sub clh __tmp19 cly
    97 set crh clh
 
   122 op mod __tmp38 TO_INDEX 8
   123 op mul __tmp39 __tmp38 BAR_GAP
   124 op add __tmp37 OFFSET_Y __tmp39
-    * jump __label28 always
   125 label __label28
   126 op sub clh __tmp37 cly
   127 set crh clh
 
   143 jump __label32 greaterThanEq TO_INDEX 8
   144 op mul __tmp50 TO_INDEX BAR_GAP
   145 op add __tmp49 OFFSET_Y __tmp50
-    * jump __label32 always
   146 label __label32
   147 op sub clh __tmp49 cly
   148 set crh clh
 
   155 op mod __tmp62 TO_INDEX 8
   156 op mul __tmp63 __tmp62 BAR_GAP
   157 op add __tmp61 OFFSET_Y __tmp63
-    * jump __label36 always
   158 label __label36
   159 op sub crh __tmp61 0
   160 label __label33

Modifications by Jump Straightening, pass 4, iteration 1:
 
    18 print block
    19 print "\n"
    20 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   21 jump __label7 notEqual __ast0 @message
    22 label __label8
    23 set MESSAGE block
    24 jump __label6 always
    25 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   26 jump __label9 notEqual __ast0 @switch
    27 label __label10
    28 set SWITCH block
    29 jump __label6 always
    30 label __label9
    31 jump __label12 equal __ast0 @logic-display
-    * jump __label12 equal __ast0 @large-logic-display
-    * jump __label11 always
+   32 jump __label11 notEqual __ast0 @large-logic-display
    33 label __label12
    34 set DISPLAY block
    35 jump __label6 always
    36 label __label11
    37 jump __label14 equal __ast0 @memory-bank
-    * jump __label14 equal __ast0 @memory-cell
-    * jump __label13 always
+   38 jump __label13 notEqual __ast0 @memory-cell
    39 label __label14
    40 set MEMORY block
    41 label __label13

Modifications by Print Merging, pass 4, iteration 1:
 
     6 label __label0
     7 jump __label2 notEqual DISPLAY null
     8 label __label58
-    * print "Mass Driver Monitor"
-    * print "\n"
+    9 print "Mass Driver Monitor\n"
    10 set n @links
    11 label __label3
    12 jump __label5 lessThanEq n 0
 
    44 label __label5
    45 print "Message: "
    46 print MESSAGE
-    * print "\n"
-    * print "Switch: "
+   47 print "\nSwitch: "
    48 print SWITCH
-    * print "\n"
-    * print "Memory: "
+   49 print "\nMemory: "
    50 print MEMORY
-    * print "\n"
-    * print "Display: "
+   51 print "\nDisplay: "
    52 print DISPLAY
    53 print "\n"
    54 jump __label15 notEqual DISPLAY null
-    * print "No display."
-    * print "\n"
+   55 print "No display.\n"
    56 label __label15
    57 label __label16
    58 printflush MESSAGE
 
   241 jump __label62 lessThan n @links
   242 label __label47
   243 drawflush DISPLAY
-    * print "Mass Driver Monitor"
-    * print "\n"
+  244 print "Mass Driver Monitor\n"
   245 op sub __tmp109 @time start
   246 op floor __tmp110 __tmp109
   247 print "[lightgray]Draw time: "

Final code before resolving virtual instructions:

set FROM_INDEX 0
set TO_INDEX 16
set CAPACITY 120
set COLUMN_SIZE 8
set DISPLAY null
set MEMORY null
label __label0
jump __label2 notEqual DISPLAY null
label __label58
print "Mass Driver Monitor\n"
set n @links
label __label3
jump __label5 lessThanEq n 0
label __label59
op sub n n 1
getlink block n
print "Found: "
print block
print "\n"
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
label __label8
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
label __label10
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @logic-display
jump __label11 notEqual __ast0 @large-logic-display
label __label12
set DISPLAY block
jump __label6 always 0 0
label __label11
jump __label14 equal __ast0 @memory-bank
jump __label13 notEqual __ast0 @memory-cell
label __label14
set MEMORY block
label __label13
label __label6
label __label4
jump __label59 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nMemory: "
print MEMORY
print "\nDisplay: "
print DISPLAY
print "\n"
jump __label15 notEqual DISPLAY null
print "No display.\n"
label __label15
label __label16
printflush MESSAGE
label __label1
jump __label58 equal DISPLAY null
label __label2
sensor __tmp9 DISPLAY @type
jump __label17 notEqual __tmp9 @logic-display
set OFFSET_X 2
set OFFSET_Y 2
set BAR_WIDTH 14
set BAR_LENGTH 60
set BAR_SPACE 80
set BAR_GAP 20
set clx 0
set crx 0
op add __tmp12 OFFSET_X BAR_SPACE
op sub clw __tmp12 2
set crw clw
set cly 0
jump __label20 equal FROM_INDEX 0
label __label19
op mul __tmp16 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp16
label __label20
set cry cly
set __tmp19 176
jump __label22 greaterThanEq TO_INDEX 8
op mul __tmp20 TO_INDEX BAR_GAP
op add __tmp19 OFFSET_Y __tmp20
label __label22
op sub clh __tmp19 cly
set crh clh
jump __label18 always 0 0
label __label17
set OFFSET_X 5
set OFFSET_Y 4
set BAR_WIDTH 14
set BAR_LENGTH 60
set BAR_SPACE 88
set BAR_GAP 22
jump __label23 lessThan FROM_INDEX 8
op add __tmp25 OFFSET_X BAR_SPACE
op sub clx __tmp25 2
set crx clx
op sub clw 177 __tmp25
set crw clw
set cly 0
op mod __tmp30 FROM_INDEX 8
jump __label26 equal __tmp30 0
label __label25
op mul __tmp34 __tmp30 BAR_GAP
op add cly OFFSET_Y __tmp34
label __label26
set cry cly
set __tmp37 176
jump __label28 greaterThanEq TO_INDEX 16
op mod __tmp38 TO_INDEX 8
op mul __tmp39 __tmp38 BAR_GAP
op add __tmp37 OFFSET_Y __tmp39
label __label28
op sub clh __tmp37 cly
set crh clh
jump __label24 always 0 0
label __label23
set clx 0
set crx 0
op add __tmp42 OFFSET_X BAR_SPACE
op sub clw __tmp42 2
set crw clw
set cly 0
jump __label30 equal FROM_INDEX 0
label __label29
op mul __tmp46 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp46
label __label30
set cry cly
set __tmp49 176
jump __label32 greaterThanEq TO_INDEX 8
op mul __tmp50 TO_INDEX BAR_GAP
op add __tmp49 OFFSET_Y __tmp50
label __label32
op sub clh __tmp49 cly
set crh clh
jump __label33 lessThan TO_INDEX 8
op sub crx __tmp42 2
op sub crw 177 __tmp42
set cry 0
set __tmp61 176
jump __label36 greaterThanEq TO_INDEX 16
op mod __tmp62 TO_INDEX 8
op mul __tmp63 __tmp62 BAR_GAP
op add __tmp61 OFFSET_Y __tmp63
label __label36
op sub crh __tmp61 0
label __label33
label __label34
label __label24
label __label18
op idiv HALF_BAR BAR_LENGTH 2
set MAX CAPACITY
op div MUL BAR_LENGTH MAX
jump __label37 equal MEMORY null
set n 0
label __label39
jump __label41 greaterThanEq 0 @links
label __label60
write 0 MEMORY n
label __label40
op add n n 1
jump __label60 lessThan n @links
label __label41
label __label37
label __label38
control enabled SWITCH 0 0 0 0
label __label42
sensor __tmp72 SWITCH @enabled
jump __label44 notEqual __tmp72 0
label __label61
set start @time
draw color 0 0 80 255 0 0
draw rect clx cly clw clh 0 0
draw rect crx cry crw crh 0 0
draw stroke 2 0 0 0 0 0
set index FROM_INDEX
set n 0
label __label45
jump __label47 greaterThanEq 0 @links
label __label62
getlink driver n
sensor __tmp77 driver @type
jump __label48 notEqual __tmp77 @mass-driver
op idiv column index COLUMN_SIZE
op mod row index COLUMN_SIZE
op mul __tmp82 column BAR_SPACE
op add x OFFSET_X __tmp82
op mul __tmp84 row BAR_GAP
op add y OFFSET_Y __tmp84
draw color 0 0 80 255 0 0
op sub __tmp86 x 1
op sub __tmp87 y 1
draw rect __tmp86 __tmp87 BAR_SPACE 16 0 0
draw color 255 255 255 255 0 0
op add __tmp88 x 7
op add __tmp89 y 7
draw image __tmp88 __tmp89 @mass-driver 16 0 0
op add x x 16
sensor items driver @totalItems
read __tmp92 MEMORY n
op max maxx __tmp92 items
write maxx MEMORY n
jump __label50 lessThanEq maxx MAX
op mul MAX 2 CAPACITY
op div MUL BAR_LENGTH MAX
label __label50
label __label51
jump __label52 greaterThan MAX CAPACITY
draw color 0 128 0 255 0 0
jump __label53 always 0 0
label __label52
draw color 128 128 0 255 0 0
label __label53
op mul __tmp100 items MUL
draw rect x y __tmp100 BAR_WIDTH 0 0
jump __label54 equal MEMORY null
draw color 220 220 220 255 0 0
op mul __tmp103 maxx MUL
draw lineRect x y __tmp103 BAR_WIDTH 0 0
label __label54
label __label55
jump __label56 greaterThan MAX CAPACITY
draw color 0 255 0 255 0 0
draw lineRect x y BAR_LENGTH BAR_WIDTH 0 0
jump __label57 always 0 0
label __label56
draw color 255 255 0 255 0 0
draw lineRect x y HALF_BAR BAR_WIDTH 0 0
op add __tmp106 x HALF_BAR
draw lineRect __tmp106 y HALF_BAR BAR_WIDTH 0 0
label __label57
op add index index 1
label __label48
label __label49
label __label46
op add n n 1
jump __label62 lessThan n @links
label __label47
drawflush DISPLAY
print "Mass Driver Monitor\n"
op sub __tmp109 @time start
op floor __tmp110 __tmp109 0
print "[lightgray]Draw time: "
print __tmp110
print " ms"
printflush MESSAGE
label __label43
sensor __tmp72 SWITCH @enabled
jump __label61 equal __tmp72 0
label __label44
end

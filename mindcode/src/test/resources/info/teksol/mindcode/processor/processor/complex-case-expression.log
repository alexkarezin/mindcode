    92 instructions before optimizations.
     1 instructions eliminated by Temp Variables Elimination.
     1 instructions eliminated by Case Expression Optimization.
     1 instructions eliminated by Conditional Jump Optimization (4 iterations).
     1 instructions eliminated by Single Step Elimination (5 iterations).
     1 instructions modified by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
     1 instructions eliminated by If Expression Optimization (3 iterations).
    11 instructions eliminated by Data Flow Optimization (2 passes, 6 iterations).
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Stack Optimization.
     4 instructions eliminated by Jump Straightening.
     1 instructions updated by PropagateJumpTargets.
    65 instructions after optimizations.

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-1 instructions):
 
    86 label __label26
    87 pop bank1 __fn0_n
    88 set __retval12 __fn0retval
-    * op mul __tmp13 -1 __retval12
-    * set __tmp10 __tmp13
+   89 op mul __tmp10 -1 __retval12
    90 jump __label25 always
    91 label __label24
    92 set __tmp10 __fn0_n

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
    10 set i __retval0
    11 label __label3
    12 jump __label5 greaterThan i __tmp2
-    * set __ast0 i
    13 set __fn0_n 1
    14 callrec bank1 __label0 __label9
    15 label __label9
    16 set __retval4 __fn0retval
-    * jump __label8 equal __ast0 __retval4
+   17 jump __label8 equal i __retval4
    18 jump __label7 always
    19 label __label8
    20 set __tmp3 "A"
 
    24 callrec bank1 __label0 __label12
    25 label __label12
    26 set __retval5 __fn0retval
-    * jump __label11 equal __ast0 __retval5
+   27 jump __label11 equal i __retval5
    28 set __fn0_n 3
    29 callrec bank1 __label0 __label13
    30 label __label13
    31 set __retval6 __fn0retval
-    * jump __label11 equal __ast0 __retval6
-    * jump __label11 equal __ast0 4
+   32 jump __label11 equal i __retval6
+   33 jump __label11 equal i 4
    34 jump __label10 always
    35 label __label11
    36 set __tmp3 "B"
    37 jump __label6 always
    38 label __label10
-    * jump __label15 equal __ast0 5
+   39 jump __label15 equal i 5
    40 jump __label14 always
    41 label __label15
    42 jump __label4 always
 
    47 callrec bank1 __label0 __label19
    48 label __label19
    49 set __retval7 __fn0retval
-    * jump __label18 lessThan __ast0 __retval7
+   50 jump __label18 lessThan i __retval7
    51 set __fn0_n 8
    52 callrec bank1 __label0 __label20
    53 label __label20
    54 set __retval8 __fn0retval
-    * jump __label17 lessThanEq __ast0 __retval8
+   55 jump __label17 lessThanEq i __retval8
    56 label __label18
    57 jump __label16 always
    58 label __label17
    59 set __tmp3 "C"
    60 jump __label6 always
    61 label __label16
-    * jump __label22 equal __ast0 10
+   62 jump __label22 equal i 10
    63 jump __label21 always
    64 label __label22
    65 jump __label5 always

Modifications by Iterated phase, Conditional Jump Optimization, pass 1, iteration 1 (-1 instructions):
 
    76 label __label5
    77 end
    78 label __label0
-    * op greaterThan __tmp9 __fn0_n 0
-    * jump __label24 equal __tmp9 false
+   79 jump __label24 lessThanEq __fn0_n 0
    80 op mul __tmp11 -1 __fn0_n
    81 push bank1 __fn0_n
    82 set __fn0_n __tmp11

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
    76 label __label5
    77 end
    78 label __label0
-    * jump __label24 lessThanEq __fn0_n 0
+   79 set __fn0retval __fn0_n
+   80 jump __label25 lessThanEq __fn0_n 0
    81 op mul __tmp11 -1 __fn0_n
    82 push bank1 __fn0_n
    83 set __fn0_n __tmp11
 
    85 label __label26
    86 pop bank1 __fn0_n
    87 set __retval12 __fn0retval
-    * op mul __tmp10 -1 __retval12
+   88 op mul __fn0retval -1 __retval12
    89 jump __label25 always
-    * label __label24
-    * set __tmp10 __fn0_n
    90 label __label25
-    * set __fn0retval __tmp10
    91 label __label23
    92 return bank1
    93 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
     6 callrec bank1 __label0 __label2
     7 label __label2
     8 set __retval1 __fn0retval
-    * set __tmp2 __retval1
+    9 set __tmp2 __fn0retval
    10 set i __retval0
    11 label __label3
-    * jump __label5 greaterThan i __tmp2
+   12 jump __label5 greaterThan i __retval1
    13 set __fn0_n 1
    14 callrec bank1 __label0 __label9
    15 label __label9
    16 set __retval4 __fn0retval
-    * jump __label8 equal i __retval4
+   17 jump __label8 equal i __fn0retval
    18 jump __label7 always
    19 label __label8
    20 set __tmp3 "A"
 
    24 callrec bank1 __label0 __label12
    25 label __label12
    26 set __retval5 __fn0retval
-    * jump __label11 equal i __retval5
+   27 jump __label11 equal i __fn0retval
    28 set __fn0_n 3
    29 callrec bank1 __label0 __label13
    30 label __label13
    31 set __retval6 __fn0retval
-    * jump __label11 equal i __retval6
+   32 jump __label11 equal i __fn0retval
    33 jump __label11 equal i 4
    34 jump __label10 always
    35 label __label11
 
    40 jump __label14 always
    41 label __label15
    42 jump __label4 always
-    * set __tmp3 null
    43 jump __label6 always
    44 label __label14
    45 set __fn0_n 6
    46 callrec bank1 __label0 __label19
    47 label __label19
    48 set __retval7 __fn0retval
-    * jump __label18 lessThan i __retval7
+   49 jump __label18 lessThan i __fn0retval
    50 set __fn0_n 8
    51 callrec bank1 __label0 __label20
    52 label __label20
    53 set __retval8 __fn0retval
-    * jump __label17 lessThanEq i __retval8
+   54 jump __label17 lessThanEq i __fn0retval
    55 label __label18
    56 jump __label16 always
    57 label __label17
 
    62 jump __label21 always
    63 label __label22
    64 jump __label5 always
-    * set __tmp3 null
    65 jump __label6 always
    66 label __label21
    67 set __tmp3 "D"
    68 label __label6
    69 set str __tmp3
-    * print str
+   70 print __tmp3
    71 label __label4
    72 op add i i 1
    73 jump __label3 always
 
    78 jump __label25 lessThanEq __fn0_n 0
    79 op mul __tmp11 -1 __fn0_n
    80 push bank1 __fn0_n
-    * set __fn0_n __tmp11
+   81 op mul __fn0_n -1 __fn0_n
    82 callrec bank1 __label0 __label26
    83 label __label26
    84 pop bank1 __fn0_n
    85 set __retval12 __fn0retval
-    * op mul __fn0retval -1 __retval12
+   86 op mul __fn0retval -1 __fn0retval
    87 jump __label25 always
    88 label __label25
    89 label __label23

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
     6 callrec bank1 __label0 __label2
     7 label __label2
     8 set __retval1 __fn0retval
-    * set __tmp2 __fn0retval
     9 set i __retval0
    10 label __label3
    11 jump __label5 greaterThan i __retval1
    12 set __fn0_n 1
    13 callrec bank1 __label0 __label9
    14 label __label9
-    * set __retval4 __fn0retval
    15 jump __label8 equal i __fn0retval
    16 jump __label7 always
    17 label __label8
 
    21 set __fn0_n 2
    22 callrec bank1 __label0 __label12
    23 label __label12
-    * set __retval5 __fn0retval
    24 jump __label11 equal i __fn0retval
    25 set __fn0_n 3
    26 callrec bank1 __label0 __label13
    27 label __label13
-    * set __retval6 __fn0retval
    28 jump __label11 equal i __fn0retval
    29 jump __label11 equal i 4
    30 jump __label10 always
 
    41 set __fn0_n 6
    42 callrec bank1 __label0 __label19
    43 label __label19
-    * set __retval7 __fn0retval
    44 jump __label18 lessThan i __fn0retval
    45 set __fn0_n 8
    46 callrec bank1 __label0 __label20
    47 label __label20
-    * set __retval8 __fn0retval
    48 jump __label17 lessThanEq i __fn0retval
    49 label __label18
    50 jump __label16 always
 
    60 label __label21
    61 set __tmp3 "D"
    62 label __label6
-    * set str __tmp3
    63 print __tmp3
    64 label __label4
    65 op add i i 1
 
    69 label __label0
    70 set __fn0retval __fn0_n
    71 jump __label25 lessThanEq __fn0_n 0
-    * op mul __tmp11 -1 __fn0_n
    72 push bank1 __fn0_n
    73 op mul __fn0_n -1 __fn0_n
    74 callrec bank1 __label0 __label26
    75 label __label26
    76 pop bank1 __fn0_n
-    * set __retval12 __fn0retval
    77 op mul __fn0retval -1 __fn0retval
    78 jump __label25 always
    79 label __label25

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     9 set i __retval0
    10 label __label3
    11 jump __label5 greaterThan i __retval1
+   12 label __label27
    13 set __fn0_n 1
    14 callrec bank1 __label0 __label9
    15 label __label9
 
    64 print __tmp3
    65 label __label4
    66 op add i i 1
-    * jump __label3 always
+   67 jump __label27 lessThanEq i __retval1
    68 label __label5
    69 end
    70 label __label0

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-1 instructions):
 
    76 label __label26
    77 pop bank1 __fn0_n
    78 op mul __fn0retval -1 __fn0retval
-    * jump __label25 always
    79 label __label25
    80 label __label23
    81 return bank1

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
     8 set __retval1 __fn0retval
     9 set i __retval0
    10 label __label3
-    * jump __label5 greaterThan i __retval1
+   11 jump __label5 greaterThan __retval0 __fn0retval
    12 label __label27
    13 set __fn0_n 1
    14 callrec bank1 __label0 __label9

Modifications by Final phase, Jump Straightening, iteration 1 (-4 instructions):
 
    13 set __fn0_n 1
    14 callrec bank1 __label0 __label9
    15 label __label9
-    * jump __label8 equal i __fn0retval
-    * jump __label7 always
+   16 jump __label7 notEqual i __fn0retval
    17 label __label8
    18 set __tmp3 "A"
    19 jump __label6 always
 
    26 callrec bank1 __label0 __label13
    27 label __label13
    28 jump __label11 equal i __fn0retval
-    * jump __label11 equal i 4
-    * jump __label10 always
+   29 jump __label10 notEqual i 4
    30 label __label11
    31 set __tmp3 "B"
    32 jump __label6 always
    33 label __label10
-    * jump __label15 equal i 5
-    * jump __label14 always
+   34 jump __label14 notEqual i 5
    35 label __label15
    36 jump __label4 always
    37 jump __label6 always
 
    50 set __tmp3 "C"
    51 jump __label6 always
    52 label __label16
-    * jump __label22 equal i 10
-    * jump __label21 always
+   53 jump __label21 notEqual i 10
    54 label __label22
    55 jump __label5 always
    56 jump __label6 always

Modifications by Final phase, Jump Threading, iteration 1:
 
    39 set __fn0_n 6
    40 callrec bank1 __label0 __label19
    41 label __label19
-    * jump __label18 lessThan i __fn0retval
+   42 jump __label16 lessThan i __fn0retval
    43 set __fn0_n 8
    44 callrec bank1 __label0 __label20
    45 label __label20

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-3 instructions):
 
    34 jump __label14 notEqual i 5
    35 label __label15
    36 jump __label4 always
-    * jump __label6 always
    37 label __label14
    38 set __fn0_n 6
    39 callrec bank1 __label0 __label19
 
    52 jump __label21 notEqual i 10
    53 label __label22
    54 jump __label5 always
-    * jump __label6 always
    55 label __label21
    56 set __tmp3 "D"
    57 label __label6
 
    73 label __label25
    74 label __label23
    75 return bank1
-    * end

Modifications by Final phase, Stack Optimization, iteration 1 (-4 instructions):
 
    64 label __label0
    65 set __fn0retval __fn0_n
    66 jump __label25 lessThanEq __fn0_n 0
-    * push bank1 __fn0_n
    67 op mul __fn0_n -1 __fn0_n
    68 callrec bank1 __label0 __label26
    69 label __label26
-    * pop bank1 __fn0_n
    70 op mul __fn0retval -1 __fn0retval
    71 label __label25
    72 label __label23

Final code before resolving virtual instructions:

set __sp 0
set __fn0_n 1
callrec bank1 __label0 __label1
label __label1
set __retval0 __fn0retval
set __fn0_n 10
callrec bank1 __label0 __label2
label __label2
set __retval1 __fn0retval
set i __retval0
label __label3
jump __label5 greaterThan __retval0 __fn0retval
label __label27
set __fn0_n 1
callrec bank1 __label0 __label9
label __label9
jump __label7 notEqual i __fn0retval
label __label8
set __tmp3 "A"
jump __label6 always 0 0
label __label7
set __fn0_n 2
callrec bank1 __label0 __label12
label __label12
jump __label11 equal i __fn0retval
set __fn0_n 3
callrec bank1 __label0 __label13
label __label13
jump __label11 equal i __fn0retval
jump __label10 notEqual i 4
label __label11
set __tmp3 "B"
jump __label6 always 0 0
label __label10
jump __label14 notEqual i 5
label __label15
jump __label4 always 0 0
label __label14
set __fn0_n 6
callrec bank1 __label0 __label19
label __label19
jump __label16 lessThan i __fn0retval
set __fn0_n 8
callrec bank1 __label0 __label20
label __label20
jump __label17 lessThanEq i __fn0retval
label __label18
jump __label16 always 0 0
label __label17
set __tmp3 "C"
jump __label6 always 0 0
label __label16
jump __label21 notEqual i 10
label __label22
jump __label5 always 0 0
label __label21
set __tmp3 "D"
label __label6
print __tmp3
label __label4
op add i i 1
jump __label27 lessThanEq i __retval1
label __label5
end
label __label0
set __fn0retval __fn0_n
jump __label25 lessThanEq __fn0_n 0
op mul __fn0_n -1 __fn0_n
callrec bank1 __label0 __label26
label __label26
op mul __fn0retval -1 __fn0retval
label __label25
label __label23
return bank1

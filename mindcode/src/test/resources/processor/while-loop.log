    43 instructions before optimizations.
     3 instructions eliminated by OutputTempEliminator.
     2 instructions eliminated by ImproveNegativeConditionalJumps.
     1 loops improved by LoopOptimizer.
     1 instructions eliminated by IfExpressionOptimizer.
     4 instructions eliminated by DataFlowOptimizer (3 iterations).
     1 instructions eliminated by UnreachableCodeEliminator (1 iterations).
     1 instructions eliminated by SingleStepJumpEliminator (1 iterations).
     4 instructions eliminated by StackUsageOptimizer.
    27 instructions after optimizations.

Modifications by OutputTempEliminator, iteration 1:
 
    11 label __label3
    12 op lessThan __tmp2 i 10
    13 jump __label5 equal __tmp2 false
-    * op add __tmp3 j i
-    * set j __tmp3
+   14 op add j j i
    15 print j
-    * op add __tmp4 i 1
-    * set i __tmp4
+   16 op add i i 1
    17 label __label4
    18 jump __label3 always
    19 label __label5
 
    28 label __label9
    29 pop bank1 __fn0_n
    30 set __retval8 __fn0retval
-    * op mul __tmp9 -1 __retval8
-    * set __tmp6 __tmp9
+   31 op mul __tmp6 -1 __retval8
    32 jump __label8 always
    33 label __label7
    34 set __tmp6 __fn0_n

Modifications by ImproveNegativeConditionalJumps, iteration 1:
 
     9 set __retval1 __fn0retval
    10 set i __retval1
    11 label __label3
-    * op lessThan __tmp2 i 10
-    * jump __label5 equal __tmp2 false
+   12 jump __label5 greaterThanEq i 10
    13 op add j j i
    14 print j
    15 op add i i 1
 
    18 label __label5
    19 end
    20 label __label0
-    * op greaterThan __tmp5 __fn0_n 0
-    * jump __label7 equal __tmp5 false
+   21 jump __label7 lessThanEq __fn0_n 0
    22 op mul __tmp7 -1 __fn0_n
    23 push bank1 __fn0_n
    24 set __fn0_n __tmp7

Modifications by LoopOptimizer, iteration 1:
 
    10 set i __retval1
    11 label __label3
    12 jump __label5 greaterThanEq i 10
+   13 label __label10
    14 op add j j i
    15 print j
    16 op add i i 1
    17 label __label4
-    * jump __label3 always
+   18 jump __label10 lessThan i 10
    19 label __label5
    20 end
    21 label __label0

Modifications by IfExpressionOptimizer, iteration 1:
 
    19 label __label5
    20 end
    21 label __label0
-    * jump __label7 lessThanEq __fn0_n 0
+   22 set __fn0retval __fn0_n
+   23 jump __label8 lessThanEq __fn0_n 0
    24 op mul __tmp7 -1 __fn0_n
    25 push bank1 __fn0_n
    26 set __fn0_n __tmp7
 
    28 label __label9
    29 pop bank1 __fn0_n
    30 set __retval8 __fn0retval
-    * op mul __tmp6 -1 __retval8
+   31 op mul __fn0retval -1 __retval8
    32 jump __label8 always
-    * label __label7
-    * set __tmp6 __fn0_n
    33 label __label8
-    * set __fn0retval __tmp6
    34 label __label6
    35 return bank1
    36 end

Modifications by DataFlowOptimizer, iteration 1:
 
     2 callrec bank1 __label0 __label1
     3 label __label1
     4 set __retval0 __fn0retval
-    * set j __retval0
-    * set __fn0_n j
+    5 set j __fn0retval
+    6 set __fn0_n __retval0
     7 callrec bank1 __label0 __label2
     8 label __label2
     9 set __retval1 __fn0retval
-    * set i __retval1
+   10 set i __fn0retval
    11 label __label3
-    * jump __label5 greaterThanEq i 10
+   12 jump __label5 greaterThanEq __retval1 10
    13 label __label10
    14 op add j j i
    15 print j
 
    23 jump __label8 lessThanEq __fn0_n 0
    24 op mul __tmp7 -1 __fn0_n
    25 push bank1 __fn0_n
-    * set __fn0_n __tmp7
+   26 op mul __fn0_n -1 __fn0_n
    27 callrec bank1 __label0 __label9
    28 label __label9
    29 pop bank1 __fn0_n
    30 set __retval8 __fn0retval
-    * op mul __fn0retval -1 __retval8
+   31 op mul __fn0retval -1 __fn0retval
    32 jump __label8 always
    33 label __label8
    34 label __label6

Modifications by DataFlowOptimizer, iteration 2:
 
     3 label __label1
     4 set __retval0 __fn0retval
     5 set j __fn0retval
-    * set __fn0_n __retval0
+    6 set __fn0_n __fn0retval
     7 callrec bank1 __label0 __label2
     8 label __label2
     9 set __retval1 __fn0retval
    10 set i __fn0retval
    11 label __label3
-    * jump __label5 greaterThanEq __retval1 10
+   12 jump __label5 greaterThanEq __fn0retval 10
    13 label __label10
    14 op add j j i
    15 print j
 
    21 label __label0
    22 set __fn0retval __fn0_n
    23 jump __label8 lessThanEq __fn0_n 0
-    * op mul __tmp7 -1 __fn0_n
    24 push bank1 __fn0_n
    25 op mul __fn0_n -1 __fn0_n
    26 callrec bank1 __label0 __label9
    27 label __label9
    28 pop bank1 __fn0_n
-    * set __retval8 __fn0retval
    29 op mul __fn0retval -1 __fn0retval
    30 jump __label8 always
    31 label __label8

Modifications by DataFlowOptimizer, iteration 3:
 
     1 set __fn0_n 0
     2 callrec bank1 __label0 __label1
     3 label __label1
-    * set __retval0 __fn0retval
     4 set j __fn0retval
     5 set __fn0_n __fn0retval
     6 callrec bank1 __label0 __label2
     7 label __label2
-    * set __retval1 __fn0retval
     8 set i __fn0retval
     9 label __label3
    10 jump __label5 greaterThanEq __fn0retval 10

Modifications by UnreachableCodeEliminator, iteration 1:
 
    29 label __label8
    30 label __label6
    31 return bank1
-    * end

Modifications by SingleStepJumpEliminator, iteration 1:
 
    25 label __label9
    26 pop bank1 __fn0_n
    27 op mul __fn0retval -1 __fn0retval
-    * jump __label8 always
    28 label __label8
    29 label __label6
    30 return bank1

Modifications by StackUsageOptimizer, iteration 1:
 
    19 label __label0
    20 set __fn0retval __fn0_n
    21 jump __label8 lessThanEq __fn0_n 0
-    * push bank1 __fn0_n
    22 op mul __fn0_n -1 __fn0_n
    23 callrec bank1 __label0 __label9
    24 label __label9
-    * pop bank1 __fn0_n
    25 op mul __fn0retval -1 __fn0retval
    26 label __label8
    27 label __label6

Final code before resolving virtual instructions:

set __sp 0
set __fn0_n 0
callrec bank1 __label0 __label1
label __label1
set j __fn0retval
set __fn0_n __fn0retval
callrec bank1 __label0 __label2
label __label2
set i __fn0retval
label __label3
jump __label5 greaterThanEq __fn0retval 10
label __label10
op add j j i
print j
op add i i 1
label __label4
jump __label10 lessThan i 10
label __label5
end
label __label0
set __fn0retval __fn0_n
jump __label8 lessThanEq __fn0_n 0
op mul __fn0_n -1 __fn0_n
callrec bank1 __label0 __label9
label __label9
op mul __fn0retval -1 __fn0retval
label __label8
label __label6
return bank1

    56 instructions before optimizations.
     4 instructions eliminated by DeadCodeEliminator (1 iterations).
     2 instructions eliminated by SingleStepJumpEliminator (1 iterations).
     1 instructions eliminated by OutputTempEliminator.
     3 instructions eliminated by ImproveNegativeConditionalJumps.
     2 instructions eliminated by JumpOverJumpEliminator.
     1 loops improved by LoopOptimizer.
     1 instructions eliminated by IfExpressionOptimizer.
     4 instructions eliminated by DataFlowOptimizer (2 iterations).
     1 instructions eliminated by UnreachableCodeEliminator (1 iterations).
     1 instructions eliminated by SingleStepJumpEliminator (1 iterations).
     4 instructions eliminated by StackUsageOptimizer.
    33 instructions after optimizations.

Modifications by DeadCodeEliminator, iteration 1:
 
    13 op equal __tmp3 i 3
    14 jump __label6 equal __tmp3 false
    15 jump __label4 always
-    * set __tmp4 null
    16 jump __label7 always
    17 label __label6
-    * set __tmp4 null
    18 label __label7
    19 print i
    20 set __fn0_n 5
 
    24 op equal __tmp6 i __retval5
    25 jump __label9 equal __tmp6 false
    26 jump __label5 always
-    * set __tmp7 null
    27 jump __label10 always
    28 label __label9
-    * set __tmp7 null
    29 label __label10
    30 label __label4
    31 op add i i 1

Modifications by SingleStepJumpEliminator, iteration 1:
 
    13 op equal __tmp3 i 3
    14 jump __label6 equal __tmp3 false
    15 jump __label4 always
-    * jump __label7 always
    16 label __label6
    17 label __label7
    18 print i
 
    23 op equal __tmp6 i __retval5
    24 jump __label9 equal __tmp6 false
    25 jump __label5 always
-    * jump __label10 always
    26 label __label9
    27 label __label10
    28 label __label4

Modifications by OutputTempEliminator, iteration 1:
 
    40 label __label14
    41 pop bank1 __fn0_n
    42 set __retval11 __fn0retval
-    * op mul __tmp12 -1 __retval11
-    * set __tmp9 __tmp12
+   43 op mul __tmp9 -1 __retval11
    44 jump __label13 always
    45 label __label12
    46 set __tmp9 __fn0_n

Modifications by ImproveNegativeConditionalJumps, iteration 1:
 
    10 set i __retval0
    11 label __label3
    12 jump __label5 greaterThanEq i __tmp2
-    * op equal __tmp3 i 3
-    * jump __label6 equal __tmp3 false
+   13 jump __label6 notEqual i 3
    14 jump __label4 always
    15 label __label6
    16 label __label7
 
    19 callrec bank1 __label0 __label8
    20 label __label8
    21 set __retval5 __fn0retval
-    * op equal __tmp6 i __retval5
-    * jump __label9 equal __tmp6 false
+   22 jump __label9 notEqual i __retval5
    23 jump __label5 always
    24 label __label9
    25 label __label10
 
    29 label __label5
    30 end
    31 label __label0
-    * op greaterThan __tmp8 __fn0_n 0
-    * jump __label12 equal __tmp8 false
+   32 jump __label12 lessThanEq __fn0_n 0
    33 op mul __tmp10 -1 __fn0_n
    34 push bank1 __fn0_n
    35 set __fn0_n __tmp10

Modifications by JumpOverJumpEliminator, iteration 1:
 
    10 set i __retval0
    11 label __label3
    12 jump __label5 greaterThanEq i __tmp2
-    * jump __label6 notEqual i 3
-    * jump __label4 always
+   13 jump __label4 equal i 3
    14 label __label6
    15 label __label7
    16 print i
 
    18 callrec bank1 __label0 __label8
    19 label __label8
    20 set __retval5 __fn0retval
-    * jump __label9 notEqual i __retval5
-    * jump __label5 always
+   21 jump __label5 equal i __retval5
    22 label __label9
    23 label __label10
    24 label __label4

Modifications by LoopOptimizer, iteration 1:
 
    10 set i __retval0
    11 label __label3
    12 jump __label5 greaterThanEq i __tmp2
+   13 label __label15
    14 jump __label4 equal i 3
    15 label __label6
    16 label __label7
 
    24 label __label10
    25 label __label4
    26 op add i i 1
-    * jump __label3 always
+   27 jump __label15 lessThan i __tmp2
    28 label __label5
    29 end
    30 label __label0

Modifications by IfExpressionOptimizer, iteration 1:
 
    28 label __label5
    29 end
    30 label __label0
-    * jump __label12 lessThanEq __fn0_n 0
+   31 set __fn0retval __fn0_n
+   32 jump __label13 lessThanEq __fn0_n 0
    33 op mul __tmp10 -1 __fn0_n
    34 push bank1 __fn0_n
    35 set __fn0_n __tmp10
 
    37 label __label14
    38 pop bank1 __fn0_n
    39 set __retval11 __fn0retval
-    * op mul __tmp9 -1 __retval11
+   40 op mul __fn0retval -1 __retval11
    41 jump __label13 always
-    * label __label12
-    * set __tmp9 __fn0_n
    42 label __label13
-    * set __fn0retval __tmp9
    43 label __label11
    44 return bank1
    45 end

Modifications by DataFlowOptimizer, iteration 1:
 
     6 callrec bank1 __label0 __label2
     7 label __label2
     8 set __retval1 __fn0retval
-    * set __tmp2 __retval1
+    9 set __tmp2 __fn0retval
    10 set i __retval0
    11 label __label3
-    * jump __label5 greaterThanEq i __tmp2
+   12 jump __label5 greaterThanEq __retval0 __retval1
    13 label __label15
    14 jump __label4 equal i 3
    15 label __label6
 
    19 callrec bank1 __label0 __label8
    20 label __label8
    21 set __retval5 __fn0retval
-    * jump __label5 equal i __retval5
+   22 jump __label5 equal i __fn0retval
    23 label __label9
    24 label __label10
    25 label __label4
    26 op add i i 1
-    * jump __label15 lessThan i __tmp2
+   27 jump __label15 lessThan i __retval1
    28 label __label5
    29 end
    30 label __label0
 
    32 jump __label13 lessThanEq __fn0_n 0
    33 op mul __tmp10 -1 __fn0_n
    34 push bank1 __fn0_n
-    * set __fn0_n __tmp10
+   35 op mul __fn0_n -1 __fn0_n
    36 callrec bank1 __label0 __label14
    37 label __label14
    38 pop bank1 __fn0_n
    39 set __retval11 __fn0retval
-    * op mul __fn0retval -1 __retval11
+   40 op mul __fn0retval -1 __fn0retval
    41 jump __label13 always
    42 label __label13
    43 label __label11

Modifications by DataFlowOptimizer, iteration 2:
 
     6 callrec bank1 __label0 __label2
     7 label __label2
     8 set __retval1 __fn0retval
-    * set __tmp2 __fn0retval
     9 set i __retval0
    10 label __label3
-    * jump __label5 greaterThanEq __retval0 __retval1
+   11 jump __label5 greaterThanEq __retval0 __fn0retval
    12 label __label15
    13 jump __label4 equal i 3
    14 label __label6
 
    17 set __fn0_n 5
    18 callrec bank1 __label0 __label8
    19 label __label8
-    * set __retval5 __fn0retval
    20 jump __label5 equal i __fn0retval
    21 label __label9
    22 label __label10
 
    28 label __label0
    29 set __fn0retval __fn0_n
    30 jump __label13 lessThanEq __fn0_n 0
-    * op mul __tmp10 -1 __fn0_n
    31 push bank1 __fn0_n
    32 op mul __fn0_n -1 __fn0_n
    33 callrec bank1 __label0 __label14
    34 label __label14
    35 pop bank1 __fn0_n
-    * set __retval11 __fn0retval
    36 op mul __fn0retval -1 __fn0retval
    37 jump __label13 always
    38 label __label13

Modifications by UnreachableCodeEliminator, iteration 1:
 
    38 label __label13
    39 label __label11
    40 return bank1
-    * end

Modifications by SingleStepJumpEliminator, iteration 1:
 
    34 label __label14
    35 pop bank1 __fn0_n
    36 op mul __fn0retval -1 __fn0retval
-    * jump __label13 always
    37 label __label13
    38 label __label11
    39 return bank1

Modifications by StackUsageOptimizer, iteration 1:
 
    28 label __label0
    29 set __fn0retval __fn0_n
    30 jump __label13 lessThanEq __fn0_n 0
-    * push bank1 __fn0_n
    31 op mul __fn0_n -1 __fn0_n
    32 callrec bank1 __label0 __label14
    33 label __label14
-    * pop bank1 __fn0_n
    34 op mul __fn0retval -1 __fn0retval
    35 label __label13
    36 label __label11

Final code before resolving virtual instructions:

set __sp 0
set __fn0_n 1
callrec bank1 __label0 __label1
label __label1
set __retval0 __fn0retval
set __fn0_n 10
callrec bank1 __label0 __label2
label __label2
set __retval1 __fn0retval
set i __retval0
label __label3
jump __label5 greaterThanEq __retval0 __fn0retval
label __label15
jump __label4 equal i 3
label __label6
label __label7
print i
set __fn0_n 5
callrec bank1 __label0 __label8
label __label8
jump __label5 equal i __fn0retval
label __label9
label __label10
label __label4
op add i i 1
jump __label15 lessThan i __retval1
label __label5
end
label __label0
set __fn0retval __fn0_n
jump __label13 lessThanEq __fn0_n 0
op mul __fn0_n -1 __fn0_n
callrec bank1 __label0 __label14
label __label14
op mul __fn0retval -1 __fn0retval
label __label13
label __label11
return bank1

   263 instructions before optimizations.
     1 instructions eliminated by ConditionalJumpsNormalizer.
    34 instructions eliminated by DeadCodeEliminator (3 iterations).
    13 instructions eliminated by SingleStepJumpEliminator (1 iterations).
    41 instructions eliminated by OutputTempEliminator.
     2 instructions eliminated by ExpressionOptimizer.
    16 instructions eliminated by ImproveNegativeConditionalJumps.
     3 instructions eliminated by JumpOverJumpEliminator.
     1 instructions eliminated by ImprovePositiveConditionalJumps.
     1 loops improved by LoopOptimizer.
     1 instructions added by LoopOptimizer.
     4 instructions eliminated by DataFlowOptimizer (3 iterations).
     4 instructions updated by PropagateJumpTargets.
     2 instructions eliminated by UnreachableCodeEliminator (1 iterations).
     4 instructions eliminated by PrintMerger.
   143 instructions after optimizations.

Modifications by ConditionalJumpsNormalizer, iteration 1:
 
     1 set MAX_BATCH 1000
     2 set lastCell 0
     3 label __label0
-    * jump __label2 equal true false
     4 set CONV4 null
     5 set CONV3 CONV4
     6 set CONV2 CONV3

Modifications by DeadCodeEliminator, iteration 1:
 
    22 label __label8
    23 set MEMORY block
    24 set lastCell 63
-    * set __tmp4 lastCell
    25 jump __label6 always
    26 label __label7
    27 jump __label10 equal __ast0 @memory-bank
 
    29 label __label10
    30 set MEMORY block
    31 set lastCell 511
-    * set __tmp4 lastCell
    32 jump __label6 always
    33 label __label9
    34 jump __label12 equal __ast0 @plastanium-conveyor
 
    40 set CONV1 block
    41 op add __tmp5 LINKED 1
    42 set LINKED __tmp5
-    * set __tmp4 LINKED
    43 jump __label6 always
    44 label __label11
-    * set __tmp4 null
    45 label __label6
    46 label __label4
    47 op greaterThan __tmp6 n 0
 
    55 print LINKED
    56 print ")"
    57 printflush message1
-    * set __tmp8 null
    58 jump __label14 always
    59 label __label13
    60 op greaterThan __tmp9 LINKED 4
 
    80 label __label18
    81 set __tmp10 __tmp12
    82 label __label16
-    * set __tmp8 __tmp10
    83 label __label14
    84 label __label1
    85 jump __label0 always
 
   123 jump __label22 equal __tmp25 false
   124 op add __tmp27 batches 1
   125 set batches __tmp27
-    * set __tmp26 batches
   126 jump __label23 always
   127 label __label22
-    * set __tmp26 null
   128 label __label23
   129 sensor __tmp28 CONV2 @totalItems
   130 set a2 __tmp28
 
   132 jump __label24 equal __tmp29 false
   133 op add __tmp31 batches 1
   134 set batches __tmp31
-    * set __tmp30 batches
   135 jump __label25 always
   136 label __label24
-    * set __tmp30 null
   137 label __label25
   138 sensor __tmp32 CONV3 @totalItems
   139 set a3 __tmp32
 
   141 jump __label26 equal __tmp33 false
   142 op add __tmp35 batches 1
   143 set batches __tmp35
-    * set __tmp34 batches
   144 jump __label27 always
   145 label __label26
-    * set __tmp34 null
   146 label __label27
   147 sensor __tmp36 CONV4 @totalItems
   148 set a4 __tmp36
 
   150 jump __label28 equal __tmp37 false
   151 op add __tmp39 batches 1
   152 set batches __tmp39
-    * set __tmp38 batches
   153 jump __label29 always
   154 label __label28
-    * set __tmp38 null
   155 label __label29
   156 op greaterThan __tmp40 batches limit
   157 jump __label30 equal __tmp40 false
 
   173 set BATCH __tmp51
   174 op mul __tmp52 BATCH 10
   175 set BATCH_TXT __tmp52
-    * set __tmp49 BATCH_TXT
   176 jump __label33 always
   177 label __label32
-    * set __tmp49 null
   178 label __label33
   179 op add __tmp53 limit BATCH
   180 set limit __tmp53
-    * set __tmp41 limit
   181 jump __label31 always
   182 label __label30
-    * set __tmp41 null
   183 label __label31
   184 op mul __tmp54 batches 10
   185 set total __tmp54
 
   200 jump __label34 equal __tmp56 false
   201 op add __tmp58 batches 1
   202 set batches __tmp58
-    * set __tmp57 batches
   203 jump __label35 always
   204 label __label34
-    * set __tmp57 null
   205 label __label35
   206 sensor __tmp59 CONV2 @totalItems
   207 set b2 __tmp59
 
   209 jump __label36 equal __tmp60 false
   210 op add __tmp62 batches 1
   211 set batches __tmp62
-    * set __tmp61 batches
   212 jump __label37 always
   213 label __label36
-    * set __tmp61 null
   214 label __label37
   215 sensor __tmp63 CONV3 @totalItems
   216 set b3 __tmp63
 
   218 jump __label38 equal __tmp64 false
   219 op add __tmp66 batches 1
   220 set batches __tmp66
-    * set __tmp65 batches
   221 jump __label39 always
   222 label __label38
-    * set __tmp65 null
   223 label __label39
   224 sensor __tmp67 CONV4 @totalItems
   225 set b4 __tmp67
 
   227 jump __label40 equal __tmp68 false
   228 op add __tmp70 batches 1
   229 set batches __tmp70
-    * set __tmp69 batches
   230 jump __label41 always
   231 label __label40
-    * set __tmp69 null
   232 label __label41
   233 op sub __tmp71 @time startTime
   234 op floor __tmp72 __tmp71
 
   246 set ratePerMin 0
   247 set __tmp79 @time
   248 set startTime __tmp79
-    * set __tmp74 startTime
   249 jump __label43 always
   250 label __label42
-    * set __tmp74 null
   251 label __label43
   252 print "Batch size: [green]"
   253 print BATCH_TXT
 
   265 op notEqual __tmp83 LINKS @links
   266 jump __label44 equal __tmp83 false
   267 end
-    * set __tmp84 null
   268 jump __label45 always
   269 label __label44
-    * set __tmp84 null
   270 label __label45
   271 label __label20
   272 jump __label19 always

Modifications by DeadCodeEliminator, iteration 2:
 
    65 print LINKED
    66 print ")"
    67 printflush message1
-    * set __tmp10 null
    68 jump __label16 always
    69 label __label15
    70 op equal __tmp11 MEMORY null
 
    77 jump __label2 always
    78 set __tmp12 null
    79 label __label18
-    * set __tmp10 __tmp12
    80 label __label16
    81 label __label14
    82 label __label1

Modifications by DeadCodeEliminator, iteration 3:
 
    71 jump __label17 equal __tmp11 false
    72 print "Item Counter\n[salmon]No memory attached."
    73 printflush message1
-    * set __tmp12 null
    74 jump __label18 always
    75 label __label17
    76 jump __label2 always
-    * set __tmp12 null
    77 label __label18
    78 label __label16
    79 label __label14

Modifications by SingleStepJumpEliminator, iteration 1:
 
    40 set CONV1 block
    41 op add __tmp5 LINKED 1
    42 set LINKED __tmp5
-    * jump __label6 always
    43 label __label11
    44 label __label6
    45 label __label4
 
   118 jump __label22 equal __tmp25 false
   119 op add __tmp27 batches 1
   120 set batches __tmp27
-    * jump __label23 always
   121 label __label22
   122 label __label23
   123 sensor __tmp28 CONV2 @totalItems
 
   126 jump __label24 equal __tmp29 false
   127 op add __tmp31 batches 1
   128 set batches __tmp31
-    * jump __label25 always
   129 label __label24
   130 label __label25
   131 sensor __tmp32 CONV3 @totalItems
 
   134 jump __label26 equal __tmp33 false
   135 op add __tmp35 batches 1
   136 set batches __tmp35
-    * jump __label27 always
   137 label __label26
   138 label __label27
   139 sensor __tmp36 CONV4 @totalItems
 
   142 jump __label28 equal __tmp37 false
   143 op add __tmp39 batches 1
   144 set batches __tmp39
-    * jump __label29 always
   145 label __label28
   146 label __label29
   147 op greaterThan __tmp40 batches limit
 
   164 set BATCH __tmp51
   165 op mul __tmp52 BATCH 10
   166 set BATCH_TXT __tmp52
-    * jump __label33 always
   167 label __label32
   168 label __label33
   169 op add __tmp53 limit BATCH
   170 set limit __tmp53
-    * jump __label31 always
   171 label __label30
   172 label __label31
   173 op mul __tmp54 batches 10
 
   189 jump __label34 equal __tmp56 false
   190 op add __tmp58 batches 1
   191 set batches __tmp58
-    * jump __label35 always
   192 label __label34
   193 label __label35
   194 sensor __tmp59 CONV2 @totalItems
 
   197 jump __label36 equal __tmp60 false
   198 op add __tmp62 batches 1
   199 set batches __tmp62
-    * jump __label37 always
   200 label __label36
   201 label __label37
   202 sensor __tmp63 CONV3 @totalItems
 
   205 jump __label38 equal __tmp64 false
   206 op add __tmp66 batches 1
   207 set batches __tmp66
-    * jump __label39 always
   208 label __label38
   209 label __label39
   210 sensor __tmp67 CONV4 @totalItems
 
   213 jump __label40 equal __tmp68 false
   214 op add __tmp70 batches 1
   215 set batches __tmp70
-    * jump __label41 always
   216 label __label40
   217 label __label41
   218 op sub __tmp71 @time startTime
 
   231 set ratePerMin 0
   232 set __tmp79 @time
   233 set startTime __tmp79
-    * jump __label43 always
   234 label __label42
   235 label __label43
   236 print "Batch size: [green]"
 
   249 op notEqual __tmp83 LINKS @links
   250 jump __label44 equal __tmp83 false
   251 end
-    * jump __label45 always
   252 label __label44
   253 label __label45
   254 label __label20

Modifications by OutputTempEliminator, iteration 1:
 
     7 set CONV1 CONV2
     8 set MEMORY CONV1
     9 set LINKED 0
-    * set __tmp0 @links
-    * set LINKS __tmp0
+   10 set LINKS @links
    11 set n LINKS
    12 label __label3
-    * op sub __tmp1 n 1
-    * set n __tmp1
-    * getlink __tmp2 n
-    * set block __tmp2
-    * sensor __tmp3 block @type
-    * set __ast0 __tmp3
+   13 op sub n n 1
+   14 getlink block n
+   15 sensor __ast0 block @type
    16 jump __label8 equal __ast0 @memory-cell
    17 jump __label7 always
    18 label __label8
 
    34 set CONV3 CONV2
    35 set CONV2 CONV1
    36 set CONV1 block
-    * op add __tmp5 LINKED 1
-    * set LINKED __tmp5
+   37 op add LINKED LINKED 1
    38 label __label11
    39 label __label6
    40 label __label4
 
    76 label __label2
    77 set BATCH_DURATION 2000
    78 op idiv __tmp13 MIN_BATCH 10
-    * op max __tmp14 __tmp13 1
-    * set MIN_BATCH __tmp14
+   79 op max MIN_BATCH __tmp13 1
    80 op idiv __tmp15 MAX_BATCH 10
-    * op max __tmp16 __tmp15 MIN_BATCH
-    * set MAX_BATCH __tmp16
+   81 op max MAX_BATCH __tmp15 MIN_BATCH
    82 set BATCH_STEP 1
    83 set BATCH MIN_BATCH
-    * read __tmp17 MEMORY 0
-    * set total __tmp17
-    * op idiv __tmp18 total 10
-    * set batches __tmp18
-    * op add __tmp19 batches BATCH
-    * set limit __tmp19
+   84 read total MEMORY 0
+   85 op idiv batches total 10
+   86 op add limit batches BATCH
    87 control enabled switch1 0
    88 set b4 0
    89 set b3 b4
 
    94 set a2 a3
    95 set a1 a2
    96 set ratePerMin 0
-    * set __tmp20 @time
-    * set startTime __tmp20
+   97 set startTime @time
    98 label __label19
    99 sensor __tmp21 switch1 @enabled
   100 op equal __tmp22 __tmp21 0
   101 jump __label21 equal __tmp22 false
-    * set __tmp23 @time
-    * set start __tmp23
-    * sensor __tmp24 CONV1 @totalItems
-    * set a1 __tmp24
+  102 set start @time
+  103 sensor a1 CONV1 @totalItems
   104 op lessThan __tmp25 a1 b1
   105 jump __label22 equal __tmp25 false
-    * op add __tmp27 batches 1
-    * set batches __tmp27
+  106 op add batches batches 1
   107 label __label22
   108 label __label23
-    * sensor __tmp28 CONV2 @totalItems
-    * set a2 __tmp28
+  109 sensor a2 CONV2 @totalItems
   110 op lessThan __tmp29 a2 b2
   111 jump __label24 equal __tmp29 false
-    * op add __tmp31 batches 1
-    * set batches __tmp31
+  112 op add batches batches 1
   113 label __label24
   114 label __label25
-    * sensor __tmp32 CONV3 @totalItems
-    * set a3 __tmp32
+  115 sensor a3 CONV3 @totalItems
   116 op lessThan __tmp33 a3 b3
   117 jump __label26 equal __tmp33 false
-    * op add __tmp35 batches 1
-    * set batches __tmp35
+  118 op add batches batches 1
   119 label __label26
   120 label __label27
-    * sensor __tmp36 CONV4 @totalItems
-    * set a4 __tmp36
+  121 sensor a4 CONV4 @totalItems
   122 op lessThan __tmp37 a4 b4
   123 jump __label28 equal __tmp37 false
-    * op add __tmp39 batches 1
-    * set batches __tmp39
+  124 op add batches batches 1
   125 label __label28
   126 label __label29
   127 op greaterThan __tmp40 batches limit
   128 jump __label30 equal __tmp40 false
-    * op sub __tmp42 @time startTime
-    * set duration __tmp42
-    * set __tmp43 @time
-    * set startTime __tmp43
-    * op div __tmp44 BATCH duration
-    * set rate __tmp44
+  129 op sub duration @time startTime
+  130 set startTime @time
+  131 op div rate BATCH duration
   132 op mul __tmp45 rate 166.66666666666666
   133 write __tmp45 MEMORY lastCell
   134 op mul __tmp46 rate 600000
-    * op floor __tmp47 __tmp46
-    * set ratePerMin __tmp47
+  135 op floor ratePerMin __tmp46
   136 op lessThanEq __tmp48 duration BATCH_DURATION
   137 jump __label32 equal __tmp48 false
   138 op add __tmp50 BATCH BATCH_STEP
-    * op min __tmp51 __tmp50 MAX_BATCH
-    * set BATCH __tmp51
-    * op mul __tmp52 BATCH 10
-    * set BATCH_TXT __tmp52
+  139 op min BATCH __tmp50 MAX_BATCH
+  140 op mul BATCH_TXT BATCH 10
   141 label __label32
   142 label __label33
-    * op add __tmp53 limit BATCH
-    * set limit __tmp53
+  143 op add limit limit BATCH
   144 label __label30
   145 label __label31
-    * op mul __tmp54 batches 10
-    * set total __tmp54
+  146 op mul total batches 10
   147 write total MEMORY 0
   148 print "Item Counter                  \n"
   149 print "Monitoring [green]"
 
   155 print "Rate: [green]"
   156 print ratePerMin
   157 print "[] items/min\n"
-    * sensor __tmp55 CONV1 @totalItems
-    * set b1 __tmp55
+  158 sensor b1 CONV1 @totalItems
   159 op lessThan __tmp56 b1 a1
   160 jump __label34 equal __tmp56 false
-    * op add __tmp58 batches 1
-    * set batches __tmp58
+  161 op add batches batches 1
   162 label __label34
   163 label __label35
-    * sensor __tmp59 CONV2 @totalItems
-    * set b2 __tmp59
+  164 sensor b2 CONV2 @totalItems
   165 op lessThan __tmp60 b2 a2
   166 jump __label36 equal __tmp60 false
-    * op add __tmp62 batches 1
-    * set batches __tmp62
+  167 op add batches batches 1
   168 label __label36
   169 label __label37
-    * sensor __tmp63 CONV3 @totalItems
-    * set b3 __tmp63
+  170 sensor b3 CONV3 @totalItems
   171 op lessThan __tmp64 b3 a3
   172 jump __label38 equal __tmp64 false
-    * op add __tmp66 batches 1
-    * set batches __tmp66
+  173 op add batches batches 1
   174 label __label38
   175 label __label39
-    * sensor __tmp67 CONV4 @totalItems
-    * set b4 __tmp67
+  176 sensor b4 CONV4 @totalItems
   177 op lessThan __tmp68 b4 a4
   178 jump __label40 equal __tmp68 false
-    * op add __tmp70 batches 1
-    * set batches __tmp70
+  179 op add batches batches 1
   180 label __label40
   181 label __label41
   182 op sub __tmp71 @time startTime
-    * op floor __tmp72 __tmp71
-    * set elapsed __tmp72
+  183 op floor elapsed __tmp71
   184 op greaterThanEq __tmp73 elapsed 10000
   185 jump __label42 equal __tmp73 false
   186 op idiv __tmp75 BATCH 5
-    * op max __tmp76 __tmp75 MIN_BATCH
-    * set BATCH __tmp76
-    * op mul __tmp77 BATCH 10
-    * set BATCH_TXT __tmp77
-    * op add __tmp78 batches BATCH
-    * set limit __tmp78
+  187 op max BATCH __tmp75 MIN_BATCH
+  188 op mul BATCH_TXT BATCH 10
+  189 op add limit batches BATCH
   190 write 0 MEMORY lastCell
   191 set ratePerMin 0
-    * set __tmp79 @time
-    * set startTime __tmp79
+  192 set startTime @time
   193 label __label42
   194 label __label43
   195 print "Batch size: [green]"

Modifications by ExpressionOptimizer, iteration 1:
 
   131 op div rate BATCH duration
   132 op mul __tmp45 rate 166.66666666666666
   133 write __tmp45 MEMORY lastCell
-    * op mul __tmp46 rate 600000
-    * op floor ratePerMin __tmp46
+  134 op idiv ratePerMin rate 0.0000016666666666666667
   135 op lessThanEq __tmp48 duration BATCH_DURATION
   136 jump __label32 equal __tmp48 false
   137 op add __tmp50 BATCH BATCH_STEP
 
   198 print elapsed
   199 print "[] ms\n"
   200 op sub __tmp80 @time start
-    * op div __tmp81 __tmp80 2
-    * op floor __tmp82 __tmp81
+  201 op idiv __tmp82 __tmp80 2
   202 print "[lightgray]Loop time: "
   203 print __tmp82
   204 print " ms"

Modifications by ImproveNegativeConditionalJumps, iteration 1:
 
    41 op greaterThan __tmp6 n 0
    42 jump __label3 notEqual __tmp6 false
    43 label __label5
-    * op equal __tmp7 LINKED 0
-    * jump __label13 equal __tmp7 false
+   44 jump __label13 notEqual LINKED 0
    45 print "Item Counter\n[salmon]No plastanium conveyor attached (maximum: "
    46 print 4
    47 print ", found: "
 
    50 printflush message1
    51 jump __label14 always
    52 label __label13
-    * op greaterThan __tmp9 LINKED 4
-    * jump __label15 equal __tmp9 false
+   53 jump __label15 lessThanEq LINKED 4
    54 print "Item Counter\n[salmon]Too many plastanium conveyors attached (maximum: "
    55 print 4
    56 print ", found: "
 
    59 printflush message1
    60 jump __label16 always
    61 label __label15
-    * op equal __tmp11 MEMORY null
-    * jump __label17 equal __tmp11 false
+   62 jump __label17 notEqual MEMORY null
    63 print "Item Counter\n[salmon]No memory attached."
    64 printflush message1
    65 jump __label18 always
 
    94 set startTime @time
    95 label __label19
    96 sensor __tmp21 switch1 @enabled
-    * op equal __tmp22 __tmp21 0
-    * jump __label21 equal __tmp22 false
+   97 jump __label21 notEqual __tmp21 0
    98 set start @time
    99 sensor a1 CONV1 @totalItems
-    * op lessThan __tmp25 a1 b1
-    * jump __label22 equal __tmp25 false
+  100 jump __label22 greaterThanEq a1 b1
   101 op add batches batches 1
   102 label __label22
   103 label __label23
   104 sensor a2 CONV2 @totalItems
-    * op lessThan __tmp29 a2 b2
-    * jump __label24 equal __tmp29 false
+  105 jump __label24 greaterThanEq a2 b2
   106 op add batches batches 1
   107 label __label24
   108 label __label25
   109 sensor a3 CONV3 @totalItems
-    * op lessThan __tmp33 a3 b3
-    * jump __label26 equal __tmp33 false
+  110 jump __label26 greaterThanEq a3 b3
   111 op add batches batches 1
   112 label __label26
   113 label __label27
   114 sensor a4 CONV4 @totalItems
-    * op lessThan __tmp37 a4 b4
-    * jump __label28 equal __tmp37 false
+  115 jump __label28 greaterThanEq a4 b4
   116 op add batches batches 1
   117 label __label28
   118 label __label29
-    * op greaterThan __tmp40 batches limit
-    * jump __label30 equal __tmp40 false
+  119 jump __label30 lessThanEq batches limit
   120 op sub duration @time startTime
   121 set startTime @time
   122 op div rate BATCH duration
   123 op mul __tmp45 rate 166.66666666666666
   124 write __tmp45 MEMORY lastCell
   125 op idiv ratePerMin rate 0.0000016666666666666667
-    * op lessThanEq __tmp48 duration BATCH_DURATION
-    * jump __label32 equal __tmp48 false
+  126 jump __label32 greaterThan duration BATCH_DURATION
   127 op add __tmp50 BATCH BATCH_STEP
   128 op min BATCH __tmp50 MAX_BATCH
   129 op mul BATCH_TXT BATCH 10
 
   145 print ratePerMin
   146 print "[] items/min\n"
   147 sensor b1 CONV1 @totalItems
-    * op lessThan __tmp56 b1 a1
-    * jump __label34 equal __tmp56 false
+  148 jump __label34 greaterThanEq b1 a1
   149 op add batches batches 1
   150 label __label34
   151 label __label35
   152 sensor b2 CONV2 @totalItems
-    * op lessThan __tmp60 b2 a2
-    * jump __label36 equal __tmp60 false
+  153 jump __label36 greaterThanEq b2 a2
   154 op add batches batches 1
   155 label __label36
   156 label __label37
   157 sensor b3 CONV3 @totalItems
-    * op lessThan __tmp64 b3 a3
-    * jump __label38 equal __tmp64 false
+  158 jump __label38 greaterThanEq b3 a3
   159 op add batches batches 1
   160 label __label38
   161 label __label39
   162 sensor b4 CONV4 @totalItems
-    * op lessThan __tmp68 b4 a4
-    * jump __label40 equal __tmp68 false
+  163 jump __label40 greaterThanEq b4 a4
   164 op add batches batches 1
   165 label __label40
   166 label __label41
   167 op sub __tmp71 @time startTime
   168 op floor elapsed __tmp71
-    * op greaterThanEq __tmp73 elapsed 10000
-    * jump __label42 equal __tmp73 false
+  169 jump __label42 lessThan elapsed 10000
   170 op idiv __tmp75 BATCH 5
   171 op max BATCH __tmp75 MIN_BATCH
   172 op mul BATCH_TXT BATCH 10
 
   188 print __tmp82
   189 print " ms"
   190 printflush message1
-    * op notEqual __tmp83 LINKS @links
-    * jump __label44 equal __tmp83 false
+  191 jump __label44 equal LINKS @links
   192 end
   193 label __label44
   194 label __label45

Modifications by JumpOverJumpEliminator, iteration 1:
 
    13 op sub n n 1
    14 getlink block n
    15 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @memory-cell
-    * jump __label7 always
+   16 jump __label7 notEqual __ast0 @memory-cell
    17 label __label8
    18 set MEMORY block
    19 set lastCell 63
    20 jump __label6 always
    21 label __label7
-    * jump __label10 equal __ast0 @memory-bank
-    * jump __label9 always
+   22 jump __label9 notEqual __ast0 @memory-bank
    23 label __label10
    24 set MEMORY block
    25 set lastCell 511
    26 jump __label6 always
    27 label __label9
-    * jump __label12 equal __ast0 @plastanium-conveyor
-    * jump __label11 always
+   28 jump __label11 notEqual __ast0 @plastanium-conveyor
    29 label __label12
    30 set CONV4 CONV3
    31 set CONV3 CONV2

Modifications by ImprovePositiveConditionalJumps, iteration 1:
 
    35 label __label11
    36 label __label6
    37 label __label4
-    * op greaterThan __tmp6 n 0
-    * jump __label3 notEqual __tmp6 false
+   38 jump __label3 greaterThan n 0
    39 label __label5
    40 jump __label13 notEqual LINKED 0
    41 print "Item Counter\n[salmon]No plastanium conveyor attached (maximum: "

Modifications by LoopOptimizer, iteration 1:
 
    91 label __label19
    92 sensor __tmp21 switch1 @enabled
    93 jump __label21 notEqual __tmp21 0
+   94 label __label46
    95 set start @time
    96 sensor a1 CONV1 @totalItems
    97 jump __label22 greaterThanEq a1 b1
 
   190 label __label44
   191 label __label45
   192 label __label20
-    * jump __label19 always
+  193 sensor __tmp21 switch1 @enabled
+  194 jump __label46 equal __tmp21 0
   195 label __label21
   196 control enabled switch1 0
   197 write 0 MEMORY lastCell

Modifications by DataFlowOptimizer, iteration 1:
 
    79 op add limit batches BATCH
    80 control enabled switch1 0
    81 set b4 0
-    * set b3 b4
-    * set b2 b3
-    * set b1 b2
-    * set a4 b1
-    * set a3 a4
-    * set a2 a3
-    * set a1 a2
+   82 set b3 0
+   83 set b2 b4
+   84 set b1 b3
+   85 set a4 b2
+   86 set a3 b1
+   87 set a2 a4
    88 set ratePerMin 0
    89 set startTime @time
    90 label __label19

Modifications by DataFlowOptimizer, iteration 2:
 
    80 control enabled switch1 0
    81 set b4 0
    82 set b3 0
-    * set b2 b4
-    * set b1 b3
-    * set a4 b2
-    * set a3 b1
-    * set a2 a4
+   83 set b2 0
+   84 set b1 0
+   85 set a4 b4
    86 set ratePerMin 0
    87 set startTime @time
    88 label __label19

Modifications by DataFlowOptimizer, iteration 3:
 
    82 set b3 0
    83 set b2 0
    84 set b1 0
-    * set a4 b4
    85 set ratePerMin 0
    86 set startTime @time
    87 label __label19

Modifications by PropagateJumpTargets, iteration 1:
 
    44 print LINKED
    45 print ")"
    46 printflush message1
-    * jump __label14 always
+   47 jump __label0 always
    48 label __label13
    49 jump __label15 lessThanEq LINKED 4
    50 print "Item Counter\n[salmon]Too many plastanium conveyors attached (maximum: "
 
    53 print LINKED
    54 print ")"
    55 printflush message1
-    * jump __label16 always
+   56 jump __label0 always
    57 label __label15
-    * jump __label17 notEqual MEMORY null
+   58 jump __label2 notEqual MEMORY null
    59 print "Item Counter\n[salmon]No memory attached."
    60 printflush message1
-    * jump __label18 always
+   61 jump __label0 always
    62 label __label17
    63 jump __label2 always
    64 label __label18

Modifications by UnreachableCodeEliminator, iteration 1:
 
    60 printflush message1
    61 jump __label0 always
    62 label __label17
-    * jump __label2 always
    63 label __label18
    64 label __label16
    65 label __label14
    66 label __label1
-    * jump __label0 always
    67 label __label2
    68 set BATCH_DURATION 2000
    69 op idiv __tmp13 MIN_BATCH 10

Modifications by PrintMerger, iteration 1:
 
   128 print "Item Counter                  \n"
   129 print "Monitoring [green]"
   130 print LINKED
-    * print "[] conveyors\n"
-    * print "Total items: [gold]"
+  131 print "[] conveyors\nTotal items: [gold]"
   132 print total
-    * print "[]\n"
-    * print "Rate: [green]"
+  133 print "[]\nRate: [green]"
   134 print ratePerMin
   135 print "[] items/min\n"
   136 sensor b1 CONV1 @totalItems
 
   167 label __label43
   168 print "Batch size: [green]"
   169 print BATCH_TXT
-    * print "[]\n"
-    * print "Batch time: [gold]"
+  170 print "[]\nBatch time: [gold]"
   171 print elapsed
-    * print "[] ms\n"
   172 op sub __tmp80 @time start
   173 op idiv __tmp82 __tmp80 2
-    * print "[lightgray]Loop time: "
+  174 print "[] ms\n[lightgray]Loop time: "
   175 print __tmp82
   176 print " ms"
   177 printflush message1

Final code before resolving virtual instructions:

set MIN_BATCH 10
set MAX_BATCH 1000
set lastCell 0
label __label0
set CONV4 null
set CONV3 CONV4
set CONV2 CONV3
set CONV1 CONV2
set MEMORY CONV1
set LINKED 0
set LINKS @links
set n LINKS
label __label3
op sub n n 1
getlink block n
sensor __ast0 block @type
jump __label7 notEqual __ast0 @memory-cell
label __label8
set MEMORY block
set lastCell 63
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @memory-bank
label __label10
set MEMORY block
set lastCell 511
jump __label6 always 0 0
label __label9
jump __label11 notEqual __ast0 @plastanium-conveyor
label __label12
set CONV4 CONV3
set CONV3 CONV2
set CONV2 CONV1
set CONV1 block
op add LINKED LINKED 1
label __label11
label __label6
label __label4
jump __label3 greaterThan n 0
label __label5
jump __label13 notEqual LINKED 0
print "Item Counter\n[salmon]No plastanium conveyor attached (maximum: "
print 4
print ", found: "
print LINKED
print ")"
printflush message1
jump __label0 always 0 0
label __label13
jump __label15 lessThanEq LINKED 4
print "Item Counter\n[salmon]Too many plastanium conveyors attached (maximum: "
print 4
print ", found: "
print LINKED
print ")"
printflush message1
jump __label0 always 0 0
label __label15
jump __label2 notEqual MEMORY null
print "Item Counter\n[salmon]No memory attached."
printflush message1
jump __label0 always 0 0
label __label17
label __label18
label __label16
label __label14
label __label1
label __label2
set BATCH_DURATION 2000
op idiv __tmp13 MIN_BATCH 10
op max MIN_BATCH __tmp13 1
op idiv __tmp15 MAX_BATCH 10
op max MAX_BATCH __tmp15 MIN_BATCH
set BATCH_STEP 1
set BATCH MIN_BATCH
read total MEMORY 0
op idiv batches total 10
op add limit batches BATCH
control enabled switch1 0 0 0 0
set b4 0
set b3 0
set b2 0
set b1 0
set ratePerMin 0
set startTime @time
label __label19
sensor __tmp21 switch1 @enabled
jump __label21 notEqual __tmp21 0
label __label46
set start @time
sensor a1 CONV1 @totalItems
jump __label22 greaterThanEq a1 b1
op add batches batches 1
label __label22
label __label23
sensor a2 CONV2 @totalItems
jump __label24 greaterThanEq a2 b2
op add batches batches 1
label __label24
label __label25
sensor a3 CONV3 @totalItems
jump __label26 greaterThanEq a3 b3
op add batches batches 1
label __label26
label __label27
sensor a4 CONV4 @totalItems
jump __label28 greaterThanEq a4 b4
op add batches batches 1
label __label28
label __label29
jump __label30 lessThanEq batches limit
op sub duration @time startTime
set startTime @time
op div rate BATCH duration
op mul __tmp45 rate 166.66666666666666
write __tmp45 MEMORY lastCell
op idiv ratePerMin rate 0.0000016666666666666667
jump __label32 greaterThan duration BATCH_DURATION
op add __tmp50 BATCH BATCH_STEP
op min BATCH __tmp50 MAX_BATCH
op mul BATCH_TXT BATCH 10
label __label32
label __label33
op add limit limit BATCH
label __label30
label __label31
op mul total batches 10
write total MEMORY 0
print "Item Counter                  \n"
print "Monitoring [green]"
print LINKED
print "[] conveyors\nTotal items: [gold]"
print total
print "[]\nRate: [green]"
print ratePerMin
print "[] items/min\n"
sensor b1 CONV1 @totalItems
jump __label34 greaterThanEq b1 a1
op add batches batches 1
label __label34
label __label35
sensor b2 CONV2 @totalItems
jump __label36 greaterThanEq b2 a2
op add batches batches 1
label __label36
label __label37
sensor b3 CONV3 @totalItems
jump __label38 greaterThanEq b3 a3
op add batches batches 1
label __label38
label __label39
sensor b4 CONV4 @totalItems
jump __label40 greaterThanEq b4 a4
op add batches batches 1
label __label40
label __label41
op sub __tmp71 @time startTime
op floor elapsed __tmp71 0
jump __label42 lessThan elapsed 10000
op idiv __tmp75 BATCH 5
op max BATCH __tmp75 MIN_BATCH
op mul BATCH_TXT BATCH 10
op add limit batches BATCH
write 0 MEMORY lastCell
set ratePerMin 0
set startTime @time
label __label42
label __label43
print "Batch size: [green]"
print BATCH_TXT
print "[]\nBatch time: [gold]"
print elapsed
op sub __tmp80 @time start
op idiv __tmp82 __tmp80 2
print "[] ms\n[lightgray]Loop time: "
print __tmp82
print " ms"
printflush message1
jump __label44 equal LINKS @links
end
label __label44
label __label45
label __label20
sensor __tmp21 switch1 @enabled
jump __label46 equal __tmp21 0
label __label21
control enabled switch1 0 0 0 0
write 0 MEMORY lastCell
write 0 MEMORY 0
end

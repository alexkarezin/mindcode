   119 instructions before optimizations.
     4 instructions eliminated by DeadCodeEliminator (1 iterations).
     1 instructions eliminated by SingleStepJumpEliminator (1 iterations).
    19 instructions eliminated by OutputTempEliminator.
     1 instructions eliminated by ExpressionOptimizer.
     3 instructions eliminated by ImproveNegativeConditionalJumps.
     1 loops improved by LoopOptimizer.
     1 instructions eliminated by DataFlowOptimizer (2 iterations).
     1 instructions updated by PropagateJumpTargets.
     1 instructions eliminated by PrintMerger.
    89 instructions after optimizations.

Modifications by DeadCodeEliminator, iteration 1:
 
    55 print "Wait reset\n"
    56 op add __tmp21 start DELAY
    57 set wait __tmp21
-    * set __tmp20 __tmp21
    58 jump __label7 always
    59 label __label6
-    * set __tmp20 null
    60 label __label7
    61 read __tmp22 BANK IND_SHIPPED
    62 set shipped __tmp22
 
    70 set MILLIS __tmp27
    71 op mul __tmp28 MULTIPLIER MILLIS
    72 set SIGN_MILLIS __tmp28
-    * set __tmp26 __tmp28
    73 jump __label9 always
    74 label __label8
    75 read __tmp29 BANK index
    76 set last_total __tmp29
-    * set __tmp26 __tmp29
    77 label __label9
    78 write total BANK index
    79 op sub __tmp30 total last_total

Modifications by SingleStepJumpEliminator, iteration 1:
 
    55 print "Wait reset\n"
    56 op add __tmp21 start DELAY
    57 set wait __tmp21
-    * jump __label7 always
    58 label __label6
    59 label __label7
    60 read __tmp22 BANK IND_SHIPPED

Modifications by OutputTempEliminator, iteration 1:
 
     4 set IND_SESSION_KEY 509
     5 set IND_TIME 508
     6 set IND_FLOW_RATE 507
-    * op mul __tmp0 DELAY SAMPLES
-    * set TOTAL_MILLIS __tmp0
+    7 op mul TOTAL_MILLIS DELAY SAMPLES
     8 set SORTER sorter1
     9 set VAULT vault1
    10 set BANK bank1
 
    23 label __label1
    24 jump __label0 always
    25 label __label2
-    * read __tmp6 BANK IND_SHIPPED
-    * set shipped __tmp6
-    * read __tmp7 BANK IND_MULTIPLIER
-    * set MULTIPLIER __tmp7
-    * read __tmp8 BANK IND_SESSION_KEY
-    * set SESSION_KEY __tmp8
-    * sensor __tmp9 SORTER @config
-    * set item __tmp9
+   26 read shipped BANK IND_SHIPPED
+   27 read MULTIPLIER BANK IND_MULTIPLIER
+   28 read SESSION_KEY BANK IND_SESSION_KEY
+   29 sensor item SORTER @config
    30 set last_total shipped
    31 set index 0
    32 set MILLIS 0
 
    43 op land __tmp17 __tmp14 __tmp16
    44 jump __label5 equal __tmp17 false
    45 set start @time
-    * op add __tmp18 wait DELAY
-    * set wait __tmp18
+   46 op add wait wait DELAY
    47 op greaterThan __tmp19 start wait
    48 jump __label6 equal __tmp19 false
    49 print "Wait reset\n"
-    * op add __tmp21 start DELAY
-    * set wait __tmp21
+   50 op add wait start DELAY
    51 label __label6
    52 label __label7
-    * read __tmp22 BANK IND_SHIPPED
-    * set shipped __tmp22
-    * sensor __tmp23 SORTER @config
-    * set item __tmp23
-    * op add __tmp24 level shipped
-    * set total __tmp24
+   53 read shipped BANK IND_SHIPPED
+   54 sensor item SORTER @config
+   55 op add total level shipped
    56 op lessThan __tmp25 MILLIS TOTAL_MILLIS
    57 jump __label8 equal __tmp25 false
-    * op add __tmp27 MILLIS DELAY
-    * set MILLIS __tmp27
-    * op mul __tmp28 MULTIPLIER MILLIS
-    * set SIGN_MILLIS __tmp28
+   58 op add MILLIS MILLIS DELAY
+   59 op mul SIGN_MILLIS MULTIPLIER MILLIS
    60 jump __label9 always
    61 label __label8
-    * read __tmp29 BANK index
-    * set last_total __tmp29
+   62 read last_total BANK index
    63 label __label9
    64 write total BANK index
    65 op sub __tmp30 total last_total
-    * op div __tmp31 __tmp30 SIGN_MILLIS
-    * set flow_rate __tmp31
+   66 op div flow_rate __tmp30 SIGN_MILLIS
    67 write flow_rate BANK IND_FLOW_RATE
    68 write @time BANK IND_TIME
    69 op add __tmp32 index 1
-    * op mod __tmp33 __tmp32 SAMPLES
-    * set index __tmp33
+   70 op mod index __tmp32 SAMPLES
    71 op mul __tmp34 60000 flow_rate
-    * op floor __tmp35 __tmp34
-    * set flow_rate_str __tmp35
-    * op div __tmp36 MILLIS 1000
-    * set seconds __tmp36
-    * op sub __tmp37 @time start
-    * set elapsed __tmp37
+   72 op floor flow_rate_str __tmp34
+   73 op div seconds MILLIS 1000
+   74 op sub elapsed @time start
    75 print "Measured interval: "
    76 print seconds
    77 print " sec"
 
    97 label __label10
    98 op lessThan __tmp38 @time wait
    99 jump __label12 equal __tmp38 false
-    * op add __tmp39 loops 1
-    * set loops __tmp39
+  100 op add loops loops 1
   101 label __label11
   102 jump __label10 always
   103 label __label12

Modifications by ExpressionOptimizer, iteration 1:
 
    68 write @time BANK IND_TIME
    69 op add __tmp32 index 1
    70 op mod index __tmp32 SAMPLES
-    * op mul __tmp34 60000 flow_rate
-    * op floor flow_rate_str __tmp34
+   71 op idiv flow_rate_str flow_rate 0.000016666666666666667
    72 op div seconds MILLIS 1000
    73 op sub elapsed @time start
    74 print "Measured interval: "

Modifications by ImproveNegativeConditionalJumps, iteration 1:
 
    44 jump __label5 equal __tmp17 false
    45 set start @time
    46 op add wait wait DELAY
-    * op greaterThan __tmp19 start wait
-    * jump __label6 equal __tmp19 false
+   47 jump __label6 lessThanEq start wait
    48 print "Wait reset\n"
    49 op add wait start DELAY
    50 label __label6
 
    52 read shipped BANK IND_SHIPPED
    53 sensor item SORTER @config
    54 op add total level shipped
-    * op lessThan __tmp25 MILLIS TOTAL_MILLIS
-    * jump __label8 equal __tmp25 false
+   55 jump __label8 greaterThanEq MILLIS TOTAL_MILLIS
    56 op add MILLIS MILLIS DELAY
    57 op mul SIGN_MILLIS MULTIPLIER MILLIS
    58 jump __label9 always
 
    92 printflush message1
    93 set loops 0
    94 label __label10
-    * op lessThan __tmp38 @time wait
-    * jump __label12 equal __tmp38 false
+   95 jump __label12 greaterThanEq @time wait
    96 op add loops loops 1
    97 label __label11
    98 jump __label10 always

Modifications by LoopOptimizer, iteration 1:
 
    93 set loops 0
    94 label __label10
    95 jump __label12 greaterThanEq @time wait
+   96 label __label13
    97 op add loops loops 1
    98 label __label11
-    * jump __label10 always
+   99 jump __label13 lessThan @time wait
   100 label __label12
   101 label __label4
   102 jump __label3 always

Modifications by DataFlowOptimizer, iteration 1:
 
    51 label __label7
    52 read shipped BANK IND_SHIPPED
    53 sensor item SORTER @config
-    * op add total level shipped
+   54 op add total 0 shipped
    55 jump __label8 greaterThanEq MILLIS TOTAL_MILLIS
    56 op add MILLIS MILLIS DELAY
    57 op mul SIGN_MILLIS MULTIPLIER MILLIS
 
    77 print "\nItems shipped: "
    78 print shipped
    79 print "\nContainer level: "
-    * print level
+   80 print 0
    81 print "\nFlow rate: "
    82 print flow_rate_str
    83 print "\nTotal: "

Modifications by DataFlowOptimizer, iteration 2:
 
    30 set last_total shipped
    31 set index 0
    32 set MILLIS 0
-    * set level 0
    33 set wait 0
    34 label __label3
    35 sensor __tmp10 SORTER @dead

Modifications by PropagateJumpTargets, iteration 1:
 
    91 printflush message1
    92 set loops 0
    93 label __label10
-    * jump __label12 greaterThanEq @time wait
+   94 jump __label3 greaterThanEq @time wait
    95 label __label13
    96 op add loops loops 1
    97 label __label11

Modifications by PrintMerger, iteration 1:
 
    70 op sub elapsed @time start
    71 print "Measured interval: "
    72 print seconds
-    * print " sec"
-    * print "\nItem: "
+   73 print " sec\nItem: "
    74 print item
    75 print "\nItems shipped: "
    76 print shipped

Final code before resolving virtual instructions:

set DELAY 1000
set SAMPLES 10
set IND_SHIPPED 511
set IND_MULTIPLIER 510
set IND_SESSION_KEY 509
set IND_TIME 508
set IND_FLOW_RATE 507
op mul TOTAL_MILLIS DELAY SAMPLES
set SORTER sorter1
set VAULT vault1
set BANK bank1
label __label0
op equal __tmp1 SORTER null
op equal __tmp2 VAULT null
op or __tmp3 __tmp1 __tmp2
op equal __tmp4 BANK null
op or __tmp5 __tmp3 __tmp4
jump __label2 equal __tmp5 false
print "Missing sorter, vault or memory bank."
printflush message1
set SORTER sorter1
set VAULT vault1
set BANK bank1
label __label1
jump __label0 always 0 0
label __label2
read shipped BANK IND_SHIPPED
read MULTIPLIER BANK IND_MULTIPLIER
read SESSION_KEY BANK IND_SESSION_KEY
sensor item SORTER @config
set last_total shipped
set index 0
set MILLIS 0
set wait 0
label __label3
sensor __tmp10 SORTER @dead
op strictEqual __tmp11 __tmp10 0
sensor __tmp12 VAULT @dead
op strictEqual __tmp13 __tmp12 0
op land __tmp14 __tmp11 __tmp13
read __tmp15 BANK IND_SESSION_KEY
op strictEqual __tmp16 SESSION_KEY __tmp15
op land __tmp17 __tmp14 __tmp16
jump __label5 equal __tmp17 false
set start @time
op add wait wait DELAY
jump __label6 lessThanEq start wait
print "Wait reset\n"
op add wait start DELAY
label __label6
label __label7
read shipped BANK IND_SHIPPED
sensor item SORTER @config
op add total 0 shipped
jump __label8 greaterThanEq MILLIS TOTAL_MILLIS
op add MILLIS MILLIS DELAY
op mul SIGN_MILLIS MULTIPLIER MILLIS
jump __label9 always 0 0
label __label8
read last_total BANK index
label __label9
write total BANK index
op sub __tmp30 total last_total
op div flow_rate __tmp30 SIGN_MILLIS
write flow_rate BANK IND_FLOW_RATE
write @time BANK IND_TIME
op add __tmp32 index 1
op mod index __tmp32 SAMPLES
op idiv flow_rate_str flow_rate 0.000016666666666666667
op div seconds MILLIS 1000
op sub elapsed @time start
print "Measured interval: "
print seconds
print " sec\nItem: "
print item
print "\nItems shipped: "
print shipped
print "\nContainer level: "
print 0
print "\nFlow rate: "
print flow_rate_str
print "\nTotal: "
print total
print "\nLast total: "
print last_total
print "\nIndex: "
print index
print "\nElapsed: "
print elapsed
print " ms"
printflush message1
set loops 0
label __label10
jump __label3 greaterThanEq @time wait
label __label13
op add loops loops 1
label __label11
jump __label13 lessThan @time wait
label __label12
label __label4
jump __label3 always 0 0
label __label5
end

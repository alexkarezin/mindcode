   532 instructions before optimizations.
    43 instructions eliminated by DeadCodeEliminator (3 iterations).
     9 instructions eliminated by SingleStepJumpEliminator (1 iterations).
    56 instructions eliminated by OutputTempEliminator.
    20 instructions eliminated by ImproveNegativeConditionalJumps.
    11 instructions eliminated by JumpOverJumpEliminator.
     4 loops improved by LoopOptimizer.
     4 instructions added by LoopOptimizer.
     8 instructions eliminated by IfExpressionOptimizer.
    16 instructions eliminated by DataFlowOptimizer (3 iterations).
     1 instructions updated by PropagateJumpTargets.
     6 instructions eliminated by SingleStepJumpEliminator (1 iterations).
    10 instructions eliminated by PrintMerger.
   357 instructions after optimizations.

Modifications by DeadCodeEliminator, iteration 1:
 
    27 jump __label7 always
    28 label __label8
    29 set MESSAGE block
-    * set __tmp8 MESSAGE
    30 jump __label6 always
    31 label __label7
    32 jump __label10 equal __ast0 @switch
    33 jump __label9 always
    34 label __label10
    35 set SWITCH block
-    * set __tmp8 SWITCH
    36 jump __label6 always
    37 label __label9
    38 jump __label12 equal __ast0 @logic-display
 
    40 jump __label11 always
    41 label __label12
    42 set DISPLAY block
-    * set __tmp8 DISPLAY
    43 jump __label6 always
    44 label __label11
    45 jump __label14 equal __ast0 @silicon-factory
 
    56 set MUL2 MUL3
    57 set MUL1 MUL2
    58 set OUTPUT @silicon
-    * set __tmp8 OUTPUT
    59 jump __label6 always
    60 label __label13
    61 jump __label16 equal __ast0 @silicon-crucible
 
    72 set MUL2 MUL3
    73 set MUL1 MUL2
    74 set OUTPUT @silicon
-    * set __tmp8 OUTPUT
    75 jump __label6 always
    76 label __label15
    77 jump __label18 equal __ast0 @kiln
 
    88 set MUL2 MUL3
    89 set MUL1 MUL2
    90 set OUTPUT @metaglass
-    * set __tmp8 OUTPUT
    91 jump __label6 always
    92 label __label17
    93 jump __label20 equal __ast0 @phase-weaver
 
   104 set MUL2 MUL3
   105 set MUL1 MUL2
   106 set OUTPUT @phase-fabric
-    * set __tmp8 OUTPUT
   107 jump __label6 always
   108 label __label19
   109 jump __label22 equal __ast0 @pyratite-mixer
 
   120 set MUL2 MUL3
   121 set MUL1 MUL2
   122 set OUTPUT @pyratite
-    * set __tmp8 OUTPUT
   123 jump __label6 always
   124 label __label21
   125 jump __label24 equal __ast0 @blast-mixer
 
   136 set MUL2 MUL3
   137 set MUL1 MUL2
   138 set OUTPUT @blast-compound
-    * set __tmp8 OUTPUT
   139 jump __label6 always
   140 label __label23
   141 jump __label26 equal __ast0 @plastanium-compressor
 
   154 op div __tmp24 250 __tmp23
   155 set MUL2 __tmp24
   156 set OUTPUT @plastanium
-    * set __tmp8 OUTPUT
   157 jump __label6 always
   158 label __label25
   159 print "\n  "
   160 print block
   161 print " not supported"
-    * set __tmp8 " not supported"
   162 label __label6
   163 label __label4
   164 jump __label3 always
 
   195 op or __tmp27 __tmp25 __tmp26
   196 jump __label27 equal __tmp27 false
   197 print "No block to monitor or display."
-    * set __tmp28 "No block to monitor or display."
   198 jump __label28 always
   199 label __label27
-    * set __tmp28 null
   200 label __label28
   201 printflush MESSAGE
   202 label __label1
 
   240 op sub __tmp42 __tmp39 cly
   241 set clh __tmp42
   242 set crh clh
-    * set __tmp31 crh
   243 jump __label30 always
   244 label __label29
   245 set OFFSET_X 5
 
   346 label __label46
   347 set __tmp44 __tmp74
   348 label __label36
-    * set __tmp31 __tmp44
   349 label __label30
   350 control enabled SWITCH 0
   351 label __label49
 
   370 op greaterThanEq __tmp90 index TO_INDEX
   371 jump __label55 equal __tmp90 false
   372 jump __label54 always
-    * set __tmp91 null
   373 jump __label56 always
   374 label __label55
-    * set __tmp91 null
   375 label __label56
   376 getlink __tmp92 n
   377 set factory __tmp92
 
   401 jump __label59 equal __tmp107 false
   402 set minimum r1
   403 set icon RES1
-    * set __tmp108 icon
   404 jump __label60 always
   405 label __label59
-    * set __tmp108 null
   406 label __label60
   407 op lessThan __tmp109 r2 minimum
   408 jump __label61 equal __tmp109 false
   409 set minimum r2
   410 set icon RES2
-    * set __tmp110 icon
   411 jump __label62 always
   412 label __label61
-    * set __tmp110 null
   413 label __label62
   414 op lessThan __tmp111 r3 minimum
   415 jump __label63 equal __tmp111 false
   416 set minimum r3
   417 set icon RES3
-    * set __tmp112 icon
   418 jump __label64 always
   419 label __label63
-    * set __tmp112 null
   420 label __label64
   421 op greaterThan __tmp113 out LIM1
   422 op sub __tmp114 100 out
 
   425 set showout __tmp116
   426 jump __label65 equal showout false
   427 set icon OUTPUT
-    * set __tmp117 icon
   428 jump __label66 always
   429 label __label65
-    * set __tmp117 null
   430 label __label66
   431 op idiv __tmp118 index 8
   432 set column __tmp118
 
   443 op land __tmp126 __tmp124 __tmp125
   444 jump __label67 equal __tmp126 false
   445 set icon TYPE
-    * set __tmp127 icon
   446 jump __label68 always
   447 label __label67
-    * set __tmp127 null
   448 label __label68
   449 draw color 255 255 255 255
   450 jump __label69 equal e false
 
   475 draw rect __tmp140 __tmp141 2 2
   476 set __tmp130 null
   477 label __label72
-    * set __tmp128 __tmp130
   478 jump __label70 always
   479 label __label69
   480 draw color 255 80 80 255
 
   494 op sub __tmp151 y 1
   495 draw lineRect __tmp150 __tmp151 16 16
   496 draw stroke 2
-    * set __tmp128 null
   497 label __label70
   498 op add __tmp152 x 16
   499 set x __tmp152
 
   504 set red 255
   505 set green 0
   506 set blue 0
-    * set __tmp156 blue
   507 jump __label74 always
   508 label __label73
   509 jump __label75 equal showout false
 
   535 set blue 0
   536 set __tmp157 blue
   537 label __label76
-    * set __tmp156 __tmp157
   538 label __label74
   539 op greaterThan __tmp164 boost EXPECTED_BOOST
   540 jump __label81 equal __tmp164 false
 
   545 op max __tmp168 192 blue
   546 set blue __tmp168
   547 set boost EXPECTED_BOOST
-    * set __tmp165 boost
   548 jump __label82 always
   549 label __label81
-    * set __tmp165 null
   550 label __label82
   551 op mul __tmp169 BAR_LENGTH boost
   552 op idiv __tmp170 __tmp169 EXPECTED_BOOST
 
   559 draw lineRect x y length BAR_WIDTH
   560 op add __tmp173 index 1
   561 set index __tmp173
-    * set __tmp95 index
   562 jump __label58 always
   563 label __label57
-    * set __tmp95 null
   564 label __label58
   565 label __label53
   566 op add n n 1

Modifications by DeadCodeEliminator, iteration 2:
 
   285 set clw crw
   286 set cly cry
   287 set clh crh
-    * set __tmp44 clh
   288 jump __label36 always
   289 label __label35
   290 set clx 0
 
   343 set crh clh
   344 set __tmp74 crh
   345 label __label46
-    * set __tmp44 __tmp74
   346 label __label36
   347 label __label30
   348 control enabled SWITCH 0
 
   451 op add __tmp131 x 7
   452 op add __tmp132 y 7
   453 draw image __tmp131 __tmp132 icon 16 0
-    * set __tmp130 null
   454 jump __label72 always
   455 label __label71
   456 draw color 255 80 80 255
 
   470 op add __tmp140 x 4
   471 op add __tmp141 y 6
   472 draw rect __tmp140 __tmp141 2 2
-    * set __tmp130 null
   473 label __label72
   474 jump __label70 always
   475 label __label69
 
   507 set green 0
   508 set blue 255
   509 set minimum out
-    * set __tmp157 minimum
   510 jump __label76 always
   511 label __label75
   512 op greaterThan __tmp158 minimum LIM2
 
   528 label __label80
   529 set green __tmp163
   530 set blue 0
-    * set __tmp157 blue
   531 label __label76
   532 label __label74
   533 op greaterThan __tmp164 boost EXPECTED_BOOST

Modifications by DeadCodeEliminator, iteration 3:
 
   334 label __label48
   335 op sub __tmp85 __tmp81 cry
   336 set crh __tmp85
-    * set __tmp74 crh
   337 jump __label46 always
   338 label __label45
   339 set crx clx
   340 set crw clw
   341 set cry cly
   342 set crh clh
-    * set __tmp74 crh
   343 label __label46
   344 label __label36
   345 label __label30

Modifications by SingleStepJumpEliminator, iteration 1:
 
   195 op or __tmp27 __tmp25 __tmp26
   196 jump __label27 equal __tmp27 false
   197 print "No block to monitor or display."
-    * jump __label28 always
   198 label __label27
   199 label __label28
   200 printflush MESSAGE
 
   365 op greaterThanEq __tmp90 index TO_INDEX
   366 jump __label55 equal __tmp90 false
   367 jump __label54 always
-    * jump __label56 always
   368 label __label55
   369 label __label56
   370 getlink __tmp92 n
 
   395 jump __label59 equal __tmp107 false
   396 set minimum r1
   397 set icon RES1
-    * jump __label60 always
   398 label __label59
   399 label __label60
   400 op lessThan __tmp109 r2 minimum
   401 jump __label61 equal __tmp109 false
   402 set minimum r2
   403 set icon RES2
-    * jump __label62 always
   404 label __label61
   405 label __label62
   406 op lessThan __tmp111 r3 minimum
   407 jump __label63 equal __tmp111 false
   408 set minimum r3
   409 set icon RES3
-    * jump __label64 always
   410 label __label63
   411 label __label64
   412 op greaterThan __tmp113 out LIM1
 
   416 set showout __tmp116
   417 jump __label65 equal showout false
   418 set icon OUTPUT
-    * jump __label66 always
   419 label __label65
   420 label __label66
   421 op idiv __tmp118 index 8
 
   433 op land __tmp126 __tmp124 __tmp125
   434 jump __label67 equal __tmp126 false
   435 set icon TYPE
-    * jump __label68 always
   436 label __label67
   437 label __label68
   438 draw color 255 255 255 255
 
   530 op max __tmp168 192 blue
   531 set blue __tmp168
   532 set boost EXPECTED_BOOST
-    * jump __label82 always
   533 label __label81
   534 label __label82
   535 op mul __tmp169 BAR_LENGTH boost
 
   543 draw lineRect x y length BAR_WIDTH
   544 op add __tmp173 index 1
   545 set index __tmp173
-    * jump __label58 always
   546 label __label57
   547 label __label58
   548 label __label53

Modifications by OutputTempEliminator, iteration 1:
 
    12 jump __label2 equal __tmp2 false
    13 print "Universal Factory Monitor"
    14 print "\n"
-    * set __tmp3 @links
-    * set n __tmp3
+   15 set n @links
    16 label __label3
    17 op greaterThan __tmp4 n 0
    18 jump __label5 equal __tmp4 false
-    * op sub __tmp5 n 1
-    * set n __tmp5
-    * getlink __tmp6 n
-    * set block __tmp6
-    * sensor __tmp7 block @type
-    * set __ast0 __tmp7
+   19 op sub n n 1
+   20 getlink block n
+   21 sensor __ast0 block @type
    22 jump __label8 equal __ast0 @message
    23 jump __label7 always
    24 label __label8
 
    42 jump __label13 always
    43 label __label14
    44 set TYPE @silicon-factory
-    * sensor __tmp9 block @itemCapacity
-    * set CAPACITY __tmp9
+   45 sensor CAPACITY block @itemCapacity
    46 set RES1 @sand
    47 set RES2 @coal
    48 set RES3 @itemCapacity
-    * op div __tmp10 100 CAPACITY
-    * set MUL3 __tmp10
+   49 op div MUL3 100 CAPACITY
    50 set MUL2 MUL3
    51 set MUL1 MUL2
    52 set OUTPUT @silicon
 
    56 jump __label15 always
    57 label __label16
    58 set TYPE @silicon-crucible
-    * sensor __tmp11 block @itemCapacity
-    * set CAPACITY __tmp11
+   59 sensor CAPACITY block @itemCapacity
    60 set RES1 @sand
    61 set RES2 @coal
    62 set RES3 @pyratite
-    * op div __tmp12 100 CAPACITY
-    * set MUL3 __tmp12
+   63 op div MUL3 100 CAPACITY
    64 set MUL2 MUL3
    65 set MUL1 MUL2
    66 set OUTPUT @silicon
 
    70 jump __label17 always
    71 label __label18
    72 set TYPE @kiln
-    * sensor __tmp13 block @itemCapacity
-    * set CAPACITY __tmp13
+   73 sensor CAPACITY block @itemCapacity
    74 set RES1 @sand
    75 set RES2 @lead
    76 set RES3 @itemCapacity
-    * op div __tmp14 100 CAPACITY
-    * set MUL3 __tmp14
+   77 op div MUL3 100 CAPACITY
    78 set MUL2 MUL3
    79 set MUL1 MUL2
    80 set OUTPUT @metaglass
 
    84 jump __label19 always
    85 label __label20
    86 set TYPE @phase-weaver
-    * sensor __tmp15 block @itemCapacity
-    * set CAPACITY __tmp15
+   87 sensor CAPACITY block @itemCapacity
    88 set RES1 @sand
    89 set RES2 @thorium
    90 set RES3 @itemCapacity
-    * op div __tmp16 100 CAPACITY
-    * set MUL3 __tmp16
+   91 op div MUL3 100 CAPACITY
    92 set MUL2 MUL3
    93 set MUL1 MUL2
    94 set OUTPUT @phase-fabric
 
    98 jump __label21 always
    99 label __label22
   100 set TYPE @pyratite-mixer
-    * sensor __tmp17 block @itemCapacity
-    * set CAPACITY __tmp17
+  101 sensor CAPACITY block @itemCapacity
   102 set RES1 @sand
   103 set RES2 @coal
   104 set RES3 @lead
-    * op div __tmp18 100 CAPACITY
-    * set MUL3 __tmp18
+  105 op div MUL3 100 CAPACITY
   106 set MUL2 MUL3
   107 set MUL1 MUL2
   108 set OUTPUT @pyratite
 
   112 jump __label23 always
   113 label __label24
   114 set TYPE @blast-mixer
-    * sensor __tmp19 block @itemCapacity
-    * set CAPACITY __tmp19
+  115 sensor CAPACITY block @itemCapacity
   116 set RES1 @pyratite
   117 set RES2 @spore-pod
   118 set RES3 @itemCapacity
-    * op div __tmp20 100 CAPACITY
-    * set MUL3 __tmp20
+  119 op div MUL3 100 CAPACITY
   120 set MUL2 MUL3
   121 set MUL1 MUL2
   122 set OUTPUT @blast-compound
 
   126 jump __label25 always
   127 label __label26
   128 set TYPE @plastanium-compressor
-    * sensor __tmp21 block @itemCapacity
-    * set CAPACITY __tmp21
+  129 sensor CAPACITY block @itemCapacity
   130 set RES1 @titanium
   131 set RES2 @oil
   132 set RES3 @itemCapacity
-    * op div __tmp22 100 CAPACITY
-    * set MUL3 __tmp22
+  133 op div MUL3 100 CAPACITY
   134 set MUL1 MUL3
   135 sensor __tmp23 block @liquidCapacity
-    * op div __tmp24 250 __tmp23
-    * set MUL2 __tmp24
+  136 op div MUL2 250 __tmp23
   137 set OUTPUT @plastanium
   138 jump __label6 always
   139 label __label25
 
   194 set clx 0
   195 set crx clx
   196 op add __tmp32 OFFSET_X BAR_SPACE
-    * op sub __tmp33 __tmp32 2
-    * set clw __tmp33
+  197 op sub clw __tmp32 2
   198 set crw clw
   199 op equal __tmp34 FROM_INDEX 0
   200 jump __label31 equal __tmp34 false
 
   202 jump __label32 always
   203 label __label31
   204 op mul __tmp36 FROM_INDEX BAR_GAP
-    * op add __tmp37 OFFSET_Y __tmp36
-    * set __tmp35 __tmp37
+  205 op add __tmp35 OFFSET_Y __tmp36
   206 label __label32
   207 set cly __tmp35
   208 set cry cly
   209 op lessThan __tmp38 TO_INDEX 8
   210 jump __label33 equal __tmp38 false
   211 op mul __tmp40 TO_INDEX BAR_GAP
-    * op add __tmp41 OFFSET_Y __tmp40
-    * set __tmp39 __tmp41
+  212 op add __tmp39 OFFSET_Y __tmp40
   213 jump __label34 always
   214 label __label33
   215 set __tmp39 176
   216 label __label34
-    * op sub __tmp42 __tmp39 cly
-    * set clh __tmp42
+  217 op sub clh __tmp39 cly
   218 set crh clh
   219 jump __label30 always
   220 label __label29
 
   227 op greaterThanEq __tmp43 FROM_INDEX 8
   228 jump __label35 equal __tmp43 false
   229 op add __tmp45 OFFSET_X BAR_SPACE
-    * op sub __tmp46 __tmp45 2
-    * set crx __tmp46
+  230 op sub crx __tmp45 2
   231 op add __tmp47 OFFSET_X BAR_SPACE
   232 op sub __tmp48 176 __tmp47
-    * op add __tmp49 __tmp48 1
-    * set crw __tmp49
+  233 op add crw __tmp48 1
   234 op mod __tmp50 FROM_INDEX 8
   235 op equal __tmp51 __tmp50 0
   236 jump __label37 equal __tmp51 false
 
   239 label __label37
   240 op mod __tmp53 FROM_INDEX 8
   241 op mul __tmp54 __tmp53 BAR_GAP
-    * op add __tmp55 OFFSET_Y __tmp54
-    * set __tmp52 __tmp55
+  242 op add __tmp52 OFFSET_Y __tmp54
   243 label __label38
   244 set cry __tmp52
   245 op lessThan __tmp56 TO_INDEX 16
   246 jump __label39 equal __tmp56 false
   247 op mod __tmp58 TO_INDEX 8
   248 op mul __tmp59 __tmp58 BAR_GAP
-    * op add __tmp60 OFFSET_Y __tmp59
-    * set __tmp57 __tmp60
+  249 op add __tmp57 OFFSET_Y __tmp59
   250 jump __label40 always
   251 label __label39
   252 set __tmp57 176
   253 label __label40
-    * op sub __tmp61 __tmp57 cry
-    * set crh __tmp61
+  254 op sub crh __tmp57 cry
   255 set clx crx
   256 set clw crw
   257 set cly cry
 
   260 label __label35
   261 set clx 0
   262 op add __tmp62 OFFSET_X BAR_SPACE
-    * op sub __tmp63 __tmp62 2
-    * set clw __tmp63
+  263 op sub clw __tmp62 2
   264 op equal __tmp64 FROM_INDEX 0
   265 jump __label41 equal __tmp64 false
   266 set __tmp65 0
   267 jump __label42 always
   268 label __label41
   269 op mul __tmp66 FROM_INDEX BAR_GAP
-    * op add __tmp67 OFFSET_Y __tmp66
-    * set __tmp65 __tmp67
+  270 op add __tmp65 OFFSET_Y __tmp66
   271 label __label42
   272 set cly __tmp65
   273 op lessThan __tmp68 TO_INDEX 8
   274 jump __label43 equal __tmp68 false
   275 op mul __tmp70 TO_INDEX BAR_GAP
-    * op add __tmp71 OFFSET_Y __tmp70
-    * set __tmp69 __tmp71
+  276 op add __tmp69 OFFSET_Y __tmp70
   277 jump __label44 always
   278 label __label43
   279 set __tmp69 176
   280 label __label44
-    * op sub __tmp72 __tmp69 cly
-    * set clh __tmp72
+  281 op sub clh __tmp69 cly
   282 op greaterThanEq __tmp73 TO_INDEX 8
   283 jump __label45 equal __tmp73 false
   284 op add __tmp75 OFFSET_X BAR_SPACE
-    * op sub __tmp76 __tmp75 2
-    * set crx __tmp76
+  285 op sub crx __tmp75 2
   286 op add __tmp77 OFFSET_X BAR_SPACE
   287 op sub __tmp78 176 __tmp77
-    * op add __tmp79 __tmp78 1
-    * set crw __tmp79
+  288 op add crw __tmp78 1
   289 set cry 0
   290 op lessThan __tmp80 TO_INDEX 16
   291 jump __label47 equal __tmp80 false
   292 op mod __tmp82 TO_INDEX 8
   293 op mul __tmp83 __tmp82 BAR_GAP
-    * op add __tmp84 OFFSET_Y __tmp83
-    * set __tmp81 __tmp84
+  294 op add __tmp81 OFFSET_Y __tmp83
   295 jump __label48 always
   296 label __label47
   297 set __tmp81 176
   298 label __label48
-    * op sub __tmp85 __tmp81 cry
-    * set crh __tmp85
+  299 op sub crh __tmp81 cry
   300 jump __label46 always
   301 label __label45
   302 set crx clx
 
   311 sensor __tmp86 SWITCH @enabled
   312 op equal __tmp87 __tmp86 0
   313 jump __label51 equal __tmp87 false
-    * set __tmp88 @time
-    * set start __tmp88
+  314 set start @time
   315 print "Universal Factory Monitor"
   316 print "\n"
   317 print "Monitoring: "
 
   330 jump __label54 always
   331 label __label55
   332 label __label56
-    * getlink __tmp92 n
-    * set factory __tmp92
+  333 getlink factory n
   334 sensor __tmp93 factory @type
   335 op equal __tmp94 __tmp93 TYPE
   336 jump __label57 equal __tmp94 false
   337 set minimum 101
   338 sensor __tmp96 factory RES1
-    * op mul __tmp97 MUL1 __tmp96
-    * set r1 __tmp97
+  339 op mul r1 MUL1 __tmp96
   340 sensor __tmp98 factory RES2
-    * op mul __tmp99 MUL2 __tmp98
-    * set r2 __tmp99
+  341 op mul r2 MUL2 __tmp98
   342 sensor __tmp100 factory RES3
-    * op mul __tmp101 MUL3 __tmp100
-    * set r3 __tmp101
+  343 op mul r3 MUL3 __tmp100
   344 sensor __tmp102 factory OUTPUT
-    * op mul __tmp103 MUL1 __tmp102
-    * set out __tmp103
-    * sensor __tmp104 factory @enabled
-    * set e __tmp104
-    * sensor __tmp105 factory @totalPower
-    * set power __tmp105
-    * sensor __tmp106 factory @timescale
-    * set boost __tmp106
+  345 op mul out MUL1 __tmp102
+  346 sensor e factory @enabled
+  347 sensor power factory @totalPower
+  348 sensor boost factory @timescale
   349 op lessThan __tmp107 r1 minimum
   350 jump __label59 equal __tmp107 false
   351 set minimum r1
 
   367 op greaterThan __tmp113 out LIM1
   368 op sub __tmp114 100 out
   369 op lessThan __tmp115 __tmp114 minimum
-    * op land __tmp116 __tmp113 __tmp115
-    * set showout __tmp116
+  370 op land showout __tmp113 __tmp115
   371 jump __label65 equal showout false
   372 set icon OUTPUT
   373 label __label65
   374 label __label66
-    * op idiv __tmp118 index 8
-    * set column __tmp118
-    * op mod __tmp119 index 8
-    * set row __tmp119
+  375 op idiv column index 8
+  376 op mod row index 8
   377 op mul __tmp120 column BAR_SPACE
-    * op add __tmp121 OFFSET_X __tmp120
-    * set x __tmp121
+  378 op add x OFFSET_X __tmp120
   379 op mul __tmp122 row BAR_GAP
-    * op add __tmp123 OFFSET_Y __tmp122
-    * set y __tmp123
+  380 op add y OFFSET_Y __tmp122
   381 op greaterThan __tmp124 minimum LIM2
   382 op equal __tmp125 showout false
   383 op land __tmp126 __tmp124 __tmp125
 
   432 draw lineRect __tmp150 __tmp151 16 16
   433 draw stroke 2
   434 label __label70
-    * op add __tmp152 x 16
-    * set x __tmp152
+  435 op add x x 16
   436 op equal __tmp153 power 0
   437 op equal __tmp154 e 0
   438 op land __tmp155 __tmp153 __tmp154
 
   472 label __label74
   473 op greaterThan __tmp164 boost EXPECTED_BOOST
   474 jump __label81 equal __tmp164 false
-    * op max __tmp166 192 red
-    * set red __tmp166
-    * op max __tmp167 192 green
-    * set green __tmp167
-    * op max __tmp168 192 blue
-    * set blue __tmp168
+  475 op max red 192 red
+  476 op max green 192 green
+  477 op max blue 192 blue
   478 set boost EXPECTED_BOOST
   479 label __label81
   480 label __label82
   481 op mul __tmp169 BAR_LENGTH boost
-    * op idiv __tmp170 __tmp169 EXPECTED_BOOST
-    * set length __tmp170
+  482 op idiv length __tmp169 EXPECTED_BOOST
   483 draw color red green blue 128
   484 op mul __tmp171 minimum length
   485 op idiv __tmp172 __tmp171 100
   486 draw rect x y __tmp172 BAR_WIDTH
   487 draw color red green blue 255
   488 draw lineRect x y length BAR_WIDTH
-    * op add __tmp173 index 1
-    * set index __tmp173
+  489 op add index index 1
   490 label __label57
   491 label __label58
   492 label __label53

Modifications by ImproveNegativeConditionalJumps, iteration 1:
 
    14 print "\n"
    15 set n @links
    16 label __label3
-    * op greaterThan __tmp4 n 0
-    * jump __label5 equal __tmp4 false
+   17 jump __label5 lessThanEq n 0
    18 op sub n n 1
    19 getlink block n
    20 sensor __ast0 block @type
 
   182 jump __label0 always
   183 label __label2
   184 sensor __tmp29 DISPLAY @type
-    * op equal __tmp30 __tmp29 @logic-display
-    * jump __label29 equal __tmp30 false
+  185 jump __label29 notEqual __tmp29 @logic-display
   186 set OFFSET_X 2
   187 set OFFSET_Y 2
   188 set BAR_WIDTH 14
 
   194 op add __tmp32 OFFSET_X BAR_SPACE
   195 op sub clw __tmp32 2
   196 set crw clw
-    * op equal __tmp34 FROM_INDEX 0
-    * jump __label31 equal __tmp34 false
+  197 jump __label31 notEqual FROM_INDEX 0
   198 set __tmp35 0
   199 jump __label32 always
   200 label __label31
 
   203 label __label32
   204 set cly __tmp35
   205 set cry cly
-    * op lessThan __tmp38 TO_INDEX 8
-    * jump __label33 equal __tmp38 false
+  206 jump __label33 greaterThanEq TO_INDEX 8
   207 op mul __tmp40 TO_INDEX BAR_GAP
   208 op add __tmp39 OFFSET_Y __tmp40
   209 jump __label34 always
 
   220 set BAR_LENGTH 61
   221 set BAR_SPACE 88
   222 set BAR_GAP 22
-    * op greaterThanEq __tmp43 FROM_INDEX 8
-    * jump __label35 equal __tmp43 false
+  223 jump __label35 lessThan FROM_INDEX 8
   224 op add __tmp45 OFFSET_X BAR_SPACE
   225 op sub crx __tmp45 2
   226 op add __tmp47 OFFSET_X BAR_SPACE
   227 op sub __tmp48 176 __tmp47
   228 op add crw __tmp48 1
   229 op mod __tmp50 FROM_INDEX 8
-    * op equal __tmp51 __tmp50 0
-    * jump __label37 equal __tmp51 false
+  230 jump __label37 notEqual __tmp50 0
   231 set __tmp52 0
   232 jump __label38 always
   233 label __label37
 
   236 op add __tmp52 OFFSET_Y __tmp54
   237 label __label38
   238 set cry __tmp52
-    * op lessThan __tmp56 TO_INDEX 16
-    * jump __label39 equal __tmp56 false
+  239 jump __label39 greaterThanEq TO_INDEX 16
   240 op mod __tmp58 TO_INDEX 8
   241 op mul __tmp59 __tmp58 BAR_GAP
   242 op add __tmp57 OFFSET_Y __tmp59
 
   254 set clx 0
   255 op add __tmp62 OFFSET_X BAR_SPACE
   256 op sub clw __tmp62 2
-    * op equal __tmp64 FROM_INDEX 0
-    * jump __label41 equal __tmp64 false
+  257 jump __label41 notEqual FROM_INDEX 0
   258 set __tmp65 0
   259 jump __label42 always
   260 label __label41
 
   262 op add __tmp65 OFFSET_Y __tmp66
   263 label __label42
   264 set cly __tmp65
-    * op lessThan __tmp68 TO_INDEX 8
-    * jump __label43 equal __tmp68 false
+  265 jump __label43 greaterThanEq TO_INDEX 8
   266 op mul __tmp70 TO_INDEX BAR_GAP
   267 op add __tmp69 OFFSET_Y __tmp70
   268 jump __label44 always
 
   270 set __tmp69 176
   271 label __label44
   272 op sub clh __tmp69 cly
-    * op greaterThanEq __tmp73 TO_INDEX 8
-    * jump __label45 equal __tmp73 false
+  273 jump __label45 lessThan TO_INDEX 8
   274 op add __tmp75 OFFSET_X BAR_SPACE
   275 op sub crx __tmp75 2
   276 op add __tmp77 OFFSET_X BAR_SPACE
   277 op sub __tmp78 176 __tmp77
   278 op add crw __tmp78 1
   279 set cry 0
-    * op lessThan __tmp80 TO_INDEX 16
-    * jump __label47 equal __tmp80 false
+  280 jump __label47 greaterThanEq TO_INDEX 16
   281 op mod __tmp82 TO_INDEX 8
   282 op mul __tmp83 __tmp82 BAR_GAP
   283 op add __tmp81 OFFSET_Y __tmp83
 
   298 control enabled SWITCH 0
   299 label __label49
   300 sensor __tmp86 SWITCH @enabled
-    * op equal __tmp87 __tmp86 0
-    * jump __label51 equal __tmp87 false
+  301 jump __label51 notEqual __tmp86 0
   302 set start @time
   303 print "Universal Factory Monitor"
   304 print "\n"
 
   313 set n 0
   314 label __label52
   315 jump __label54 greaterThanEq n __tmp89
-    * op greaterThanEq __tmp90 index TO_INDEX
-    * jump __label55 equal __tmp90 false
+  316 jump __label55 lessThan index TO_INDEX
   317 jump __label54 always
   318 label __label55
   319 label __label56
   320 getlink factory n
   321 sensor __tmp93 factory @type
-    * op equal __tmp94 __tmp93 TYPE
-    * jump __label57 equal __tmp94 false
+  322 jump __label57 notEqual __tmp93 TYPE
   323 set minimum 101
   324 sensor __tmp96 factory RES1
   325 op mul r1 MUL1 __tmp96
 
   332 sensor e factory @enabled
   333 sensor power factory @totalPower
   334 sensor boost factory @timescale
-    * op lessThan __tmp107 r1 minimum
-    * jump __label59 equal __tmp107 false
+  335 jump __label59 greaterThanEq r1 minimum
   336 set minimum r1
   337 set icon RES1
   338 label __label59
   339 label __label60
-    * op lessThan __tmp109 r2 minimum
-    * jump __label61 equal __tmp109 false
+  340 jump __label61 greaterThanEq r2 minimum
   341 set minimum r2
   342 set icon RES2
   343 label __label61
   344 label __label62
-    * op lessThan __tmp111 r3 minimum
-    * jump __label63 equal __tmp111 false
+  345 jump __label63 greaterThanEq r3 minimum
   346 set minimum r3
   347 set icon RES3
   348 label __label63
 
   370 label __label68
   371 draw color 255 255 255 255
   372 jump __label69 equal e false
-    * op greaterThan __tmp129 power 0
-    * jump __label71 equal __tmp129 false
+  373 jump __label71 lessThanEq power 0
   374 op add __tmp131 x 7
   375 op add __tmp132 y 7
   376 draw image __tmp131 __tmp132 icon 16 0
 
   441 set __tmp161 255
   442 label __label78
   443 set red __tmp161
-    * op greaterThan __tmp162 minimum LIM1
-    * jump __label79 equal __tmp162 false
+  444 jump __label79 lessThanEq minimum LIM1
   445 set __tmp163 255
   446 jump __label80 always
   447 label __label79
 
   451 set blue 0
   452 label __label76
   453 label __label74
-    * op greaterThan __tmp164 boost EXPECTED_BOOST
-    * jump __label81 equal __tmp164 false
+  454 jump __label81 lessThanEq boost EXPECTED_BOOST
   455 op max red 192 red
   456 op max green 192 green
   457 op max blue 192 blue

Modifications by JumpOverJumpEliminator, iteration 1:
 
    18 op sub n n 1
    19 getlink block n
    20 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   21 jump __label7 notEqual __ast0 @message
    22 label __label8
    23 set MESSAGE block
    24 jump __label6 always
    25 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   26 jump __label9 notEqual __ast0 @switch
    27 label __label10
    28 set SWITCH block
    29 jump __label6 always
    30 label __label9
    31 jump __label12 equal __ast0 @logic-display
-    * jump __label12 equal __ast0 @large-logic-display
-    * jump __label11 always
+   32 jump __label11 notEqual __ast0 @large-logic-display
    33 label __label12
    34 set DISPLAY block
    35 jump __label6 always
    36 label __label11
-    * jump __label14 equal __ast0 @silicon-factory
-    * jump __label13 always
+   37 jump __label13 notEqual __ast0 @silicon-factory
    38 label __label14
    39 set TYPE @silicon-factory
    40 sensor CAPACITY block @itemCapacity
 
    47 set OUTPUT @silicon
    48 jump __label6 always
    49 label __label13
-    * jump __label16 equal __ast0 @silicon-crucible
-    * jump __label15 always
+   50 jump __label15 notEqual __ast0 @silicon-crucible
    51 label __label16
    52 set TYPE @silicon-crucible
    53 sensor CAPACITY block @itemCapacity
 
    60 set OUTPUT @silicon
    61 jump __label6 always
    62 label __label15
-    * jump __label18 equal __ast0 @kiln
-    * jump __label17 always
+   63 jump __label17 notEqual __ast0 @kiln
    64 label __label18
    65 set TYPE @kiln
    66 sensor CAPACITY block @itemCapacity
 
    73 set OUTPUT @metaglass
    74 jump __label6 always
    75 label __label17
-    * jump __label20 equal __ast0 @phase-weaver
-    * jump __label19 always
+   76 jump __label19 notEqual __ast0 @phase-weaver
    77 label __label20
    78 set TYPE @phase-weaver
    79 sensor CAPACITY block @itemCapacity
 
    86 set OUTPUT @phase-fabric
    87 jump __label6 always
    88 label __label19
-    * jump __label22 equal __ast0 @pyratite-mixer
-    * jump __label21 always
+   89 jump __label21 notEqual __ast0 @pyratite-mixer
    90 label __label22
    91 set TYPE @pyratite-mixer
    92 sensor CAPACITY block @itemCapacity
 
    99 set OUTPUT @pyratite
   100 jump __label6 always
   101 label __label21
-    * jump __label24 equal __ast0 @blast-mixer
-    * jump __label23 always
+  102 jump __label23 notEqual __ast0 @blast-mixer
   103 label __label24
   104 set TYPE @blast-mixer
   105 sensor CAPACITY block @itemCapacity
 
   112 set OUTPUT @blast-compound
   113 jump __label6 always
   114 label __label23
-    * jump __label26 equal __ast0 @plastanium-compressor
-    * jump __label25 always
+  115 jump __label25 notEqual __ast0 @plastanium-compressor
   116 label __label26
   117 set TYPE @plastanium-compressor
   118 sensor CAPACITY block @itemCapacity
 
   303 set n 0
   304 label __label52
   305 jump __label54 greaterThanEq n __tmp89
-    * jump __label55 lessThan index TO_INDEX
-    * jump __label54 always
+  306 jump __label54 greaterThanEq index TO_INDEX
   307 label __label55
   308 label __label56
   309 getlink factory n

Modifications by LoopOptimizer, iteration 1:
 
    10 op equal __tmp1 TYPE null
    11 op or __tmp2 __tmp0 __tmp1
    12 jump __label2 equal __tmp2 false
+   13 label __label83
    14 print "Universal Factory Monitor"
    15 print "\n"
    16 set n @links
    17 label __label3
    18 jump __label5 lessThanEq n 0
+   19 label __label84
    20 op sub n n 1
    21 getlink block n
    22 sensor __ast0 block @type
 
   133 print " not supported"
   134 label __label6
   135 label __label4
-    * jump __label3 always
+  136 jump __label84 greaterThan n 0
   137 label __label5
   138 print "Message: "
   139 print MESSAGE
 
   171 label __label28
   172 printflush MESSAGE
   173 label __label1
-    * jump __label0 always
+  174 op equal __tmp0 DISPLAY null
+  175 op equal __tmp1 TYPE null
+  176 op or __tmp2 __tmp0 __tmp1
+  177 jump __label83 notEqual __tmp2 false
   178 label __label2
   179 sensor __tmp29 DISPLAY @type
   180 jump __label29 notEqual __tmp29 @logic-display
 
   294 label __label49
   295 sensor __tmp86 SWITCH @enabled
   296 jump __label51 notEqual __tmp86 0
+  297 label __label85
   298 set start @time
   299 print "Universal Factory Monitor"
   300 print "\n"
 
   309 set n 0
   310 label __label52
   311 jump __label54 greaterThanEq n __tmp89
+  312 label __label86
   313 jump __label54 greaterThanEq index TO_INDEX
   314 label __label55
   315 label __label56
 
   467 label __label58
   468 label __label53
   469 op add n n 1
-    * jump __label52 always
+  470 jump __label86 lessThan n __tmp89
   471 label __label54
   472 drawflush DISPLAY
   473 op sub __tmp174 @time start
 
   477 print " ms"
   478 printflush MESSAGE
   479 label __label50
-    * jump __label49 always
+  480 sensor __tmp86 SWITCH @enabled
+  481 jump __label85 equal __tmp86 0
   482 label __label51
   483 end

Modifications by IfExpressionOptimizer, iteration 1:
 
   189 op add __tmp32 OFFSET_X BAR_SPACE
   190 op sub clw __tmp32 2
   191 set crw clw
-    * jump __label31 notEqual FROM_INDEX 0
-    * set __tmp35 0
-    * jump __label32 always
+  192 set cly 0
+  193 jump __label32 equal FROM_INDEX 0
   194 label __label31
   195 op mul __tmp36 FROM_INDEX BAR_GAP
-    * op add __tmp35 OFFSET_Y __tmp36
+  196 op add cly OFFSET_Y __tmp36
   197 label __label32
-    * set cly __tmp35
   198 set cry cly
-    * jump __label33 greaterThanEq TO_INDEX 8
+  199 set __tmp39 176
+  200 jump __label34 greaterThanEq TO_INDEX 8
   201 op mul __tmp40 TO_INDEX BAR_GAP
   202 op add __tmp39 OFFSET_Y __tmp40
   203 jump __label34 always
-    * label __label33
-    * set __tmp39 176
   204 label __label34
   205 op sub clh __tmp39 cly
   206 set crh clh
 
   218 op add __tmp47 OFFSET_X BAR_SPACE
   219 op sub __tmp48 176 __tmp47
   220 op add crw __tmp48 1
+  221 set cry 0
   222 op mod __tmp50 FROM_INDEX 8
-    * jump __label37 notEqual __tmp50 0
-    * set __tmp52 0
-    * jump __label38 always
+  223 jump __label38 equal __tmp50 0
   224 label __label37
   225 op mod __tmp53 FROM_INDEX 8
   226 op mul __tmp54 __tmp53 BAR_GAP
-    * op add __tmp52 OFFSET_Y __tmp54
+  227 op add cry OFFSET_Y __tmp54
   228 label __label38
-    * set cry __tmp52
-    * jump __label39 greaterThanEq TO_INDEX 16
+  229 set __tmp57 176
+  230 jump __label40 greaterThanEq TO_INDEX 16
   231 op mod __tmp58 TO_INDEX 8
   232 op mul __tmp59 __tmp58 BAR_GAP
   233 op add __tmp57 OFFSET_Y __tmp59
   234 jump __label40 always
-    * label __label39
-    * set __tmp57 176
   235 label __label40
   236 op sub crh __tmp57 cry
   237 set clx crx
 
   243 set clx 0
   244 op add __tmp62 OFFSET_X BAR_SPACE
   245 op sub clw __tmp62 2
-    * jump __label41 notEqual FROM_INDEX 0
-    * set __tmp65 0
-    * jump __label42 always
+  246 set cly 0
+  247 jump __label42 equal FROM_INDEX 0
   248 label __label41
   249 op mul __tmp66 FROM_INDEX BAR_GAP
-    * op add __tmp65 OFFSET_Y __tmp66
+  250 op add cly OFFSET_Y __tmp66
   251 label __label42
-    * set cly __tmp65
-    * jump __label43 greaterThanEq TO_INDEX 8
+  252 set __tmp69 176
+  253 jump __label44 greaterThanEq TO_INDEX 8
   254 op mul __tmp70 TO_INDEX BAR_GAP
   255 op add __tmp69 OFFSET_Y __tmp70
   256 jump __label44 always
-    * label __label43
-    * set __tmp69 176
   257 label __label44
   258 op sub clh __tmp69 cly
   259 jump __label45 lessThan TO_INDEX 8
 
   263 op sub __tmp78 176 __tmp77
   264 op add crw __tmp78 1
   265 set cry 0
-    * jump __label47 greaterThanEq TO_INDEX 16
+  266 set __tmp81 176
+  267 jump __label48 greaterThanEq TO_INDEX 16
   268 op mod __tmp82 TO_INDEX 8
   269 op mul __tmp83 __tmp82 BAR_GAP
   270 op add __tmp81 OFFSET_Y __tmp83
   271 jump __label48 always
-    * label __label47
-    * set __tmp81 176
   272 label __label48
   273 op sub crh __tmp81 cry
   274 jump __label46 always
 
   417 set minimum out
   418 jump __label76 always
   419 label __label75
+  420 set red 255
   421 op greaterThan __tmp158 minimum LIM2
   422 op greaterThanEq __tmp159 boost EXPECTED_BOOST
   423 op land __tmp160 __tmp158 __tmp159
-    * jump __label77 equal __tmp160 false
-    * set __tmp161 0
+  424 jump __label78 equal __tmp160 false
+  425 set red 0
   426 jump __label78 always
-    * label __label77
-    * set __tmp161 255
   427 label __label78
-    * set red __tmp161
-    * jump __label79 lessThanEq minimum LIM1
-    * set __tmp163 255
+  428 set green 0
+  429 jump __label80 lessThanEq minimum LIM1
+  430 set green 255
   431 jump __label80 always
-    * label __label79
-    * set __tmp163 0
   432 label __label80
-    * set green __tmp163
   433 set blue 0
   434 label __label76
   435 label __label74

Modifications by DataFlowOptimizer, iteration 1:
 
   173 label __label1
   174 op equal __tmp0 DISPLAY null
   175 op equal __tmp1 TYPE null
-    * op or __tmp2 __tmp0 __tmp1
+  176 op or __tmp2 __tmp25 __tmp26
   177 jump __label83 notEqual __tmp2 false
   178 label __label2
   179 sensor __tmp29 DISPLAY @type
 
   185 set BAR_SPACE 80
   186 set BAR_GAP 20
   187 set clx 0
-    * set crx clx
+  188 set crx 0
   189 op add __tmp32 OFFSET_X BAR_SPACE
   190 op sub clw __tmp32 2
   191 set crw clw
 
   216 op add __tmp45 OFFSET_X BAR_SPACE
   217 op sub crx __tmp45 2
   218 op add __tmp47 OFFSET_X BAR_SPACE
-    * op sub __tmp48 176 __tmp47
-    * op add crw __tmp48 1
+  219 op sub __tmp48 176 __tmp45
+  220 op sub crw 177 __tmp47
   221 set cry 0
   222 op mod __tmp50 FROM_INDEX 8
   223 jump __label38 equal __tmp50 0
   224 label __label37
   225 op mod __tmp53 FROM_INDEX 8
-    * op mul __tmp54 __tmp53 BAR_GAP
+  226 op mul __tmp54 __tmp50 BAR_GAP
   227 op add cry OFFSET_Y __tmp54
   228 label __label38
   229 set __tmp57 176
 
   258 op sub clh __tmp69 cly
   259 jump __label45 lessThan TO_INDEX 8
   260 op add __tmp75 OFFSET_X BAR_SPACE
-    * op sub crx __tmp75 2
+  261 op sub crx __tmp62 2
   262 op add __tmp77 OFFSET_X BAR_SPACE
-    * op sub __tmp78 176 __tmp77
-    * op add crw __tmp78 1
+  263 op sub __tmp78 176 __tmp62
+  264 op sub crw 177 __tmp77
   265 set cry 0
   266 set __tmp81 176
   267 jump __label48 greaterThanEq TO_INDEX 16
 
   270 op add __tmp81 OFFSET_Y __tmp83
   271 jump __label48 always
   272 label __label48
-    * op sub crh __tmp81 cry
+  273 op sub crh __tmp81 0
   274 jump __label46 always
   275 label __label45
-    * set crx clx
+  276 set crx 0
   277 set crw clw
   278 set cry cly
   279 set crh clh
 
   298 set __tmp89 @links
   299 set n 0
   300 label __label52
-    * jump __label54 greaterThanEq n __tmp89
+  301 jump __label54 greaterThanEq 0 __tmp89
   302 label __label86
   303 jump __label54 greaterThanEq index TO_INDEX
   304 label __label55
 
   318 sensor e factory @enabled
   319 sensor power factory @totalPower
   320 sensor boost factory @timescale
-    * jump __label59 greaterThanEq r1 minimum
+  321 jump __label59 greaterThanEq r1 101
   322 set minimum r1
   323 set icon RES1
   324 label __label59
 
   371 draw rect __tmp134 __tmp135 8 4
   372 op add __tmp136 x 12
   373 op add __tmp137 y 3
-    * draw rect __tmp136 __tmp137 2 2
+  374 draw rect __tmp136 __tmp133 2 2
   375 op add __tmp138 x 12
   376 op add __tmp139 y 9
-    * draw rect __tmp138 __tmp139 2 2
+  377 draw rect __tmp136 __tmp139 2 2
   378 draw color 255 80 80 255
   379 op add __tmp140 x 4
   380 op add __tmp141 y 6
 
   393 op add __tmp147 y 2
   394 op add __tmp148 x 12
   395 op add __tmp149 y 12
-    * draw line __tmp146 __tmp147 __tmp148 __tmp149
+  396 draw line __tmp142 __tmp145 __tmp144 __tmp143
   397 draw color 0 0 0 255
   398 op sub __tmp150 x 1
   399 op sub __tmp151 y 1
 
   420 set red 255
   421 op greaterThan __tmp158 minimum LIM2
   422 op greaterThanEq __tmp159 boost EXPECTED_BOOST
-    * op land __tmp160 __tmp158 __tmp159
+  423 op land __tmp160 __tmp124 __tmp159
   424 jump __label78 equal __tmp160 false
   425 set red 0
   426 jump __label78 always

Modifications by DataFlowOptimizer, iteration 2:
 
   171 label __label28
   172 printflush MESSAGE
   173 label __label1
-    * op equal __tmp0 DISPLAY null
-    * op equal __tmp1 TYPE null
   174 op or __tmp2 __tmp25 __tmp26
-    * jump __label83 notEqual __tmp2 false
+  175 jump __label83 notEqual __tmp27 false
   176 label __label2
   177 sensor __tmp29 DISPLAY @type
   178 jump __label29 notEqual __tmp29 @logic-display
 
   214 op add __tmp45 OFFSET_X BAR_SPACE
   215 op sub crx __tmp45 2
   216 op add __tmp47 OFFSET_X BAR_SPACE
-    * op sub __tmp48 176 __tmp45
-    * op sub crw 177 __tmp47
+  217 op sub crw 177 __tmp45
   218 set cry 0
   219 op mod __tmp50 FROM_INDEX 8
   220 jump __label38 equal __tmp50 0
   221 label __label37
-    * op mod __tmp53 FROM_INDEX 8
   222 op mul __tmp54 __tmp50 BAR_GAP
   223 op add cry OFFSET_Y __tmp54
   224 label __label38
 
   253 label __label44
   254 op sub clh __tmp69 cly
   255 jump __label45 lessThan TO_INDEX 8
-    * op add __tmp75 OFFSET_X BAR_SPACE
   256 op sub crx __tmp62 2
   257 op add __tmp77 OFFSET_X BAR_SPACE
-    * op sub __tmp78 176 __tmp62
-    * op sub crw 177 __tmp77
+  258 op sub crw 177 __tmp62
   259 set cry 0
   260 set __tmp81 176
   261 jump __label48 greaterThanEq TO_INDEX 16
 
   364 op add __tmp135 y 5
   365 draw rect __tmp134 __tmp135 8 4
   366 op add __tmp136 x 12
-    * op add __tmp137 y 3
   367 draw rect __tmp136 __tmp133 2 2
-    * op add __tmp138 x 12
   368 op add __tmp139 y 9
   369 draw rect __tmp136 __tmp139 2 2
   370 draw color 255 80 80 255
 
   381 op add __tmp144 x 12
   382 op add __tmp145 y 2
   383 draw line __tmp142 __tmp143 __tmp144 __tmp145
-    * op add __tmp146 x 2
-    * op add __tmp147 y 2
-    * op add __tmp148 x 12
-    * op add __tmp149 y 12
   384 draw line __tmp142 __tmp145 __tmp144 __tmp143
   385 draw color 0 0 0 255
   386 op sub __tmp150 x 1
 
   406 jump __label76 always
   407 label __label75
   408 set red 255
-    * op greaterThan __tmp158 minimum LIM2
   409 op greaterThanEq __tmp159 boost EXPECTED_BOOST
   410 op land __tmp160 __tmp124 __tmp159
   411 jump __label78 equal __tmp160 false

Modifications by DataFlowOptimizer, iteration 3:
 
   171 label __label28
   172 printflush MESSAGE
   173 label __label1
-    * op or __tmp2 __tmp25 __tmp26
   174 jump __label83 notEqual __tmp27 false
   175 label __label2
   176 sensor __tmp29 DISPLAY @type
 
   212 jump __label35 lessThan FROM_INDEX 8
   213 op add __tmp45 OFFSET_X BAR_SPACE
   214 op sub crx __tmp45 2
-    * op add __tmp47 OFFSET_X BAR_SPACE
   215 op sub crw 177 __tmp45
   216 set cry 0
   217 op mod __tmp50 FROM_INDEX 8
 
   252 op sub clh __tmp69 cly
   253 jump __label45 lessThan TO_INDEX 8
   254 op sub crx __tmp62 2
-    * op add __tmp77 OFFSET_X BAR_SPACE
   255 op sub crw 177 __tmp62
   256 set cry 0
   257 set __tmp81 176

Modifications by PropagateJumpTargets, iteration 1:
 
   351 op add __tmp131 x 7
   352 op add __tmp132 y 7
   353 draw image __tmp131 __tmp132 icon 16 0
-    * jump __label72 always
+  354 jump __label70 always
   355 label __label71
   356 draw color 255 80 80 255
   357 op add __tmp133 y 3

Modifications by SingleStepJumpEliminator, iteration 1:
 
   197 jump __label34 greaterThanEq TO_INDEX 8
   198 op mul __tmp40 TO_INDEX BAR_GAP
   199 op add __tmp39 OFFSET_Y __tmp40
-    * jump __label34 always
   200 label __label34
   201 op sub clh __tmp39 cly
   202 set crh clh
 
   224 op mod __tmp58 TO_INDEX 8
   225 op mul __tmp59 __tmp58 BAR_GAP
   226 op add __tmp57 OFFSET_Y __tmp59
-    * jump __label40 always
   227 label __label40
   228 op sub crh __tmp57 cry
   229 set clx crx
 
   245 jump __label44 greaterThanEq TO_INDEX 8
   246 op mul __tmp70 TO_INDEX BAR_GAP
   247 op add __tmp69 OFFSET_Y __tmp70
-    * jump __label44 always
   248 label __label44
   249 op sub clh __tmp69 cly
   250 jump __label45 lessThan TO_INDEX 8
 
   256 op mod __tmp82 TO_INDEX 8
   257 op mul __tmp83 __tmp82 BAR_GAP
   258 op add __tmp81 OFFSET_Y __tmp83
-    * jump __label48 always
   259 label __label48
   260 op sub crh __tmp81 0
   261 jump __label46 always
 
   403 op land __tmp160 __tmp124 __tmp159
   404 jump __label78 equal __tmp160 false
   405 set red 0
-    * jump __label78 always
   406 label __label78
   407 set green 0
   408 jump __label80 lessThanEq minimum LIM1
   409 set green 255
-    * jump __label80 always
   410 label __label80
   411 set blue 0
   412 label __label76

Modifications by PrintMerger, iteration 1:
 
    11 op or __tmp2 __tmp0 __tmp1
    12 jump __label2 equal __tmp2 false
    13 label __label83
-    * print "Universal Factory Monitor"
-    * print "\n"
+   14 print "Universal Factory Monitor\n"
    15 set n @links
    16 label __label3
    17 jump __label5 lessThanEq n 0
 
   136 label __label5
   137 print "Message: "
   138 print MESSAGE
-    * print "\n"
-    * print "Switch: "
+  139 print "\nSwitch: "
   140 print SWITCH
-    * print "\n"
-    * print "Display: "
+  141 print "\nDisplay: "
   142 print DISPLAY
-    * print "\n"
-    * print "Monitoring: "
+  143 print "\nMonitoring: "
   144 print TYPE
-    * print "\n"
-    * print "Capacity: "
+  145 print "\nCapacity: "
   146 print CAPACITY
-    * print "\n"
-    * print "Resource 1: "
+  147 print "\nResource 1: "
   148 print RES1
-    * print "\n"
-    * print "Resource 2: "
+  149 print "\nResource 2: "
   150 print RES2
-    * print "\n"
-    * print "Resource 3: "
+  151 print "\nResource 3: "
   152 print RES3
-    * print "\n"
-    * print "Output: "
+  153 print "\nOutput: "
   154 print OUTPUT
   155 print "\n"
   156 op equal __tmp25 DISPLAY null
 
   264 jump __label51 notEqual __tmp86 0
   265 label __label85
   266 set start @time
-    * print "Universal Factory Monitor"
-    * print "\n"
+  267 print "Universal Factory Monitor\n"
   268 print "Monitoring: "
   269 print TYPE
   270 draw color 0 0 80 255

Final code before resolving virtual instructions:

set FROM_INDEX 0
set TO_INDEX 16
set EXPECTED_BOOST 1.5
set LIM1 33
set LIM2 66
set DISPLAY null
set TYPE null
set icon null
label __label0
op equal __tmp0 DISPLAY null
op equal __tmp1 TYPE null
op or __tmp2 __tmp0 __tmp1
jump __label2 equal __tmp2 false
label __label83
print "Universal Factory Monitor\n"
set n @links
label __label3
jump __label5 lessThanEq n 0
label __label84
op sub n n 1
getlink block n
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
label __label8
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
label __label10
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @logic-display
jump __label11 notEqual __ast0 @large-logic-display
label __label12
set DISPLAY block
jump __label6 always 0 0
label __label11
jump __label13 notEqual __ast0 @silicon-factory
label __label14
set TYPE @silicon-factory
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @silicon
jump __label6 always 0 0
label __label13
jump __label15 notEqual __ast0 @silicon-crucible
label __label16
set TYPE @silicon-crucible
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @pyratite
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @silicon
jump __label6 always 0 0
label __label15
jump __label17 notEqual __ast0 @kiln
label __label18
set TYPE @kiln
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @lead
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @metaglass
jump __label6 always 0 0
label __label17
jump __label19 notEqual __ast0 @phase-weaver
label __label20
set TYPE @phase-weaver
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @thorium
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @phase-fabric
jump __label6 always 0 0
label __label19
jump __label21 notEqual __ast0 @pyratite-mixer
label __label22
set TYPE @pyratite-mixer
sensor CAPACITY block @itemCapacity
set RES1 @sand
set RES2 @coal
set RES3 @lead
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @pyratite
jump __label6 always 0 0
label __label21
jump __label23 notEqual __ast0 @blast-mixer
label __label24
set TYPE @blast-mixer
sensor CAPACITY block @itemCapacity
set RES1 @pyratite
set RES2 @spore-pod
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL2 MUL3
set MUL1 MUL2
set OUTPUT @blast-compound
jump __label6 always 0 0
label __label23
jump __label25 notEqual __ast0 @plastanium-compressor
label __label26
set TYPE @plastanium-compressor
sensor CAPACITY block @itemCapacity
set RES1 @titanium
set RES2 @oil
set RES3 @itemCapacity
op div MUL3 100 CAPACITY
set MUL1 MUL3
sensor __tmp23 block @liquidCapacity
op div MUL2 250 __tmp23
set OUTPUT @plastanium
jump __label6 always 0 0
label __label25
print "\n  "
print block
print " not supported"
label __label6
label __label4
jump __label84 greaterThan n 0
label __label5
print "Message: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nDisplay: "
print DISPLAY
print "\nMonitoring: "
print TYPE
print "\nCapacity: "
print CAPACITY
print "\nResource 1: "
print RES1
print "\nResource 2: "
print RES2
print "\nResource 3: "
print RES3
print "\nOutput: "
print OUTPUT
print "\n"
op equal __tmp25 DISPLAY null
op equal __tmp26 TYPE null
op or __tmp27 __tmp25 __tmp26
jump __label27 equal __tmp27 false
print "No block to monitor or display."
label __label27
label __label28
printflush MESSAGE
label __label1
jump __label83 notEqual __tmp27 false
label __label2
sensor __tmp29 DISPLAY @type
jump __label29 notEqual __tmp29 @logic-display
set OFFSET_X 2
set OFFSET_Y 2
set BAR_WIDTH 14
set BAR_LENGTH 61
set BAR_SPACE 80
set BAR_GAP 20
set clx 0
set crx 0
op add __tmp32 OFFSET_X BAR_SPACE
op sub clw __tmp32 2
set crw clw
set cly 0
jump __label32 equal FROM_INDEX 0
label __label31
op mul __tmp36 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp36
label __label32
set cry cly
set __tmp39 176
jump __label34 greaterThanEq TO_INDEX 8
op mul __tmp40 TO_INDEX BAR_GAP
op add __tmp39 OFFSET_Y __tmp40
label __label34
op sub clh __tmp39 cly
set crh clh
jump __label30 always 0 0
label __label29
set OFFSET_X 5
set OFFSET_Y 4
set BAR_WIDTH 14
set BAR_LENGTH 61
set BAR_SPACE 88
set BAR_GAP 22
jump __label35 lessThan FROM_INDEX 8
op add __tmp45 OFFSET_X BAR_SPACE
op sub crx __tmp45 2
op sub crw 177 __tmp45
set cry 0
op mod __tmp50 FROM_INDEX 8
jump __label38 equal __tmp50 0
label __label37
op mul __tmp54 __tmp50 BAR_GAP
op add cry OFFSET_Y __tmp54
label __label38
set __tmp57 176
jump __label40 greaterThanEq TO_INDEX 16
op mod __tmp58 TO_INDEX 8
op mul __tmp59 __tmp58 BAR_GAP
op add __tmp57 OFFSET_Y __tmp59
label __label40
op sub crh __tmp57 cry
set clx crx
set clw crw
set cly cry
set clh crh
jump __label36 always 0 0
label __label35
set clx 0
op add __tmp62 OFFSET_X BAR_SPACE
op sub clw __tmp62 2
set cly 0
jump __label42 equal FROM_INDEX 0
label __label41
op mul __tmp66 FROM_INDEX BAR_GAP
op add cly OFFSET_Y __tmp66
label __label42
set __tmp69 176
jump __label44 greaterThanEq TO_INDEX 8
op mul __tmp70 TO_INDEX BAR_GAP
op add __tmp69 OFFSET_Y __tmp70
label __label44
op sub clh __tmp69 cly
jump __label45 lessThan TO_INDEX 8
op sub crx __tmp62 2
op sub crw 177 __tmp62
set cry 0
set __tmp81 176
jump __label48 greaterThanEq TO_INDEX 16
op mod __tmp82 TO_INDEX 8
op mul __tmp83 __tmp82 BAR_GAP
op add __tmp81 OFFSET_Y __tmp83
label __label48
op sub crh __tmp81 0
jump __label46 always 0 0
label __label45
set crx 0
set crw clw
set cry cly
set crh clh
label __label46
label __label36
label __label30
control enabled SWITCH 0 0 0 0
label __label49
sensor __tmp86 SWITCH @enabled
jump __label51 notEqual __tmp86 0
label __label85
set start @time
print "Universal Factory Monitor\n"
print "Monitoring: "
print TYPE
draw color 0 0 80 255 0 0
draw rect clx cly clw clh 0 0
draw rect crx cry crw crh 0 0
draw stroke 2 0 0 0 0 0
set index FROM_INDEX
set __tmp89 @links
set n 0
label __label52
jump __label54 greaterThanEq 0 __tmp89
label __label86
jump __label54 greaterThanEq index TO_INDEX
label __label55
label __label56
getlink factory n
sensor __tmp93 factory @type
jump __label57 notEqual __tmp93 TYPE
set minimum 101
sensor __tmp96 factory RES1
op mul r1 MUL1 __tmp96
sensor __tmp98 factory RES2
op mul r2 MUL2 __tmp98
sensor __tmp100 factory RES3
op mul r3 MUL3 __tmp100
sensor __tmp102 factory OUTPUT
op mul out MUL1 __tmp102
sensor e factory @enabled
sensor power factory @totalPower
sensor boost factory @timescale
jump __label59 greaterThanEq r1 101
set minimum r1
set icon RES1
label __label59
label __label60
jump __label61 greaterThanEq r2 minimum
set minimum r2
set icon RES2
label __label61
label __label62
jump __label63 greaterThanEq r3 minimum
set minimum r3
set icon RES3
label __label63
label __label64
op greaterThan __tmp113 out LIM1
op sub __tmp114 100 out
op lessThan __tmp115 __tmp114 minimum
op land showout __tmp113 __tmp115
jump __label65 equal showout false
set icon OUTPUT
label __label65
label __label66
op idiv column index 8
op mod row index 8
op mul __tmp120 column BAR_SPACE
op add x OFFSET_X __tmp120
op mul __tmp122 row BAR_GAP
op add y OFFSET_Y __tmp122
op greaterThan __tmp124 minimum LIM2
op equal __tmp125 showout false
op land __tmp126 __tmp124 __tmp125
jump __label67 equal __tmp126 false
set icon TYPE
label __label67
label __label68
draw color 255 255 255 255 0 0
jump __label69 equal e false
jump __label71 lessThanEq power 0
op add __tmp131 x 7
op add __tmp132 y 7
draw image __tmp131 __tmp132 icon 16 0 0
jump __label70 always 0 0
label __label71
draw color 255 80 80 255 0 0
op add __tmp133 y 3
draw rect x __tmp133 14 8 0 0
draw color 0 0 0 255 0 0
op add __tmp134 x 2
op add __tmp135 y 5
draw rect __tmp134 __tmp135 8 4 0 0
op add __tmp136 x 12
draw rect __tmp136 __tmp133 2 2 0 0
op add __tmp139 y 9
draw rect __tmp136 __tmp139 2 2 0 0
draw color 255 80 80 255 0 0
op add __tmp140 x 4
op add __tmp141 y 6
draw rect __tmp140 __tmp141 2 2 0 0
label __label72
jump __label70 always 0 0
label __label69
draw color 255 80 80 255 0 0
draw stroke 3 0 0 0 0 0
op add __tmp142 x 2
op add __tmp143 y 12
op add __tmp144 x 12
op add __tmp145 y 2
draw line __tmp142 __tmp143 __tmp144 __tmp145 0 0
draw line __tmp142 __tmp145 __tmp144 __tmp143 0 0
draw color 0 0 0 255 0 0
op sub __tmp150 x 1
op sub __tmp151 y 1
draw lineRect __tmp150 __tmp151 16 16 0 0
draw stroke 2 0 0 0 0 0
label __label70
op add x x 16
op equal __tmp153 power 0
op equal __tmp154 e 0
op land __tmp155 __tmp153 __tmp154
jump __label73 equal __tmp155 false
set red 255
set green 0
set blue 0
jump __label74 always 0 0
label __label73
jump __label75 equal showout false
set red 255
set green 0
set blue 255
set minimum out
jump __label76 always 0 0
label __label75
set red 255
op greaterThanEq __tmp159 boost EXPECTED_BOOST
op land __tmp160 __tmp124 __tmp159
jump __label78 equal __tmp160 false
set red 0
label __label78
set green 0
jump __label80 lessThanEq minimum LIM1
set green 255
label __label80
set blue 0
label __label76
label __label74
jump __label81 lessThanEq boost EXPECTED_BOOST
op max red 192 red
op max green 192 green
op max blue 192 blue
set boost EXPECTED_BOOST
label __label81
label __label82
op mul __tmp169 BAR_LENGTH boost
op idiv length __tmp169 EXPECTED_BOOST
draw color red green blue 128 0 0
op mul __tmp171 minimum length
op idiv __tmp172 __tmp171 100
draw rect x y __tmp172 BAR_WIDTH 0 0
draw color red green blue 255 0 0
draw lineRect x y length BAR_WIDTH 0 0
op add index index 1
label __label57
label __label58
label __label53
op add n n 1
jump __label86 lessThan n __tmp89
label __label54
drawflush DISPLAY
op sub __tmp174 @time start
op floor __tmp175 __tmp174 0
print "\nDraw time: "
print __tmp175
print " ms"
printflush MESSAGE
label __label50
sensor __tmp86 SWITCH @enabled
jump __label85 equal __tmp86 0
label __label51
end

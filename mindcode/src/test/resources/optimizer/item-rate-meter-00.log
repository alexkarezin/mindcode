   176 instructions before optimizations.
    20 instructions eliminated by DeadCodeEliminator (2 iterations).
     7 instructions eliminated by SingleStepJumpEliminator (1 iterations).
    20 instructions eliminated by OutputTempEliminator.
     1 instructions eliminated by ExpressionOptimizer.
    12 instructions eliminated by ImproveNegativeConditionalJumps.
     5 instructions eliminated by JumpOverJumpEliminator.
     4 loops improved by LoopOptimizer.
     1 instructions added by LoopOptimizer.
     1 instructions eliminated by IfExpressionOptimizer.
     1 instructions eliminated by UnreachableCodeEliminator (1 iterations).
     5 instructions eliminated by PrintMerger.
   105 instructions after optimizations.

Modifications by DeadCodeEliminator, iteration 1:
 
    21 jump __label7 always
    22 label __label8
    23 set MESSAGE block
-    * set __tmp6 MESSAGE
    24 jump __label6 always
    25 label __label7
    26 jump __label10 equal __ast0 @switch
    27 jump __label9 always
    28 label __label10
    29 set SWITCH block
-    * set __tmp6 SWITCH
    30 jump __label6 always
    31 label __label9
    32 jump __label12 equal __ast0 @memory-bank
 
    35 label __label12
    36 set TARGET_MEMORY SOURCE_MEMORY
    37 set SOURCE_MEMORY block
-    * set __tmp6 SOURCE_MEMORY
    38 jump __label6 always
    39 label __label11
-    * set __tmp6 null
    40 label __label6
    41 label __label4
    42 jump __label3 always
 
    52 op equal __tmp7 SOURCE_MEMORY null
    53 jump __label13 equal __tmp7 false
    54 print "\nNo memory."
-    * set __tmp8 "\nNo memory."
    55 jump __label14 always
    56 label __label13
-    * set __tmp8 null
    57 label __label14
    58 printflush MESSAGE
    59 label __label1
 
    62 op equal __tmp9 TARGET_MEMORY null
    63 jump __label15 equal __tmp9 false
    64 set TARGET_MEMORY SOURCE_MEMORY
-    * set __tmp10 TARGET_MEMORY
    65 jump __label16 always
    66 label __label15
-    * set __tmp10 null
    67 label __label16
    68 set startIndex 0
    69 sensor __tmp11 TARGET_MEMORY @type
 
    89 set startIndex __tmp15
    90 op sub __tmp16 memSize 1
    91 set memSize __tmp16
-    * set __tmp14 memSize
    92 jump __label23 always
    93 label __label22
-    * set __tmp14 null
    94 label __label23
    95 set __tmp17 @tick
    96 set prevTick __tmp17
 
   116 op add __tmp28 prevTick TICKS
   117 set nextTick __tmp28
   118 set currTick prevTick
-    * set __tmp26 currTick
   119 jump __label28 always
   120 label __label27
-    * set __tmp26 null
   121 label __label28
   122 label __label29
   123 op lessThan __tmp29 @tick nextTick
 
   125 op lessThan __tmp30 @tick prevTick
   126 jump __label32 equal __tmp30 false
   127 end
-    * set __tmp31 null
   128 jump __label33 always
   129 label __label32
   130 read __tmp32 SOURCE_MEMORY 0
 
   139 label __label34
   140 set __tmp34 null
   141 label __label35
-    * set __tmp31 __tmp34
   142 label __label33
   143 label __label30
   144 jump __label29 always
 
   150 op equal __tmp38 amount 0
   151 jump __label36 equal __tmp38 false
   152 set rate 0
-    * set __tmp39 rate
   153 jump __label37 always
   154 label __label36
   155 op div __tmp40 amount time
   156 op max __tmp41 __tmp40 0
   157 set rate __tmp41
-    * set __tmp39 rate
   158 label __label37
   159 op add __tmp42 index 1
   160 set index __tmp42
 
   162 jump __label38 equal __tmp43 false
   163 op add __tmp45 startIndex 1
   164 set index __tmp45
-    * set __tmp44 index
   165 jump __label39 always
   166 label __label38
-    * set __tmp44 null
   167 label __label39
   168 write index TARGET_MEMORY startIndex
   169 write rate TARGET_MEMORY index

Modifications by DeadCodeEliminator, iteration 2:
 
   134 set __tmp35 @tick
   135 set currTick __tmp35
   136 set curr value
-    * set __tmp34 curr
   137 jump __label35 always
   138 label __label34
-    * set __tmp34 null
   139 label __label35
   140 label __label33
   141 label __label30

Modifications by SingleStepJumpEliminator, iteration 1:
 
    35 label __label12
    36 set TARGET_MEMORY SOURCE_MEMORY
    37 set SOURCE_MEMORY block
-    * jump __label6 always
    38 label __label11
    39 label __label6
    40 label __label4
 
    51 op equal __tmp7 SOURCE_MEMORY null
    52 jump __label13 equal __tmp7 false
    53 print "\nNo memory."
-    * jump __label14 always
    54 label __label13
    55 label __label14
    56 printflush MESSAGE
 
    60 op equal __tmp9 TARGET_MEMORY null
    61 jump __label15 equal __tmp9 false
    62 set TARGET_MEMORY SOURCE_MEMORY
-    * jump __label16 always
    63 label __label15
    64 label __label16
    65 set startIndex 0
 
    86 set startIndex __tmp15
    87 op sub __tmp16 memSize 1
    88 set memSize __tmp16
-    * jump __label23 always
    89 label __label22
    90 label __label23
    91 set __tmp17 @tick
 
   112 op add __tmp28 prevTick TICKS
   113 set nextTick __tmp28
   114 set currTick prevTick
-    * jump __label28 always
   115 label __label27
   116 label __label28
   117 label __label29
 
   129 set __tmp35 @tick
   130 set currTick __tmp35
   131 set curr value
-    * jump __label35 always
   132 label __label34
   133 label __label35
   134 label __label33
 
   154 jump __label38 equal __tmp43 false
   155 op add __tmp45 startIndex 1
   156 set index __tmp45
-    * jump __label39 always
   157 label __label38
   158 label __label39
   159 write index TARGET_MEMORY startIndex

Modifications by OutputTempEliminator, iteration 1:
 
     4 op equal __tmp0 SOURCE_MEMORY null
     5 jump __label2 equal __tmp0 false
     6 print "Item Rate Meter"
-    * set __tmp1 @links
-    * set n __tmp1
+    7 set n @links
     8 label __label3
     9 op greaterThan __tmp2 n 0
    10 jump __label5 equal __tmp2 false
-    * op sub __tmp3 n 1
-    * set n __tmp3
-    * getlink __tmp4 n
-    * set block __tmp4
+   11 op sub n n 1
+   12 getlink block n
    13 print "\nFound: "
    14 print block
-    * sensor __tmp5 block @type
-    * set __ast0 __tmp5
+   15 sensor __ast0 block @type
    16 jump __label8 equal __ast0 @message
    17 jump __label7 always
    18 label __label8
 
    59 label __label15
    60 label __label16
    61 set startIndex 0
-    * sensor __tmp11 TARGET_MEMORY @type
-    * set __ast1 __tmp11
+   62 sensor __ast1 TARGET_MEMORY @type
    63 jump __label19 equal __ast1 @memory-cell
    64 jump __label18 always
    65 label __label19
 
    77 set memSize __tmp12
    78 op equal __tmp13 SOURCE_MEMORY TARGET_MEMORY
    79 jump __label22 equal __tmp13 false
-    * op idiv __tmp15 memSize 2
-    * set startIndex __tmp15
-    * op sub __tmp16 memSize 1
-    * set memSize __tmp16
+   80 op idiv startIndex memSize 2
+   81 op sub memSize memSize 1
    82 label __label22
    83 label __label23
-    * set __tmp17 @tick
-    * set prevTick __tmp17
-    * read __tmp18 SOURCE_MEMORY 0
-    * set prev __tmp18
+   84 set prevTick @tick
+   85 read prev SOURCE_MEMORY 0
    86 set currTick prevTick
    87 set curr prev
    88 read __tmp19 TARGET_MEMORY startIndex
-    * op max __tmp20 startIndex __tmp19
-    * set index __tmp20
+   89 op max index startIndex __tmp19
    90 set nextTick prevTick
    91 label __label24
    92 sensor __tmp21 switch1 @enabled
    93 op equal __tmp22 __tmp21 0
    94 jump __label26 equal __tmp22 false
-    * op add __tmp23 nextTick TICKS
-    * set nextTick __tmp23
+   95 op add nextTick nextTick TICKS
    96 op add __tmp24 nextTick TICKS
    97 op greaterThan __tmp25 @tick __tmp24
    98 jump __label27 equal __tmp25 false
-    * set __tmp27 @tick
-    * set prevTick __tmp27
-    * op add __tmp28 prevTick TICKS
-    * set nextTick __tmp28
+   99 set prevTick @tick
+  100 op add nextTick prevTick TICKS
   101 set currTick prevTick
   102 label __label27
   103 label __label28
 
   109 end
   110 jump __label33 always
   111 label __label32
-    * read __tmp32 SOURCE_MEMORY 0
-    * set value __tmp32
+  112 read value SOURCE_MEMORY 0
   113 op notEqual __tmp33 value curr
   114 jump __label34 equal __tmp33 false
-    * set __tmp35 @tick
-    * set currTick __tmp35
+  115 set currTick @tick
   116 set curr value
   117 label __label34
   118 label __label35
 
   120 label __label30
   121 jump __label29 always
   122 label __label31
-    * op sub __tmp36 curr prev
-    * set amount __tmp36
-    * op sub __tmp37 currTick prevTick
-    * set time __tmp37
+  123 op sub amount curr prev
+  124 op sub time currTick prevTick
   125 op equal __tmp38 amount 0
   126 jump __label36 equal __tmp38 false
   127 set rate 0
   128 jump __label37 always
   129 label __label36
   130 op div __tmp40 amount time
-    * op max __tmp41 __tmp40 0
-    * set rate __tmp41
+  131 op max rate __tmp40 0
   132 label __label37
-    * op add __tmp42 index 1
-    * set index __tmp42
+  133 op add index index 1
   134 op greaterThanEq __tmp43 index memSize
   135 jump __label38 equal __tmp43 false
-    * op add __tmp45 startIndex 1
-    * set index __tmp45
+  136 op add index startIndex 1
   137 label __label38
   138 label __label39
   139 write index TARGET_MEMORY startIndex

Modifications by ExpressionOptimizer, iteration 1:
 
   143 print "Total items: [gold]"
   144 print curr
   145 print "[]\n"
-    * op mul __tmp46 rate 3600
-    * op floor __tmp47 __tmp46
+  146 op idiv __tmp47 rate 0.0002777777777777778
   147 print "Current rate [green]"
   148 print __tmp47
   149 print "[]/min\n"

Modifications by ImproveNegativeConditionalJumps, iteration 1:
 
     1 set SOURCE_MEMORY null
     2 set TARGET_MEMORY null
     3 label __label0
-    * op equal __tmp0 SOURCE_MEMORY null
-    * jump __label2 equal __tmp0 false
+    4 jump __label2 notEqual SOURCE_MEMORY null
     5 print "Item Rate Meter"
     6 set n @links
     7 label __label3
-    * op greaterThan __tmp2 n 0
-    * jump __label5 equal __tmp2 false
+    8 jump __label5 lessThanEq n 0
     9 op sub n n 1
    10 getlink block n
    11 print "\nFound: "
 
    42 print SOURCE_MEMORY
    43 print "\nTarget memory: "
    44 print TARGET_MEMORY
-    * op equal __tmp7 SOURCE_MEMORY null
-    * jump __label13 equal __tmp7 false
+   45 jump __label13 notEqual SOURCE_MEMORY null
    46 print "\nNo memory."
    47 label __label13
    48 label __label14
 
    50 label __label1
    51 jump __label0 always
    52 label __label2
-    * op equal __tmp9 TARGET_MEMORY null
-    * jump __label15 equal __tmp9 false
+   53 jump __label15 notEqual TARGET_MEMORY null
    54 set TARGET_MEMORY SOURCE_MEMORY
    55 label __label15
    56 label __label16
 
    71 set __tmp12 0
    72 label __label17
    73 set memSize __tmp12
-    * op equal __tmp13 SOURCE_MEMORY TARGET_MEMORY
-    * jump __label22 equal __tmp13 false
+   74 jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
    75 op idiv startIndex memSize 2
    76 op sub memSize memSize 1
    77 label __label22
 
    85 set nextTick prevTick
    86 label __label24
    87 sensor __tmp21 switch1 @enabled
-    * op equal __tmp22 __tmp21 0
-    * jump __label26 equal __tmp22 false
+   88 jump __label26 notEqual __tmp21 0
    89 op add nextTick nextTick TICKS
    90 op add __tmp24 nextTick TICKS
-    * op greaterThan __tmp25 @tick __tmp24
-    * jump __label27 equal __tmp25 false
+   91 jump __label27 lessThanEq @tick __tmp24
    92 set prevTick @tick
    93 op add nextTick prevTick TICKS
    94 set currTick prevTick
    95 label __label27
    96 label __label28
    97 label __label29
-    * op lessThan __tmp29 @tick nextTick
-    * jump __label31 equal __tmp29 false
-    * op lessThan __tmp30 @tick prevTick
-    * jump __label32 equal __tmp30 false
+   98 jump __label31 greaterThanEq @tick nextTick
+   99 jump __label32 greaterThanEq @tick prevTick
   100 end
   101 jump __label33 always
   102 label __label32
   103 read value SOURCE_MEMORY 0
-    * op notEqual __tmp33 value curr
-    * jump __label34 equal __tmp33 false
+  104 jump __label34 equal value curr
   105 set currTick @tick
   106 set curr value
   107 label __label34
 
   112 label __label31
   113 op sub amount curr prev
   114 op sub time currTick prevTick
-    * op equal __tmp38 amount 0
-    * jump __label36 equal __tmp38 false
+  115 jump __label36 notEqual amount 0
   116 set rate 0
   117 jump __label37 always
   118 label __label36
 
   120 op max rate __tmp40 0
   121 label __label37
   122 op add index index 1
-    * op greaterThanEq __tmp43 index memSize
-    * jump __label38 equal __tmp43 false
+  123 jump __label38 lessThan index memSize
   124 op add index startIndex 1
   125 label __label38
   126 label __label39

Modifications by JumpOverJumpEliminator, iteration 1:
 
    11 print "\nFound: "
    12 print block
    13 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   14 jump __label7 notEqual __ast0 @message
    15 label __label8
    16 set MESSAGE block
    17 jump __label6 always
    18 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   19 jump __label9 notEqual __ast0 @switch
    20 label __label10
    21 set SWITCH block
    22 jump __label6 always
    23 label __label9
    24 jump __label12 equal __ast0 @memory-bank
-    * jump __label12 equal __ast0 @memory-cell
-    * jump __label11 always
+   25 jump __label11 notEqual __ast0 @memory-cell
    26 label __label12
    27 set TARGET_MEMORY SOURCE_MEMORY
    28 set SOURCE_MEMORY block
 
    53 label __label16
    54 set startIndex 0
    55 sensor __ast1 TARGET_MEMORY @type
-    * jump __label19 equal __ast1 @memory-cell
-    * jump __label18 always
+   56 jump __label18 notEqual __ast1 @memory-cell
    57 label __label19
    58 set __tmp12 64
    59 jump __label17 always
    60 label __label18
-    * jump __label21 equal __ast1 @memory-bank
-    * jump __label20 always
+   61 jump __label20 notEqual __ast1 @memory-bank
    62 label __label21
    63 set __tmp12 512
    64 jump __label17 always

Modifications by LoopOptimizer, iteration 1:
 
     2 set TARGET_MEMORY null
     3 label __label0
     4 jump __label2 notEqual SOURCE_MEMORY null
+    5 label __label40
     6 print "Item Rate Meter"
     7 set n @links
     8 label __label3
     9 jump __label5 lessThanEq n 0
+   10 label __label41
    11 op sub n n 1
    12 getlink block n
    13 print "\nFound: "
 
    31 label __label11
    32 label __label6
    33 label __label4
-    * jump __label3 always
+   34 jump __label41 greaterThan n 0
    35 label __label5
    36 print "\nMessage: "
    37 print MESSAGE
 
    47 label __label14
    48 printflush MESSAGE
    49 label __label1
-    * jump __label0 always
+   50 jump __label40 equal SOURCE_MEMORY null
    51 label __label2
    52 jump __label15 notEqual TARGET_MEMORY null
    53 set TARGET_MEMORY SOURCE_MEMORY
 
    83 label __label24
    84 sensor __tmp21 switch1 @enabled
    85 jump __label26 notEqual __tmp21 0
+   86 label __label42
    87 op add nextTick nextTick TICKS
    88 op add __tmp24 nextTick TICKS
    89 jump __label27 lessThanEq @tick __tmp24
 
    94 label __label28
    95 label __label29
    96 jump __label31 greaterThanEq @tick nextTick
+   97 label __label43
    98 jump __label32 greaterThanEq @tick prevTick
    99 end
   100 jump __label33 always
 
   107 label __label35
   108 label __label33
   109 label __label30
-    * jump __label29 always
+  110 jump __label43 lessThan @tick nextTick
   111 label __label31
   112 op sub amount curr prev
   113 op sub time currTick prevTick
 
   148 set prevTick currTick
   149 set prev curr
   150 label __label25
-    * jump __label24 always
+  151 sensor __tmp21 switch1 @enabled
+  152 jump __label42 equal __tmp21 0
   153 label __label26
   154 control enabled switch1 0
   155 end

Modifications by IfExpressionOptimizer, iteration 1:
 
   111 label __label31
   112 op sub amount curr prev
   113 op sub time currTick prevTick
-    * jump __label36 notEqual amount 0
   114 set rate 0
-    * jump __label37 always
+  115 jump __label37 equal amount 0
   116 label __label36
   117 op div __tmp40 amount time
   118 op max rate __tmp40 0

Modifications by DataFlowOptimizer, iteration 1:
 
    69 label __label17
    70 set memSize __tmp12
    71 jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
-    * op idiv startIndex memSize 2
-    * op sub memSize memSize 1
+   72 op idiv startIndex __tmp12 2
+   73 op sub memSize __tmp12 1
    74 label __label22
    75 label __label23
    76 set prevTick @tick

Modifications by UnreachableCodeEliminator, iteration 1:
 
    97 label __label43
    98 jump __label32 greaterThanEq @tick prevTick
    99 end
-    * jump __label33 always
   100 label __label32
   101 read value SOURCE_MEMORY 0
   102 jump __label34 equal value curr

Modifications by PrintMerger, iteration 1:
 
   123 label __label39
   124 write index TARGET_MEMORY startIndex
   125 write rate TARGET_MEMORY index
-    * print "Item Rate Meter"
-    * print "\n"
+  126 print "Item Rate Meter\n"
   127 print "Total items: [gold]"
   128 print curr
-    * print "[]\n"
   129 op idiv __tmp47 rate 0.0002777777777777778
-    * print "Current rate [green]"
+  130 print "[]\nCurrent rate [green]"
   131 print __tmp47
-    * print "[]/min\n"
-    * print "  memory start: [gold]"
+  132 print "[]/min\n  memory start: [gold]"
   133 print startIndex
-    * print "[]\n"
-    * print "  memory index: [gold]"
+  134 print "[]\n  memory index: [gold]"
   135 print index
-    * print "[]\n"
   136 op floor __tmp48 time
-    * print "[lightgray]Loop time: "
+  137 print "[]\n[lightgray]Loop time: "
   138 print __tmp48
   139 print " ms"
   140 printflush message1

Final code before resolving virtual instructions:

set TICKS 60
set SOURCE_MEMORY null
set TARGET_MEMORY null
label __label0
jump __label2 notEqual SOURCE_MEMORY null
label __label40
print "Item Rate Meter"
set n @links
label __label3
jump __label5 lessThanEq n 0
label __label41
op sub n n 1
getlink block n
print "\nFound: "
print block
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
label __label8
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
label __label10
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @memory-bank
jump __label11 notEqual __ast0 @memory-cell
label __label12
set TARGET_MEMORY SOURCE_MEMORY
set SOURCE_MEMORY block
label __label11
label __label6
label __label4
jump __label41 greaterThan n 0
label __label5
print "\nMessage: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nSource memory: "
print SOURCE_MEMORY
print "\nTarget memory: "
print TARGET_MEMORY
jump __label13 notEqual SOURCE_MEMORY null
print "\nNo memory."
label __label13
label __label14
printflush MESSAGE
label __label1
jump __label40 equal SOURCE_MEMORY null
label __label2
jump __label15 notEqual TARGET_MEMORY null
set TARGET_MEMORY SOURCE_MEMORY
label __label15
label __label16
set startIndex 0
sensor __ast1 TARGET_MEMORY @type
jump __label18 notEqual __ast1 @memory-cell
label __label19
set __tmp12 64
jump __label17 always 0 0
label __label18
jump __label20 notEqual __ast1 @memory-bank
label __label21
set __tmp12 512
jump __label17 always 0 0
label __label20
set __tmp12 0
label __label17
set memSize __tmp12
jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
op idiv startIndex __tmp12 2
op sub memSize __tmp12 1
label __label22
label __label23
set prevTick @tick
read prev SOURCE_MEMORY 0
set currTick prevTick
set curr prev
read __tmp19 TARGET_MEMORY startIndex
op max index startIndex __tmp19
set nextTick prevTick
label __label24
sensor __tmp21 switch1 @enabled
jump __label26 notEqual __tmp21 0
label __label42
op add nextTick nextTick TICKS
op add __tmp24 nextTick TICKS
jump __label27 lessThanEq @tick __tmp24
set prevTick @tick
op add nextTick prevTick TICKS
set currTick prevTick
label __label27
label __label28
label __label29
jump __label31 greaterThanEq @tick nextTick
label __label43
jump __label32 greaterThanEq @tick prevTick
end
label __label32
read value SOURCE_MEMORY 0
jump __label34 equal value curr
set currTick @tick
set curr value
label __label34
label __label35
label __label33
label __label30
jump __label43 lessThan @tick nextTick
label __label31
op sub amount curr prev
op sub time currTick prevTick
set rate 0
jump __label37 equal amount 0
label __label36
op div __tmp40 amount time
op max rate __tmp40 0
label __label37
op add index index 1
jump __label38 lessThan index memSize
op add index startIndex 1
label __label38
label __label39
write index TARGET_MEMORY startIndex
write rate TARGET_MEMORY index
print "Item Rate Meter\n"
print "Total items: [gold]"
print curr
op idiv __tmp47 rate 0.0002777777777777778
print "[]\nCurrent rate [green]"
print __tmp47
print "[]/min\n  memory start: [gold]"
print startIndex
print "[]\n  memory index: [gold]"
print index
op floor __tmp48 time 0
print "[]\n[lightgray]Loop time: "
print __tmp48
print " ms"
printflush message1
set prevTick currTick
set prev curr
label __label25
sensor __tmp21 switch1 @enabled
jump __label42 equal __tmp21 0
label __label26
control enabled switch1 0 0 0 0
end

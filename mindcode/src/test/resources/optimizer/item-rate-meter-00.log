   172 instructions before optimizations.
    20 instructions eliminated by DeadCodeEliminator (2 iterations).
     7 instructions eliminated by SingleStepJumpEliminator (1 iterations).
    16 instructions eliminated by OutputTempEliminator.
     1 instructions eliminated by ExpressionOptimizer.
    12 instructions eliminated by ImproveNegativeConditionalJumps.
     5 instructions eliminated by JumpOverJumpEliminator.
     4 loops improved by LoopOptimizer.
     1 instructions added by LoopOptimizer.
     1 instructions eliminated by IfExpressionOptimizer.
     1 instructions eliminated by UnreachableCodeEliminator (1 iterations).
     5 instructions eliminated by PrintMerger.
   105 instructions after optimizations.

Modifications by DeadCodeEliminator, iteration 1:
 
    20 jump __label7 always
    21 label __label8
    22 set MESSAGE block
-    * set __tmp5 block
    23 jump __label6 always
    24 label __label7
    25 jump __label10 equal __ast0 @switch
    26 jump __label9 always
    27 label __label10
    28 set SWITCH block
-    * set __tmp5 block
    29 jump __label6 always
    30 label __label9
    31 jump __label12 equal __ast0 @memory-bank
 
    34 label __label12
    35 set TARGET_MEMORY SOURCE_MEMORY
    36 set SOURCE_MEMORY block
-    * set __tmp5 block
    37 jump __label6 always
    38 label __label11
-    * set __tmp5 null
    39 label __label6
    40 label __label4
    41 jump __label3 always
 
    51 op equal __tmp6 SOURCE_MEMORY null
    52 jump __label13 equal __tmp6 false
    53 print "\nNo memory."
-    * set __tmp7 "\nNo memory."
    54 jump __label14 always
    55 label __label13
-    * set __tmp7 null
    56 label __label14
    57 printflush MESSAGE
    58 label __label1
 
    61 op equal __tmp8 TARGET_MEMORY null
    62 jump __label15 equal __tmp8 false
    63 set TARGET_MEMORY SOURCE_MEMORY
-    * set __tmp9 SOURCE_MEMORY
    64 jump __label16 always
    65 label __label15
-    * set __tmp9 null
    66 label __label16
    67 set startIndex 0
    68 sensor __tmp10 TARGET_MEMORY @type
 
    88 set startIndex __tmp14
    89 op sub __tmp15 memSize 1
    90 set memSize __tmp15
-    * set __tmp13 __tmp15
    91 jump __label23 always
    92 label __label22
-    * set __tmp13 null
    93 label __label23
    94 set prevTick @tick
    95 read __tmp16 SOURCE_MEMORY 0
 
   113 op add __tmp25 prevTick TICKS
   114 set nextTick __tmp25
   115 set currTick prevTick
-    * set __tmp24 prevTick
   116 jump __label28 always
   117 label __label27
-    * set __tmp24 null
   118 label __label28
   119 label __label29
   120 op lessThan __tmp26 @tick nextTick
 
   122 op lessThan __tmp27 @tick prevTick
   123 jump __label32 equal __tmp27 false
   124 end
-    * set __tmp28 null
   125 jump __label33 always
   126 label __label32
   127 read __tmp29 SOURCE_MEMORY 0
 
   135 label __label34
   136 set __tmp31 null
   137 label __label35
-    * set __tmp28 __tmp31
   138 label __label33
   139 label __label30
   140 jump __label29 always
 
   146 op equal __tmp34 amount 0
   147 jump __label36 equal __tmp34 false
   148 set rate 0
-    * set __tmp35 0
   149 jump __label37 always
   150 label __label36
   151 op div __tmp36 amount time
   152 op max __tmp37 __tmp36 0
   153 set rate __tmp37
-    * set __tmp35 __tmp37
   154 label __label37
   155 op add __tmp38 index 1
   156 set index __tmp38
 
   158 jump __label38 equal __tmp39 false
   159 op add __tmp41 startIndex 1
   160 set index __tmp41
-    * set __tmp40 __tmp41
   161 jump __label39 always
   162 label __label38
-    * set __tmp40 null
   163 label __label39
   164 write index TARGET_MEMORY startIndex
   165 write rate TARGET_MEMORY index

Modifications by DeadCodeEliminator, iteration 2:
 
   130 jump __label34 equal __tmp30 false
   131 set currTick @tick
   132 set curr value
-    * set __tmp31 value
   133 jump __label35 always
   134 label __label34
-    * set __tmp31 null
   135 label __label35
   136 label __label33
   137 label __label30

Modifications by SingleStepJumpEliminator, iteration 1:
 
    34 label __label12
    35 set TARGET_MEMORY SOURCE_MEMORY
    36 set SOURCE_MEMORY block
-    * jump __label6 always
    37 label __label11
    38 label __label6
    39 label __label4
 
    50 op equal __tmp6 SOURCE_MEMORY null
    51 jump __label13 equal __tmp6 false
    52 print "\nNo memory."
-    * jump __label14 always
    53 label __label13
    54 label __label14
    55 printflush MESSAGE
 
    59 op equal __tmp8 TARGET_MEMORY null
    60 jump __label15 equal __tmp8 false
    61 set TARGET_MEMORY SOURCE_MEMORY
-    * jump __label16 always
    62 label __label15
    63 label __label16
    64 set startIndex 0
 
    85 set startIndex __tmp14
    86 op sub __tmp15 memSize 1
    87 set memSize __tmp15
-    * jump __label23 always
    88 label __label22
    89 label __label23
    90 set prevTick @tick
 
   109 op add __tmp25 prevTick TICKS
   110 set nextTick __tmp25
   111 set currTick prevTick
-    * jump __label28 always
   112 label __label27
   113 label __label28
   114 label __label29
 
   125 jump __label34 equal __tmp30 false
   126 set currTick @tick
   127 set curr value
-    * jump __label35 always
   128 label __label34
   129 label __label35
   130 label __label33
 
   150 jump __label38 equal __tmp39 false
   151 op add __tmp41 startIndex 1
   152 set index __tmp41
-    * jump __label39 always
   153 label __label38
   154 label __label39
   155 write index TARGET_MEMORY startIndex

Modifications by OutputTempEliminator, iteration 1:
 
     8 label __label3
     9 op greaterThan __tmp1 n 0
    10 jump __label5 equal __tmp1 false
-    * op sub __tmp2 n 1
-    * set n __tmp2
-    * getlink __tmp3 n
-    * set block __tmp3
+   11 op sub n n 1
+   12 getlink block n
    13 print "\nFound: "
    14 print block
-    * sensor __tmp4 block @type
-    * set __ast0 __tmp4
+   15 sensor __ast0 block @type
    16 jump __label8 equal __ast0 @message
    17 jump __label7 always
    18 label __label8
 
    59 label __label15
    60 label __label16
    61 set startIndex 0
-    * sensor __tmp10 TARGET_MEMORY @type
-    * set __ast1 __tmp10
+   62 sensor __ast1 TARGET_MEMORY @type
    63 jump __label19 equal __ast1 @memory-cell
    64 jump __label18 always
    65 label __label19
 
    77 set memSize __tmp11
    78 op equal __tmp12 SOURCE_MEMORY TARGET_MEMORY
    79 jump __label22 equal __tmp12 false
-    * op idiv __tmp14 memSize 2
-    * set startIndex __tmp14
-    * op sub __tmp15 memSize 1
-    * set memSize __tmp15
+   80 op idiv startIndex memSize 2
+   81 op sub memSize memSize 1
    82 label __label22
    83 label __label23
    84 set prevTick @tick
-    * read __tmp16 SOURCE_MEMORY 0
-    * set prev __tmp16
+   85 read prev SOURCE_MEMORY 0
    86 set currTick prevTick
    87 set curr prev
    88 read __tmp17 TARGET_MEMORY startIndex
-    * op max __tmp18 startIndex __tmp17
-    * set index __tmp18
+   89 op max index startIndex __tmp17
    90 set nextTick prevTick
    91 label __label24
    92 sensor __tmp19 switch1 @enabled
    93 op equal __tmp20 __tmp19 0
    94 jump __label26 equal __tmp20 false
-    * op add __tmp21 nextTick TICKS
-    * set nextTick __tmp21
+   95 op add nextTick nextTick TICKS
    96 op add __tmp22 nextTick TICKS
    97 op greaterThan __tmp23 @tick __tmp22
    98 jump __label27 equal __tmp23 false
    99 set prevTick @tick
-    * op add __tmp25 prevTick TICKS
-    * set nextTick __tmp25
+  100 op add nextTick prevTick TICKS
   101 set currTick prevTick
   102 label __label27
   103 label __label28
 
   109 end
   110 jump __label33 always
   111 label __label32
-    * read __tmp29 SOURCE_MEMORY 0
-    * set value __tmp29
+  112 read value SOURCE_MEMORY 0
   113 op notEqual __tmp30 value curr
   114 jump __label34 equal __tmp30 false
   115 set currTick @tick
 
   120 label __label30
   121 jump __label29 always
   122 label __label31
-    * op sub __tmp32 curr prev
-    * set amount __tmp32
-    * op sub __tmp33 currTick prevTick
-    * set time __tmp33
+  123 op sub amount curr prev
+  124 op sub time currTick prevTick
   125 op equal __tmp34 amount 0
   126 jump __label36 equal __tmp34 false
   127 set rate 0
   128 jump __label37 always
   129 label __label36
   130 op div __tmp36 amount time
-    * op max __tmp37 __tmp36 0
-    * set rate __tmp37
+  131 op max rate __tmp36 0
   132 label __label37
-    * op add __tmp38 index 1
-    * set index __tmp38
+  133 op add index index 1
   134 op greaterThanEq __tmp39 index memSize
   135 jump __label38 equal __tmp39 false
-    * op add __tmp41 startIndex 1
-    * set index __tmp41
+  136 op add index startIndex 1
   137 label __label38
   138 label __label39
   139 write index TARGET_MEMORY startIndex

Modifications by ExpressionOptimizer, iteration 1:
 
   143 print "Total items: [gold]"
   144 print curr
   145 print "[]\n"
-    * op mul __tmp42 rate 3600
-    * op floor __tmp43 __tmp42
+  146 op idiv __tmp43 rate 0.0002777777777777778
   147 print "Current rate [green]"
   148 print __tmp43
   149 print "[]/min\n"

Modifications by ImproveNegativeConditionalJumps, iteration 1:
 
     1 set SOURCE_MEMORY null
     2 set TARGET_MEMORY null
     3 label __label0
-    * op equal __tmp0 SOURCE_MEMORY null
-    * jump __label2 equal __tmp0 false
+    4 jump __label2 notEqual SOURCE_MEMORY null
     5 print "Item Rate Meter"
     6 set n @links
     7 label __label3
-    * op greaterThan __tmp1 n 0
-    * jump __label5 equal __tmp1 false
+    8 jump __label5 lessThanEq n 0
     9 op sub n n 1
    10 getlink block n
    11 print "\nFound: "
 
    42 print SOURCE_MEMORY
    43 print "\nTarget memory: "
    44 print TARGET_MEMORY
-    * op equal __tmp6 SOURCE_MEMORY null
-    * jump __label13 equal __tmp6 false
+   45 jump __label13 notEqual SOURCE_MEMORY null
    46 print "\nNo memory."
    47 label __label13
    48 label __label14
 
    50 label __label1
    51 jump __label0 always
    52 label __label2
-    * op equal __tmp8 TARGET_MEMORY null
-    * jump __label15 equal __tmp8 false
+   53 jump __label15 notEqual TARGET_MEMORY null
    54 set TARGET_MEMORY SOURCE_MEMORY
    55 label __label15
    56 label __label16
 
    71 set __tmp11 0
    72 label __label17
    73 set memSize __tmp11
-    * op equal __tmp12 SOURCE_MEMORY TARGET_MEMORY
-    * jump __label22 equal __tmp12 false
+   74 jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
    75 op idiv startIndex memSize 2
    76 op sub memSize memSize 1
    77 label __label22
 
    85 set nextTick prevTick
    86 label __label24
    87 sensor __tmp19 switch1 @enabled
-    * op equal __tmp20 __tmp19 0
-    * jump __label26 equal __tmp20 false
+   88 jump __label26 notEqual __tmp19 0
    89 op add nextTick nextTick TICKS
    90 op add __tmp22 nextTick TICKS
-    * op greaterThan __tmp23 @tick __tmp22
-    * jump __label27 equal __tmp23 false
+   91 jump __label27 lessThanEq @tick __tmp22
    92 set prevTick @tick
    93 op add nextTick prevTick TICKS
    94 set currTick prevTick
    95 label __label27
    96 label __label28
    97 label __label29
-    * op lessThan __tmp26 @tick nextTick
-    * jump __label31 equal __tmp26 false
-    * op lessThan __tmp27 @tick prevTick
-    * jump __label32 equal __tmp27 false
+   98 jump __label31 greaterThanEq @tick nextTick
+   99 jump __label32 greaterThanEq @tick prevTick
   100 end
   101 jump __label33 always
   102 label __label32
   103 read value SOURCE_MEMORY 0
-    * op notEqual __tmp30 value curr
-    * jump __label34 equal __tmp30 false
+  104 jump __label34 equal value curr
   105 set currTick @tick
   106 set curr value
   107 label __label34
 
   112 label __label31
   113 op sub amount curr prev
   114 op sub time currTick prevTick
-    * op equal __tmp34 amount 0
-    * jump __label36 equal __tmp34 false
+  115 jump __label36 notEqual amount 0
   116 set rate 0
   117 jump __label37 always
   118 label __label36
 
   120 op max rate __tmp36 0
   121 label __label37
   122 op add index index 1
-    * op greaterThanEq __tmp39 index memSize
-    * jump __label38 equal __tmp39 false
+  123 jump __label38 lessThan index memSize
   124 op add index startIndex 1
   125 label __label38
   126 label __label39

Modifications by JumpOverJumpEliminator, iteration 1:
 
    11 print "\nFound: "
    12 print block
    13 sensor __ast0 block @type
-    * jump __label8 equal __ast0 @message
-    * jump __label7 always
+   14 jump __label7 notEqual __ast0 @message
    15 label __label8
    16 set MESSAGE block
    17 jump __label6 always
    18 label __label7
-    * jump __label10 equal __ast0 @switch
-    * jump __label9 always
+   19 jump __label9 notEqual __ast0 @switch
    20 label __label10
    21 set SWITCH block
    22 jump __label6 always
    23 label __label9
    24 jump __label12 equal __ast0 @memory-bank
-    * jump __label12 equal __ast0 @memory-cell
-    * jump __label11 always
+   25 jump __label11 notEqual __ast0 @memory-cell
    26 label __label12
    27 set TARGET_MEMORY SOURCE_MEMORY
    28 set SOURCE_MEMORY block
 
    53 label __label16
    54 set startIndex 0
    55 sensor __ast1 TARGET_MEMORY @type
-    * jump __label19 equal __ast1 @memory-cell
-    * jump __label18 always
+   56 jump __label18 notEqual __ast1 @memory-cell
    57 label __label19
    58 set __tmp11 64
    59 jump __label17 always
    60 label __label18
-    * jump __label21 equal __ast1 @memory-bank
-    * jump __label20 always
+   61 jump __label20 notEqual __ast1 @memory-bank
    62 label __label21
    63 set __tmp11 512
    64 jump __label17 always

Modifications by LoopOptimizer, iteration 1:
 
     2 set TARGET_MEMORY null
     3 label __label0
     4 jump __label2 notEqual SOURCE_MEMORY null
+    5 label __label40
     6 print "Item Rate Meter"
     7 set n @links
     8 label __label3
     9 jump __label5 lessThanEq n 0
+   10 label __label41
    11 op sub n n 1
    12 getlink block n
    13 print "\nFound: "
 
    31 label __label11
    32 label __label6
    33 label __label4
-    * jump __label3 always
+   34 jump __label41 greaterThan n 0
    35 label __label5
    36 print "\nMessage: "
    37 print MESSAGE
 
    47 label __label14
    48 printflush MESSAGE
    49 label __label1
-    * jump __label0 always
+   50 jump __label40 equal SOURCE_MEMORY null
    51 label __label2
    52 jump __label15 notEqual TARGET_MEMORY null
    53 set TARGET_MEMORY SOURCE_MEMORY
 
    83 label __label24
    84 sensor __tmp19 switch1 @enabled
    85 jump __label26 notEqual __tmp19 0
+   86 label __label42
    87 op add nextTick nextTick TICKS
    88 op add __tmp22 nextTick TICKS
    89 jump __label27 lessThanEq @tick __tmp22
 
    94 label __label28
    95 label __label29
    96 jump __label31 greaterThanEq @tick nextTick
+   97 label __label43
    98 jump __label32 greaterThanEq @tick prevTick
    99 end
   100 jump __label33 always
 
   107 label __label35
   108 label __label33
   109 label __label30
-    * jump __label29 always
+  110 jump __label43 lessThan @tick nextTick
   111 label __label31
   112 op sub amount curr prev
   113 op sub time currTick prevTick
 
   148 set prevTick currTick
   149 set prev curr
   150 label __label25
-    * jump __label24 always
+  151 sensor __tmp19 switch1 @enabled
+  152 jump __label42 equal __tmp19 0
   153 label __label26
   154 control enabled switch1 0
   155 end

Modifications by IfExpressionOptimizer, iteration 1:
 
   111 label __label31
   112 op sub amount curr prev
   113 op sub time currTick prevTick
-    * jump __label36 notEqual amount 0
   114 set rate 0
-    * jump __label37 always
+  115 jump __label37 equal amount 0
   116 label __label36
   117 op div __tmp36 amount time
   118 op max rate __tmp36 0

Modifications by DataFlowOptimizer, iteration 1:
 
    69 label __label17
    70 set memSize __tmp11
    71 jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
-    * op idiv startIndex memSize 2
-    * op sub memSize memSize 1
+   72 op idiv startIndex __tmp11 2
+   73 op sub memSize __tmp11 1
    74 label __label22
    75 label __label23
    76 set prevTick @tick

Modifications by UnreachableCodeEliminator, iteration 1:
 
    97 label __label43
    98 jump __label32 greaterThanEq @tick prevTick
    99 end
-    * jump __label33 always
   100 label __label32
   101 read value SOURCE_MEMORY 0
   102 jump __label34 equal value curr

Modifications by PrintMerger, iteration 1:
 
   123 label __label39
   124 write index TARGET_MEMORY startIndex
   125 write rate TARGET_MEMORY index
-    * print "Item Rate Meter"
-    * print "\n"
+  126 print "Item Rate Meter\n"
   127 print "Total items: [gold]"
   128 print curr
-    * print "[]\n"
   129 op idiv __tmp43 rate 0.0002777777777777778
-    * print "Current rate [green]"
+  130 print "[]\nCurrent rate [green]"
   131 print __tmp43
-    * print "[]/min\n"
-    * print "  memory start: [gold]"
+  132 print "[]/min\n  memory start: [gold]"
   133 print startIndex
-    * print "[]\n"
-    * print "  memory index: [gold]"
+  134 print "[]\n  memory index: [gold]"
   135 print index
-    * print "[]\n"
   136 op floor __tmp44 time
-    * print "[lightgray]Loop time: "
+  137 print "[]\n[lightgray]Loop time: "
   138 print __tmp44
   139 print " ms"
   140 printflush message1

Final code before resolving virtual instructions:

set TICKS 60
set SOURCE_MEMORY null
set TARGET_MEMORY null
label __label0
jump __label2 notEqual SOURCE_MEMORY null
label __label40
print "Item Rate Meter"
set n @links
label __label3
jump __label5 lessThanEq n 0
label __label41
op sub n n 1
getlink block n
print "\nFound: "
print block
sensor __ast0 block @type
jump __label7 notEqual __ast0 @message
label __label8
set MESSAGE block
jump __label6 always 0 0
label __label7
jump __label9 notEqual __ast0 @switch
label __label10
set SWITCH block
jump __label6 always 0 0
label __label9
jump __label12 equal __ast0 @memory-bank
jump __label11 notEqual __ast0 @memory-cell
label __label12
set TARGET_MEMORY SOURCE_MEMORY
set SOURCE_MEMORY block
label __label11
label __label6
label __label4
jump __label41 greaterThan n 0
label __label5
print "\nMessage: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nSource memory: "
print SOURCE_MEMORY
print "\nTarget memory: "
print TARGET_MEMORY
jump __label13 notEqual SOURCE_MEMORY null
print "\nNo memory."
label __label13
label __label14
printflush MESSAGE
label __label1
jump __label40 equal SOURCE_MEMORY null
label __label2
jump __label15 notEqual TARGET_MEMORY null
set TARGET_MEMORY SOURCE_MEMORY
label __label15
label __label16
set startIndex 0
sensor __ast1 TARGET_MEMORY @type
jump __label18 notEqual __ast1 @memory-cell
label __label19
set __tmp11 64
jump __label17 always 0 0
label __label18
jump __label20 notEqual __ast1 @memory-bank
label __label21
set __tmp11 512
jump __label17 always 0 0
label __label20
set __tmp11 0
label __label17
set memSize __tmp11
jump __label22 notEqual SOURCE_MEMORY TARGET_MEMORY
op idiv startIndex __tmp11 2
op sub memSize __tmp11 1
label __label22
label __label23
set prevTick @tick
read prev SOURCE_MEMORY 0
set currTick prevTick
set curr prev
read __tmp17 TARGET_MEMORY startIndex
op max index startIndex __tmp17
set nextTick prevTick
label __label24
sensor __tmp19 switch1 @enabled
jump __label26 notEqual __tmp19 0
label __label42
op add nextTick nextTick TICKS
op add __tmp22 nextTick TICKS
jump __label27 lessThanEq @tick __tmp22
set prevTick @tick
op add nextTick prevTick TICKS
set currTick prevTick
label __label27
label __label28
label __label29
jump __label31 greaterThanEq @tick nextTick
label __label43
jump __label32 greaterThanEq @tick prevTick
end
label __label32
read value SOURCE_MEMORY 0
jump __label34 equal value curr
set currTick @tick
set curr value
label __label34
label __label35
label __label33
label __label30
jump __label43 lessThan @tick nextTick
label __label31
op sub amount curr prev
op sub time currTick prevTick
set rate 0
jump __label37 equal amount 0
label __label36
op div __tmp36 amount time
op max rate __tmp36 0
label __label37
op add index index 1
jump __label38 lessThan index memSize
op add index startIndex 1
label __label38
label __label39
write index TARGET_MEMORY startIndex
write rate TARGET_MEMORY index
print "Item Rate Meter\n"
print "Total items: [gold]"
print curr
op idiv __tmp43 rate 0.0002777777777777778
print "[]\nCurrent rate [green]"
print __tmp43
print "[]/min\n  memory start: [gold]"
print startIndex
print "[]\n  memory index: [gold]"
print index
op floor __tmp44 time 0
print "[]\n[lightgray]Loop time: "
print __tmp44
print " ms"
printflush message1
set prevTick currTick
set prev curr
label __label25
sensor __tmp19 switch1 @enabled
jump __label42 equal __tmp19 0
label __label26
control enabled switch1 0 0 0 0
end
